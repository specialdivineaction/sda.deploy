{"version":3,"sources":["scripts/app.js"],"names":["angular","module","graphRepoProvider","graphRepoFactory","$resource","getGraph","type","restResource","get","provider","url","repo","$inject","$get","peopleRepoProvider","peopleRepoFactory","$q","createPerson","person","adaptPerson","createMeta","meta","adaptMeta","createName","name","adaptName","createEvent","evt","adaptEvent","createDateDescription","dateDescription","findById","id","search","query","q","savePerson","response","update","save","$promise","then","personId","deletePerson","altNames","forEach","birth","death","links","date","method","create","trcPersonEditorDirective","PersonEditorController","$scope","peopleRepo","addName","newName","push","removeName","ix","splice","addEvent","key","newEvent","removeEvent","vm","this","directive","restrict","templateUrl","scope","controller","controllerAs","trcNameEditorDirective","NameEditorController","roles","value","label","trcEventEditorDirective","event","worksRepoProvider","worksRepoFactory","findAll","max","searchByAuthor","authorId","aid","getWork","workId","isUndefined","TypeError","work","adaptWork","getEdition","editionId","edition","editionResource","adaptEdition","getVolume","volumeId","volume","volumeResource","adaptVolume","createWork","titles","authors","createEdition","createVolume","arguments","length","saveWork","apply","saveEdition","saveVolume","Error","$update","$save","deleteWork","dataItem","adaptCommon","entity","title","toLowerCase","author","role","otherAuthors","copies","editions","volumes","getTitleByTypePreference","types","isArray","reduce","found","i","getAll","getTitle","MainController","$http","$mdToast","$location","$stateParams","worksRepo","graphRepo","activate","defaultGraphType","graphType","graphLoading","getGraphData","showSimple","data","graph","$watch","node","sidebarLoading","loadNodeData","makeTypeGroup","group","directed","out","nodes","reverseTitle","none","ensureTypeGroup","related","hasOwnProperty","works","worksP","items","TYPES","uk.ac.ox.bodleian.sda.relationships.influence","uk.ac.ox.bodleian.sda.relationships.provoked","uk.ac.ox.bodleian.sda.relationships.consonance","uk.ac.ox.bodleian.sda.relationships.patternmatch","outEdges","map","edge","relation","target","inEdges","source","all","nodesById","edges","activeNode","conceptBrowserDirective","$window","$timeout","linkFunc","el","width","autoWidth","height","autoHeight","layout","rootEl","ConceptBrowser","size","refresh","element","on","oldWidth","oldHeight","preventActivate","$apply","$watchGroup","newValues","oldValues","queueRefresh","graphData","copy","padding","link","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","otherwise","config","constant","d3","moment","$logProvider","$mdThemingProvider","debugEnabled","definePalette","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","contrastDarkColors","theme","primaryPalette","accentPalette","root","factory","define","amd","exports","EventDispatcher","trigger","eventName","context","eventHandlers","handler","e","console","error","globalHandlers","addGlobalListener","indexOf","addListener","addOnceListener","deregister","API","once","require","dragstart","d","fixed","dragend","mouseover","px","x","py","y","mouseout","accumulate","quad","alpha","charges","cx","cy","charge","leaf","c","n","point","Math","random","k","index","pointCharge","isFunction","o","isNumber","LINK_DISTANCE","LINK_STRENGTH","CHARGE_DISTANCE_2","Infinity","force","cylindrical","wrapDx","dx","abs","repulse","x1","_","x2","dy","dw","dn","theta2","chargeDistance2","dragmove","resume","drag","distances","strengths","dispatch","friction","linkDistance","linkStrength","gravity","tick","end","s","t","l","m","sqrt","weight","geom","quadtree","visit","chargeDistance","theta","start","timer","position","dimension","neighbors","Array","j","candidates","cs","isNaN","w","h","call","stop","behavior","origin","edgePath","getX1","getY1","getX2","getY2","drawLine","selection","attr","y1","y2","fn","rebind","options","setSize","dims","isInitialized","svg","progressScale","range","setData","_nodes","_edges","setActivated","deselectAll","select","initialize","bindNodes","bindEdges","scalePageRank","pow","append","edgeTypes","defineArrowheads","baseGroup","edgeLayer","nodeLayer","progressBar","scale","linear","domain","log","nodeRadiusScale","NODE_MIN_SIZE","NODE_MAX_SIZE","GRAPH_LAYOUT_CTORS","configureGraph","drawEdge","tip","tooltip","TIP_CSS_CLASS","direction","tooltipDirection","offset","tooltipOffset","html","events","showTooltip","hideTooltip","updateEgoGraphs","pagerank","extractPagerank","chargeRange","influenceRange","updatePositions","selectAll","transition","duration","nodeSelect","nodeEnter","enter","focus","blur","ctrlKey","selected","deselect","exit","remove","edgeSelect","style","multiplicity","metadata","focused","activated","deactivate","show","hide","isNodeActivated","isNodeSelected","isNodeFocused","isEdgeActivated","isEdgeSelected","isEdgeFocused","classed","some","cls","min","dir","TIP_POSITION_MARGIN","bottom","top","right","left","radius","left_right","classTypes","arrowTypes","planar","warn","$templateCache","put"],"mappings":"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","file":"scripts/app-aed18d871a.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular\n    .module('trcGraph', [\n      'ngResource'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcGraph')\n    .provider('graphRepo', graphRepoProvider);\n\n  function graphRepoProvider() {\n    var provider = {};\n    provider.url = '/api/graph';\n    provider.$get = graphRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function graphRepoFactory($resource) {\n      var restResource = $resource(provider.url + '/:type');\n\n      var repo = {};\n      repo.get = getGraph;\n      return repo;\n\n      /**\n       * Retrieves a graph by type identifier\n       *\n       * @param  {string} type\n       * @return {Graph}\n       */\n      function getGraph(type) {\n        return restResource.get({ type: type });\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio', [\n      'ngResource'\n    ]);\n\n})();\n\n/**\n * Data model representing a person returned by the TRC REST API\n * @typedef Person\n * @type {object}\n * @property {string}           id       - a unique identifier for this person; assigned upon creation\n * @property {EntryMeta}        meta     - metadata about the record and its history in the system\n * @property {PersonName}       name     - primary name used to identify this person\n * @property {PersonName[]}     altNames - other names by which this person is known\n * @property {?HistoricalEvent} birth    - the date and location this person was born; may be null if unknown\n * @property {?HistoricalEvent} death    - the date and location this person was born; may be null if unknown or still alive\n * @property {string}           summary  - an HTML summary of the person and his or her significance\n */\n\n/**\n * Simplified, lightweight representation of a person for use in search results\n * @typedef Person\n * @type {object}\n * @property {string}     id             - a unique identifier for the person\n * @property {EntryMeta}  meta           - metadata about the record and its history in the system\n * @property {PersonName} name           - structured name representation\n * @property {string}     label          - formatted name to display\n * @property {string}     summaryExcerpt - a leading excerpt from the full summary\n */\n\n/**\n * Metadata about a TRC entry\n * @typedef EntryMeta\n * @type {object}\n * @property {string}                      slug         - a short, unique identifier intended to be more human-readable than the id\n * @property {integer}                     version      - a monotonically increasing version number incremented on each change\n * @property {object.<string, SimpleLink>} links        - links to related resources; keyed by link role\n * @property {string}                      lastModified - ISO 8601 timestamp of the last modification date\n */\n\n/**\n * Container for linking to related entities\n * @typedef SimpleLink\n * @type {object}\n * @property {string} uri  - a URI representing the linked item\n * @property {string} type - MIME type of the related linked item\n */\n\n/**\n * Structured form of a person's name\n * @typedef PersonName\n * @type {object}\n * @property {string} role        - clarifies the use of this name\n * @property {string} label       - a simple representation of this name for display purposes\n * @property {?string} title      - title of address\n * @property {?string} givenName  - given or first name\n * @property {?string} middleName - middle name\n * @property {?string} familyName - family or last name\n * @property {?string} suffix     - a suffix (e.g. 'Jr' or 'III')\n */\n\n/**\n * Event with a date/time, location, and descriptive information\n * @typedef HistoricalEvent\n * @type {object}\n * @property {string}          id          - a unique identifier for this event\n * @property {string}          title       - a brief title of the event for display purposes\n * @property {string}          description - a detailed summary of the event\n * @property {string}          location    - the location in which the event took place\n * @property {DateDescription} date        - the date the event took place\n */\n\n/**\n * Container for encapsulating human-readable and machine-readable forms of a date.\n * @typedef DateDescription\n * @type {object}\n * @property {string} calendar    - machine-readable ISO 8601 timestamp\n * @property {string} description - human-readable description of this date\n */\n\n/**\n * Container for search results\n * @typedef PersonSearchResultSet\n * @type {object}\n * @property {SimplePerson[]} items  - search results\n * @property {string}         qs     - query string that gives the current set of search results\n * @property {?string}        qsNext - query string that gives next set of search results or null if this is the last set\n * @property {?string}        qsPrev - query string that gives preceding set of search results or null if this is the first set\n */\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .provider('peopleRepo', peopleRepoProvider);\n\n\n  function peopleRepoProvider() {\n    var provider = {};\n    provider.url = '/api/people';\n    provider.$get = peopleRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function peopleRepoFactory($q, $resource) {\n      var restResource = $resource(provider.url + '/:id', null, {\n        'update': { method: 'PUT' }\n      });\n\n      var repo = {};\n      repo.create = createPerson;\n      repo.createName = createName;\n      repo.createEvent = createEvent;\n      repo.get = findById;\n      repo.search = search;\n      repo.save = savePerson;\n      repo.delete = deletePerson;\n      return repo;\n\n      /**\n       * Creates a new empty person instance.\n       *\n       * @return {Person}\n       */\n      function createPerson() {\n        var person = new restResource();\n        return adaptPerson(person);\n      }\n\n      /**\n       * Creates a new empty entry metadata instance\n       *\n       * @return {EntryMeta}\n       */\n      function createMeta() {\n        var meta = {};\n        return adaptMeta(meta);\n      }\n\n      /**\n       * Creates a new empty name instance\n       *\n       * @return {PersonName}\n       */\n      function createName() {\n        var name = {};\n        return adaptName(name);\n      }\n\n      /**\n       * Creates a new historical event instance\n       *\n       * @return {HistoricalEvent}\n       */\n      function createEvent() {\n        var evt = {};\n        return adaptEvent(evt);\n      }\n\n      /**\n       * Creates a date/description instance\n       *\n       * @return {DateDescription}\n       */\n      function createDateDescription() {\n        var dateDescription = {};\n        return dateDescription;\n      }\n\n      /**\n       * Retrieves a person object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promise is available on Person.$promise.\n       *\n       * @param  {string} id\n       * @return {Person}\n       */\n      function findById(id) {\n        return restResource.get({ id: id });\n      }\n\n      /**\n       * Retrieves a serch result set of people who match the given query.\n       *\n       * @param {string} query\n       * @return {PersonSearchResultSet}\n       */\n      function search(query) {\n        return restResource.get({ q: query });\n      }\n\n      /**\n       * Saves a person model to the REST API.\n       *\n       * If no ID is provided on the person model, the API will create save the model as a new\n       * person. Otherwise, the API will attempt to update the existing person model with that ID.\n       *\n       * @param {Person} person\n       * @return {Promise.<Person>} - resolves to the saved person on success\n       */\n      function savePerson(person) {\n        var response;\n        if (person.id) {\n          response = restResource.update({ id: person.id }, person);\n        } else {\n          response = restResource.save(null, person);\n        }\n\n        return response.$promise.then(function (personId) {\n          person.id = personId.id;\n          return person;\n        });\n      }\n\n      /**\n       * Deletes a person on the server via the REST API.\n       *\n       * @param {Person|string} idOrPerson\n       * @return {Promise} - resolves on success\n       */\n      function deletePerson(id) {\n        var response = restResource.delete({ id: id });\n        return response.$promise;\n      }\n\n      /**\n       * Populates a person with aggregate fields\n       *\n       * @param  {Person} person\n       * @return {Person}\n       */\n      function adaptPerson(person) {\n        if (!person.meta) {\n          person.meta = createMeta();\n        } else {\n          adaptMeta(person.meta);\n        }\n\n        if (!person.name) {\n          person.name = createName();\n        } else {\n          adaptName(person.name);\n        }\n\n        if (!person.altNames) {\n          person.altNames = [];\n        } else {\n          person.altNames.forEach(adaptName);\n        }\n\n        if (!person.birth) {\n          person.birth = createEvent();\n        } else {\n          adaptEvent(person.birth);\n        }\n\n        if (!person.death) {\n          person.death = createEvent();\n        } else {\n          adaptEvent(person.death);\n        }\n\n        return person\n      }\n\n      /**\n       * Ensure that entry metadata aggregate fields exist and are formatted correctly.\n       *\n       * @param  {EntryMeta} meta\n       * @return {EntryMeta}\n       */\n      function adaptMeta(meta) {\n        if (!meta.links) {\n          meta.links = {};\n        }\n\n        return meta;\n      }\n\n      /**\n       * Ensure that name aggregate fields exist and are formatted correctly\n       * @param  {PersonName} name\n       * @return {PersonName}\n       */\n      function adaptName(name) {\n        // no aggregate fields yet...\n        return name;\n      }\n\n      /**\n       * Ensure that event aggregate fields exist and are formatted correctly.\n       *\n       * @param  {HistoricalEvent} evt\n       * @return {HistoricalEvent}\n       */\n      function adaptEvent(evt) {\n        if (!evt.date) {\n          evt.date = createDateDescription();\n        }\n\n        return evt;\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .directive('trcPersonEditor', trcPersonEditorDirective);\n\n  /** @ngInject */\n  function trcPersonEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/trc-bio/person-editor.html',\n      scope: {\n        person: '=ngModel'\n      },\n      controller: PersonEditorController,\n      controllerAs: 'personEditor'\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PersonEditorController($scope, peopleRepo) {\n      var vm = this;\n\n      vm.addName = addName;\n      vm.removeName = removeName;\n      vm.addEvent = addEvent;\n      vm.removeEvent = removeEvent;\n\n      /**\n       * Adds a name to the current person model.\n       */\n      function addName() {\n        var newName = peopleRepo.createName();\n        $scope.person.altNames.push(newName);\n      }\n\n      /**\n       * Removes the name at the specified index from the current person model.\n       *\n       * @param {integer} ix\n       */\n      function removeName(ix) {\n        $scope.person.altNames.splice(ix, 1);\n      }\n\n      /**\n       * Adds an event to the current person model.\n       *\n       * @param {string} key - 'birth' or 'death'\n       */\n      function addEvent(key) {\n        var newEvent = peopleRepo.createEvent();\n        $scope.person[key] = newEvent;\n      }\n\n      /**\n       * Removes the event from the current person model.\n       *\n       * @param {string} key - 'birth' or 'death'\n       */\n      function removeEvent(key) {\n        $scope.person[key] = null;\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .directive('trcNameEditor', trcNameEditorDirective);\n\n  /** @ngInject */\n  function trcNameEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/trc-bio/name-editor.html',\n      scope: {\n        name: '=ngModel'\n      },\n      controller: NameEditorController,\n      controllerAs: 'nameEditor'\n    };\n\n    return directive;\n\n    function NameEditorController() {\n      var vm = this;\n\n      vm.roles = [\n        { value: 'canonical', label: 'Canonical Name' },\n        { value: 'pseudonym', label: 'Pseudonym' },\n        { value: 'maiden', label: 'Maiden Name' },\n        { value: 'designation', label: 'Honorary Designation' },\n        { value: 'nickname', label: 'Nickname' },\n        { value: 'phonetic', label: 'Phonetic Name' }\n      ];\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .directive('trcEventEditor', trcEventEditorDirective);\n\n  /** @ngInject */\n  function trcEventEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/trc-bio/event-editor.html',\n      scope: {\n        event: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBiblio', [\n      'ngResource'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBiblio')\n    .provider('worksRepo', worksRepoProvider);\n\n  /**\n   * This functionality is already being implemented as a standalone trc-biblio module. The code is\n   * used here as an interim until the Bower build/dependency workflow has been finalized.\n   *\n   * @return {angular.provider}\n   */\n  function worksRepoProvider() {\n    var provider = {};\n    provider.url = '/api/works';\n    provider.$get = worksRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function worksRepoFactory($resource) {\n      var restResource = $resource(provider.url + '/:workId', { workId: '@id' }, {\n        update: {\n          method: 'PUT'\n        }\n      });\n\n      var editionResource = $resource(provider.url + '/:workId/editions/:editionId', { editionId: '@id' }, {\n        update: {\n          method: 'PUT'\n        }\n      });\n\n      var volumeResource = $resource(provider.url + '/:workId/editions/:editionId/volumes/:volumeId', { volumeId: '@id' }, {\n        update: {\n          method: 'PUT'\n        }\n      });\n\n      var repo = {};\n      repo.getAll = findAll;\n      repo.search = search;\n      repo.searchByAuthor = searchByAuthor;\n      repo.get = getWork;\n      repo.getWork = getWork;\n      repo.getEdition = getEdition;\n      repo.getVolume = getVolume;\n      repo.create = createWork;\n      repo.createWork = createWork;\n      repo.createEdition = createEdition;\n      repo.createVolume = createVolume;\n      repo.save = save;\n      repo.saveWork = saveWork;\n      repo.saveEdition = saveEdition;\n      repo.saveVolume = saveVolume;\n      repo.delete = deleteWork;\n      repo.getTitle = getTitleByTypePreference;\n      return repo;\n\n      /**\n       * Retrieves a listing of all works\n       *\n       * @return {WorkProxy[]}\n       */\n      function findAll() {\n        return search('');\n      }\n\n      /**\n       * Search for works by query\n       *\n       * @return {SearchResultSet}\n       */\n      function search(query) {\n        return restResource.get({ q: query, max: 50 });\n      }\n\n      /**\n       * Search for works by author\n       *\n       * @return {SearchResultSet}\n       */\n      function searchByAuthor(authorId) {\n        return restResource.get({ aid: authorId, max: 50 });\n      }\n\n      /**\n       * Retrieves a work object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promis is available on Work.$promise.\n       *\n       * @param {string} workId\n       * @return {Work}\n       */\n      function getWork(workId) {\n        if (angular.isUndefined(workId)) {\n          throw new TypeError('Invalid ID provided to getWork');\n        }\n\n        var work = restResource.get({ workId: workId });\n\n        work.$promise.then(adaptWork);\n\n        return work;\n      }\n\n      /**\n       * Retrieves an edition object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promis is available on Edition.$promise.\n       *\n       * @param {string} workId\n       * @param {string} editionId\n       * @return {Edition}\n       */\n      function getEdition(workId, editionId) {\n        if (angular.isUndefined(workId) || angular.isUndefined(editionId)) {\n          throw new TypeError('Invalid IDs provided to getEdition');\n        }\n\n        var edition = editionResource.get({ workId: workId, editionId: editionId });\n\n        edition.$promise.then(adaptEdition);\n\n        return edition;\n      }\n\n      /**\n       * Retrieves a volume object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promis is available on Volume.$promise.\n       *\n       * @param {string} workId\n       * @param {string} editionId\n       * @param {string} volumeId\n       * @return {Volume}\n       */\n      function getVolume(workId, editionId, volumeId) {\n        if (angular.isUndefined(workId) || angular.isUndefined(editionId) || angular.isUndefined(volumeId)) {\n          throw new TypeError('Invalid IDs provided to getVolume');\n        }\n\n        var volume = volumeResource.get({ workId: workId, editionId: editionId, volumeId: volumeId });\n\n        volume.$promise.then(adaptVolume);\n\n        return volume;\n      }\n\n      /**\n       * Creates a new work instance\n       *\n       * @return {Work}\n       */\n      function createWork() {\n        var work = new restResource();\n        adaptWork(work);\n        work.titles.push({});\n        work.authors.push({});\n        return work;\n      }\n\n      /**\n       * Creates a new edition instance\n       *\n       * @return {Edition}\n       */\n      function createEdition() {\n        var edition = new editionResource();\n        return adaptEdition(edition);\n      }\n\n      /**\n       * Creates a new volume instance\n       *\n       * @return {Volume}\n       */\n      function createVolume() {\n        var volume = new volumeResource();\n        return adaptVolume(volume);\n      }\n\n      /**\n       * Dispatch method for saving works, editions, and volumes\n       *\n       * @deprecated use saveWork, saveEdition, or saveVolume directly\n       * @return {Promise}\n       */\n      function save() {\n        switch (arguments.length) {\n          case 1: return saveWork.apply(null, arguments);\n          case 2: return saveEdition.apply(null, arguments);\n          case 3: return saveVolume.apply(null, arguments);\n        }\n        throw new TypeError('Unexpected arguments to worksRepo#save');\n      }\n\n      /**\n       * Saves a work instance back to the server\n       *\n       * @param {Work} work\n       * @return {Promise.<Work>}\n       */\n      function saveWork(work) {\n        if (!(work instanceof restResource)) {\n          throw new Error('work was not created by this repo');\n        }\n\n        // ngResource automatically updates the model to reflect any server changes (e.g. setting IDs for the work/edtions/volumes/copies).\n        return work.id\n          ? work.$update()\n          : work.$save();\n      }\n\n      /**\n       * Saves an edition instance back to the server\n       *\n       * @param  {string} workId\n       * @param  {Edition} edition\n       * @return {Promise.<Edition>}\n       */\n      function saveEdition(workId, edition) {\n        if (!workId) {\n          throw new Error('no work id provided');\n        }\n\n        if (!(edition instanceof editionResource)) {\n          throw new Error('edition was not created by this repo');\n        }\n\n        return edition.id\n          ? edition.$update({ workId: workId })\n          : edition.$save({ workId: workId });\n      }\n\n      /**\n       * Saves a volume instance back to the server\n       *\n       * @param  {string} workId\n       * @param  {string} editionId\n       * @param  {Volume} volume\n       * @return {Promise.<Volume>}\n       */\n      function saveVolume(workId, editionId, volume) {\n        if (!workId) {\n          throw new Error('no work id provided');\n        }\n\n        if (!editionId) {\n          throw new Error('no edition id provided');\n        }\n\n        if (!(volume instanceof volumeResource)) {\n          throw new Error('volume was not created by this repo');\n        }\n\n        return volume.id\n          ? volume.$update({ workId: workId, editionId: editionId })\n          : volume.$save({ workId: workId, editionId: editionId });\n      }\n\n      /**\n       * Deletes a work instance from the server\n       *\n       * @param  {string} id\n       */\n      function deleteWork(workId) {\n        var dataItem = restResource.delete({ id: workId });\n        return dataItem.$promise;\n      }\n\n      /**\n       * Ensure that aggregate fields common to all work/edition/volume entities exist and are formatted correctly\n       *\n       * @param  {Work|Edition|Volume} entity\n       * @return {Work|Edition|Volume}\n       */\n      function adaptCommon(entity) {\n        if (!entity.titles) {\n          entity.titles = [];\n        } else {\n          entity.titles.forEach(function (title) {\n            title.type = title.type.toLowerCase();\n          });\n        }\n\n        if (!entity.authors) {\n          entity.authors = [];\n        } else {\n          entity.authors.forEach(function (author) {\n            author.role = author.role.toLowerCase();\n          });\n        }\n\n        if (!entity.otherAuthors) {\n          entity.otherAuthors = [];\n        } else {\n          entity.otherAuthors.forEach(function (author) {\n            author.role = author.role.toLowerCase();\n          });\n        }\n\n        if (!entity.copies) {\n          entity.copies = [];\n        }\n\n        return entity;\n      }\n\n      /**\n       * Ensure that work aggregate fields exist and are formatted correctly\n       *\n       * @param  {Work} work\n       * @return {Work}\n       */\n      function adaptWork(work) {\n        adaptCommon(work);\n\n        if (!work.editions) {\n          work.editions = [];\n        } else {\n          work.editions.forEach(adaptEdition);\n        }\n\n        return work;\n      }\n\n      /**\n       * Ensure that edition aggregate fields exist and are formatted correctly\n       *\n       * @param  {Edition} edition\n       * @return {Edition}\n       */\n      function adaptEdition(edition) {\n        adaptCommon(edition);\n\n        if (!edition.volumes) {\n          edition.volumes = [];\n        } else {\n          edition.volumes.forEach(adaptVolume);\n        }\n\n        return edition;\n      }\n\n      /**\n       * Ensure that volume aggregate fields exist and are formatted correctly\n       *\n       * @param  {Volume} volume\n       * @return {Volume}\n       */\n      function adaptVolume(volume) {\n        adaptCommon(volume);\n\n        return volume;\n      }\n\n      /**\n       * Retrieves the first available title of the given type or falsey if no title can be found.\n       * If multiple types are given, returns the title corresponding to the first type for which a title is found.\n       *\n       * @param  {Title[]}         titles\n       * @param  {string|string[]} types\n       * @return {Title}\n       */\n      function getTitleByTypePreference(titles, types) {\n        if (!angular.isArray(types)) {\n          types = [types];\n        }\n\n        return types.reduce(function (found, type) {\n          if (found) {\n            return found;\n          }\n\n          for (var i = 0; i < titles.length; i++) {\n            if (titles[i].type === type) {\n              return titles[i];\n            }\n          }\n\n          return null;\n        }, null);\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sda.concept-browser', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ngAria',\n      'ngResource',\n      'ui.router',\n      'ngMaterial',\n      'trcBiblio',\n      'trcBio',\n      'trcGraph'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sda.concept-browser')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($http, $scope, $q, $mdToast, $location, $stateParams, peopleRepo, worksRepo, graphRepo) {\n    var vm = this;\n\n    vm.graph = null;\n    vm.activeNode = null;\n    vm.person = null;\n    vm.works = null;\n    vm.related = null;\n    vm.sidebarLoading = false;\n    vm.graphLoading = false;\n\n    activate();\n\n    function activate() {\n      var defaultGraphType = 'people';\n      var graphType = $stateParams.type || defaultGraphType;\n      vm.graphLoading = true;\n      getGraphData(graphType).catch(function () {\n        $mdToast.showSimple('Unable to load the \"' + graphType + '\"graph type. Falling back to \"' + defaultGraphType + '\".');\n        return getGraphData(defaultGraphType);\n      }).then(function (data) {\n        vm.graphLoading = false;\n        vm.graph = data.graph;\n      }, function () {\n        vm.graphLoading = false;\n        $mdToast.showSimple('Unable to load graph data.');\n      });\n\n      $scope.$watch('main.activeNode', function (node) {\n        if (node) {\n          vm.sidebarLoading = true;\n          loadNodeData(node).then(function () {\n            vm.sidebarLoading = false;\n          }, function () {\n            vm.sidebarLoading = false;\n            $mdToast.showSimple('Unable to load node data');\n          });\n        } else {\n          vm.person = null;\n        }\n      });\n    }\n\n    function loadNodeData(node) {\n      // HACK only works for people; should probably refactor to a directive with parallel one for works,\n      //      but how should we determine which directive to display?\n      vm.person = peopleRepo.get(node.id);\n\n      var works = worksRepo.searchByAuthor(node.id);\n      var worksP = works.$promise.then(function () {\n        if (!works.items) {\n          throw new Error('unable to load items');\n        }\n\n        vm.works = works.items;\n        return vm.works;\n      });\n\n      // HACK types should be loaded from reln repo\n      var TYPES = {\n        'uk.ac.ox.bodleian.sda.relationships.influence': {\n          id: 'uk.ac.ox.bodleian.sda.relationships.influence',\n          title: 'Influenced',\n          reverseTitle: 'Influenced By',\n          directed: true\n        },\n        'uk.ac.ox.bodleian.sda.relationships.provoked': {\n          id: 'uk.ac.ox.bodleian.sda.relationships.provoked',\n          title: 'Provoked',\n          reverseTitle: 'Provoked By',\n          directed: true\n        },\n        'uk.ac.ox.bodleian.sda.relationships.consonance': {\n          id: 'uk.ac.ox.bodleian.sda.relationships.consonance',\n          title: 'Consonance',\n          directed: false\n        },\n        'uk.ac.ox.bodleian.sda.relationships.patternmatch': {\n          id: 'uk.ac.ox.bodleian.sda.relationships.patternmatch',\n          title: 'Possible Pattern Match',\n          directed: false\n        }\n      };\n\n      var related = {};\n\n      function makeTypeGroup(type) {\n        var group = { id: type.id, directed: type.directed };\n\n        if (type.directed) {\n          group.out = { label: type.title, nodes: [] };\n          group.in = { label: type.reverseTitle, nodes: [] };\n        } else {\n          group.none = { label: type.title, nodes: [] };\n        }\n\n        return group;\n      }\n\n      function ensureTypeGroup(type) {\n        if (!related.hasOwnProperty(type.id)) {\n          related[type.id] = makeTypeGroup(type);\n        }\n\n        return related[type.id];\n      }\n\n      node.outEdges.map(function (edge) {\n        var type = TYPES[edge.relation];\n        if (!type) return;\n\n        var group = ensureTypeGroup(type);\n        group[type.directed ? 'out' : 'none'].nodes.push(edge.target);\n      });\n\n      node.inEdges.map(function (edge) {\n        var type = TYPES[edge.relation];\n        if (!type) return;\n\n        var group = ensureTypeGroup(type);\n        group[type.directed ? 'in' : 'none'].nodes.push(edge.source);\n      });\n\n      vm.related = [];\n      for (var key in related) if (related.hasOwnProperty(key)) {\n        vm.related.push(related[key]);\n      }\n\n      return $q.all([vm.person.$promise, worksP]);\n    }\n\n    function getGraphData(type) {\n      var graph = graphRepo.get(type);\n\n      return graph.$promise.then(function () {\n        var nodesById = {};\n\n        // index nodes by ID; prepare structure for dereferencing\n        graph.graph.nodes.forEach(function (node) {\n          node.inEdges = [];\n          node.outEdges = [];\n\n          nodesById[node.id] = node;\n        });\n\n        // dereference edges\n        // edge direction plays an opposite role in the view than it does in the server data:\n        //    suppose A provoked B, C, and D\n        //    we would like to draw arrows from A to B, C, and D (A->B, A->C, A->D)\n        //    but for analytical purposes, the data treats provocation as references from B, C, and D back to A (B->A, C->A, D->A)\n        graph.graph.edges.forEach(function (edge) {\n          var target = nodesById[edge.source];\n          var source = nodesById[edge.target];\n\n          edge.source = source;\n          source.outEdges.push(edge);\n\n          edge.target = target;\n          target.inEdges.push(edge);\n        });\n\n        return graph;\n      });\n    }\n  }\n\n})();\n\n/*global ConceptBrowser:false*/\n(function () {\n  'use strict';\n\n  angular\n    .module('sda.concept-browser')\n    .directive('conceptBrowser', conceptBrowserDirective);\n\n  /** @ngInject */\n  function conceptBrowserDirective($window, $timeout) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        graph: '=ngModel',\n        width: '=',\n        height: '=',\n        padding: '=',\n        layout: '@',\n        activeNode: '='\n      },\n      link: linkFunc\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var width = scope.width;\n      var autoWidth = false;\n      var height = scope.height;\n      var autoHeight = false;\n      var layout = scope.layout;\n      var rootEl = el.get(0);\n\n      // HACK: delay initialization until flex elements have a width/height\n      $timeout(function () {\n        if (!width) {\n          width = el.width();\n          autoWidth = true;\n        }\n\n        if (!height) {\n          height = el.height();\n          autoHeight = true;\n        }\n\n        var graph = ConceptBrowser(rootEl, layout)\n          .size([width, height]);\n\n        if (scope.graph) {\n          graph.data(scope.graph.nodes, scope.graph.edges);\n          graph.refresh();\n        }\n\n        angular.element($window).on('resize', function () {\n          if (!autoWidth && !autoHeight) {\n            return;\n          }\n\n          var oldWidth = width;\n          var oldHeight = height;\n\n          if (autoWidth) {\n            width = el.width();\n          }\n\n          if (autoHeight) {\n            height = el.height();\n          }\n\n          if (oldWidth !== width || oldHeight !== height) {\n            graph.size([width, height]);\n            graph.refresh();\n          }\n        });\n\n        // listen for graph events\n\n        // HACK if digest is already in progress, do not try to set active node (probably because it was set from the parent scope)\n        var preventActivate = false;\n        graph.on('activate', function (evt) {\n          if (preventActivate) {\n            return;\n          }\n\n          scope.$apply(function () {\n            scope.activeNode = evt.node;\n          });\n        });\n\n        // listen for data updates\n        scope.$watchGroup(['width', 'height', 'graph', 'activeNode'], function (newValues, oldValues) {\n          var queueRefresh = false;\n\n          if (newValues[0] && newValues[0] !== oldValues[0]) {\n            width = newValues[0];\n            graph.size([width, height]);\n            if (newValues[2]) {\n              queueRefresh = true;\n            }\n          }\n\n          if (newValues[1] && newValues[1] !== oldValues[1]) {\n            height = newValues[1];\n            graph.size([width, height]);\n            if (newValues[2]) {\n              queueRefresh = true;\n            }\n          }\n\n          if (newValues[2] && newValues[2] !== oldValues[2]) {\n            // make a copy of the data so changes within this directive don't get leaked out\n            var graphData = angular.copy(newValues[2]);\n            graph.data(graphData.nodes, graphData.edges);\n            queueRefresh = true;\n          }\n\n          if (newValues[3] && newValues[3] !== oldValues[3]) {\n            preventActivate = true;\n            graph.activate(newValues[3]);\n            preventActivate = false;\n          }\n\n          if (queueRefresh) {\n            graph.refresh();\n          }\n        });\n      });\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sda.concept-browser')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sda.concept-browser')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/{type}',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global d3:false, moment:false */\n(function () {\n  'use strict';\n\n  angular\n    .module('sda.concept-browser')\n    .constant('d3', d3)\n    .constant('moment', moment);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sda.concept-browser')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, $mdThemingProvider, peopleRepoProvider, worksRepoProvider, graphRepoProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    $mdThemingProvider.definePalette('darkBrown', {\n      '50': '#595c59',\n      '100': '#4c4f4c',\n      '200': '#404240',\n      '300': '#333533',\n      '400': '#272827',\n      '500': '#1a1b1a',\n      '600': '#0d0e0d',\n      '700': '#010101',\n      '800': '#000000',\n      '900': '#000000',\n      'A100': '#e0f0e0',\n      'A200': '#565956',\n      'A400': '#7e837e',\n      'A700': '#000000',\n\n      contrastDefaultColor: 'light',\n      contrastDarkColors: ['A100']\n    });\n\n    $mdThemingProvider.definePalette('copper', {\n      '50': '#d4b190',\n      '100': '#cca47e',\n      '200': '#c5976b',\n      '300': '#be8a59',\n      '400': '#b67e47',\n      '500': '#a47140',\n      '600': '#926439',\n      '700': '#7f5832',\n      '800': '#6d4b2b',\n      '900': '#5b3e23',\n      'A100': '#dcc3ab',\n      'A200': '#a47140',\n      'A400': '#48321c',\n      'A700': '#272927',\n\n      contrastDefaultColor: 'light',\n      contrastDarkColors: ['50', '100', '200', 'A100']\n    });\n\n    $mdThemingProvider.theme('default')\n      .primaryPalette('darkBrown')\n      .accentPalette('copper');\n\n    peopleRepoProvider.url = '/api/catalog/people';\n    worksRepoProvider.url = '/api/catalog/works';\n    graphRepoProvider.url = '/api/catalog/graph';\n  }\n\n})();\n\n/*eslint-env amd,browser,node*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.EventDispatcher = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  /**\n   * Creates a new simple event dispatcher object that handles listener registration and event triggering.\n   */\n  function EventDispatcher() {\n    /**\n     * Map of event name to registered event handlers\n     * @type {object.<string,function[]>}\n     */\n    var eventHandlers = {};\n\n    /**\n     * List of registered global event handlers\n     * @type {function[]}\n     */\n    var globalHandlers = [];\n\n    ////////////////////////////////////////////////////////////\n\n    var API = {};\n    API.all = addGlobalListener;\n    API.on = addListener;\n    API.once = addOnceListener;\n    API.trigger = trigger;\n    return API;\n\n    ////////////////////////////////////////////////////////////\n\n    /**\n     * Trigger the named event, passing the given context to all registered event handlers\n     * @param {string} eventName\n     * @param {object} context\n     */\n    function trigger(eventName, context) {\n      if (eventHandlers[eventName]) {\n        eventHandlers[eventName].forEach(function (handler) {\n          try {\n            handler(context);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n        });\n      }\n\n      globalHandlers.forEach(function (handler) {\n        try {\n          handler(eventName, context);\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error(e);\n        }\n      });\n    }\n\n    /**\n     * Attach an event handler that will be triggered for all events\n     * @param {function} handler\n     * @return {function} deregistration function\n     */\n    function addGlobalListener(handler) {\n      globalHandlers.push(handler);\n\n      return function () {\n        var ix = globalHandlers.indexOf(handler);\n        if (ix >= 0) {\n          globalHandlers.splice(ix, 1);\n        }\n      }\n    }\n\n    /**\n     * Attach an event handler to the given event name.\n     * @param {string} eventName\n     * @param {function} handler\n     * @return {function} deregistration function\n     */\n    function addListener(eventName, handler) {\n      if (!eventHandlers[eventName]) {\n        eventHandlers[eventName] = [];\n      }\n\n      eventHandlers[eventName].push(handler);\n\n      return function () {\n        var ix = eventHandlers[eventName].indexOf(handler);\n        if (ix >= 0) {\n          eventHandlers[eventName].splice(ix, 1);\n        }\n      }\n    }\n\n    /**\n     * Attach an event listener to the given event name that will automatically deregister after it has been fired.\n     * @param {string} eventName\n     * @param {function} handler\n     * @return {function} deregistration function\n     */\n    function addOnceListener(eventName, handler) {\n      var deregister = addListener(eventName, function (context) {\n        try {\n          handler(context);\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error(e);\n        } finally {\n          deregister();\n        }\n      });\n\n      return deregister;\n    }\n  }\n\n  return EventDispatcher;\n\n});\n\n/*global d3:false*/\n/*eslint-env amd,browser,node*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['d3'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('d3'));\n  } else {\n    factory(d3);\n  }\n})(this, function (d3) {\n  'use strict';\n\n  var LINK_DISTANCE = 20,\n      LINK_STRENGTH = 1,\n      CHARGE_DISTANCE_2 = Infinity;\n\n  /**\n   * force layout based on d3.layout.force(), but with horizontal wrapping\n   *\n   * @return {object}\n   */\n  d3.layout.force.cylindrical = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = 0.9,\n        linkDistance = LINK_DISTANCE,\n        linkStrength = LINK_STRENGTH,\n        charge = -30,\n        chargeDistance2 = CHARGE_DISTANCE_2,\n        gravity = 0.1,\n        theta2 = 0.64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function wrapDx(dx, width) {\n      if (2 * Math.abs(dx) > width) {\n        // the \"other side\" of the cylinder is closer\n        if (dx < 0) {\n          // quad point is to the left: simulate force as if it were on the right\n          dx += width;\n        } else {\n          // quad point is to the right: simulate force as if it were on the left\n          dx -= width;\n        }\n      }\n\n      return dx;\n    }\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var width = size[0];\n\n          var dx = wrapDx(quad.cx - node.x, width),\n              dy = quad.cy - node.y,\n              dw = x2 - x1;\n\n\n          var dn = dx * dx + dy * dy;\n          var k = 0;\n\n          /* Barnes-Hut criterion. */\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      // simulated annealing, basically\n      if ((alpha *= 0.99) < 0.005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n        m = links.length,\n        q,\n        i, // current index\n        o, // current object\n        s, // current source\n        t, // current target\n        l, // current distance\n        k, // current force\n        x, // x-distance\n        y; // y-distance\n\n      // gauss-seidel relaxation for links\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = wrapDx(t.x - s.x, size[0]);\n        y = t.y - s.y;\n        l = (x * x + y * y);\n\n        if (l !== 0) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      // apply gravity forces\n      k = alpha * gravity;\n      if (k !== 0) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k)\n          while (++i < n) {\n            o = nodes[i];\n            // o.x += (x - o.x) * k;\n            o.y += (y - o.y) * k;\n          }\n      }\n\n      // compute quadtree center of mass and apply charge forces\n      if (charge) {\n        accumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      // position verlet integration\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      // update positions if a node gets pushed off the sides of the visualization\n      i = -1;\n      var width = size[0];\n      while (++i < n) {\n        o = nodes[i];\n\n        var dx = o.px - o.x;\n        o.x %= width;\n        // ensure node.x is positive; there's a chance that -width < node.x % width < 0\n        if (o.x < 0) {\n          o.x += width;\n        }\n\n        // ensure that previous x position (used to calculate velocity) is semantically correct after wrapping\n        o.px = o.x + dx;\n\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = isFunction(x) ? x : +x;\n      return force;\n    };\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = isFunction(x) ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = isFunction(x) ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n\n      x = +x;\n      if (alpha) { // if we're already running\n        if (x > 0) alpha = x; // we might keep it hot\n        else alpha = 0; // or, next tick will dispatch \"end\"\n      } else if (x > 0) { // otherwise, fire it up!\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n        n = nodes.length,\n        m = links.length,\n        w = size[0],\n        h = size[1],\n        neighbors,\n        o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (isNumber(o.source)) o.source = nodes[o.source];\n        if (isNumber(o.target)) o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (isFunction(linkDistance))\n        for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i);\n      else\n        for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\n      strengths = [];\n      if (isFunction(linkStrength))\n        for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i);\n      else\n        for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\n      charges = [];\n      if (isFunction(charge))\n        for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i);\n      else\n        for (i = 0; i < n; ++i) charges[i] = charge;\n\n      // inherit node position from first neighbor with defined position\n      // or if no such neighbors, initialize node position randomly\n      // initialize neighbors lazily to avoid overhead when not needed\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j)\n            neighbors[j] = [];\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n          j = -1,\n          cs = candidates.length,\n          x;\n\n        while (++j < cs)\n          if (!isNaN(x = candidates[j][dimension])) return x;\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(0.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    // use `node.call(force.drag)` to make nodes draggable\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag()\n        .origin(function (o) {\n          return o;\n        })\n        .on(\"dragstart.force\", dragstart)\n        .on(\"drag.force\", dragmove)\n        .on(\"dragend.force\", dragend);\n\n      if (!arguments.length) return drag;\n\n      this.on(\"mouseover.force\", mouseover)\n        .on(\"mouseout.force\", mouseout)\n        .call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      force.resume(); // restart annealing\n    }\n\n    force.edgePath = function () {\n      var width = size[0];\n\n      var getX1 = function (d) { return d[0][0]; }\n      var getY1 = function (d) { return d[0][1]; }\n      var getX2 = function (d) { return d[1][0]; }\n      var getY2 = function (d) { return d[1][1]; }\n\n      var drawLine = function (selection) {\n        selection.attr('d', function (d) {\n          var x1 = getX1(d);\n          var y1 = getY1(d);\n          var x2 = getX2(d);\n          var y2 = getY2(d);\n\n          if (2*Math.abs(x1-x2) < width) {\n            // draw direct from source to target\n            return 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n          } else if (x1 < x2) {\n            // shorter to go around the \"back\" and x1 is on the left\n            return 'M ' + x1 + ' ' + y1 + ' L ' + (x2 - width) + ' ' + y2 + ' ' +\n              'M ' + x2 + ' ' + y2 + ' L ' + (x1 + width) + ' ' + y1;\n          } else {\n            // shorter to go around the \"back\" and x1 is on the right\n            return 'M ' + x1 + ' ' + y1 + ' L ' + (x2 + width) + ' ' + y2 + ' ' +\n              'M ' + x2 + ' ' + y2 + ' L ' + (x1 - width) + ' ' + y1;\n          }\n        });\n      };\n\n      drawLine.x1 = function (fn) { getX1 = fn; return drawLine; }\n      drawLine.y1 = function (fn) { getY1 = fn; return drawLine; }\n      drawLine.x2 = function (fn) { getX2 = fn; return drawLine; }\n      drawLine.y2 = function (fn) { getY2 = fn; return drawLine; }\n\n      return drawLine;\n    };\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  // The fixed property has three bits:\n  // Bit 1 can be set externally (e.g., d.fixed = true) and show persist.\n  // Bit 2 stores the dragging state, from mousedown to mouseup.\n  // Bit 3 stores the hover state, from mouseover to mouseout.\n  // Dragend is a special case: it also clears the hover state.\n\n  function dragstart(d) {\n    d.fixed |= 2; // set bit 2\n  }\n\n  function dragend(d) {\n    d.fixed &= ~6; // unset bits 2 and 3\n  }\n\n  function mouseover(d) {\n    d.fixed |= 4; // set bit 3\n    d.px = d.x;\n    d.py = d.y; // set velocity to zero\n  }\n\n  function mouseout(d) {\n    d.fixed &= ~4; // unset bit 3\n  }\n\n  function accumulate(quad, alpha, charges) {\n    var cx = 0,\n      cy = 0;\n\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n        n = nodes.length,\n        i = -1,\n        c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (!c) continue;\n\n        accumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      // jitter internal nodes that are coincident\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - 0.5;\n        quad.point.y += Math.random() - 0.5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n\n      quad.charge += quad.pointCharge = k;\n\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  function isFunction(o) {\n    return typeof o === 'function';\n  }\n\n  function isNumber(o) {\n    return typeof o === 'number';\n  }\n\n});\n\n/*eslint-env amd,browser,node*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['d3', 'event-dispatcher', 'd3-force-cylindrical'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    require('d3-force-cylindrical');\n    module.exports = factory(require('d3'), require('event-dispatcher'));\n  } else {\n    root.ConceptBrowser = factory(root.d3, root.EventDispatcher);\n  }\n})(this, function (d3, EventDispatcher) {\n  'use strict';\n\n  /** @type {integer} */\n  var NODE_MIN_SIZE = 4;\n\n  /** @type {integer} */\n  var NODE_MAX_SIZE = 10;\n\n  /** @type {object.<string,functin>} */\n  var GRAPH_LAYOUT_CTORS = {\n    planar: d3.layout.force,\n    cylindrical: d3.layout.force.cylindrical\n  };\n\n  /** @type {string} */\n  var TIP_CSS_CLASS = 'd3-tip';\n\n  /** @type {object.<string,integer>} */\n  var TIP_POSITION_MARGIN = {\n    left: 200,\n    right: 200,\n    top: 100,\n    bottom: 100\n  };\n\n  if (!d3.tip) {\n    // eslint-disable-next-line no-console\n    console.warn('d3.tip is not available; tooltips will not display properly.');\n  }\n\n  /**\n   * SDA Concept Browser Visualization\n   *\n   * @param  {Element} rootEl\n   * @param  {integer} width\n   * @param  {integer} height\n   * @param  {string} [layout=planar] - one of: (planar, cylindrical)\n   */\n  function ConceptBrowser(rootEl, layout, options) {\n    layout = layout || 'planar';\n    options = options || {};\n\n    var events = EventDispatcher();\n\n    if (options.debug) {\n      events.all(function (eventName, context) {\n        // eslint-disable-next-line no-console\n        console.log(eventName, context.node ? context.node.id : context);\n      });\n    }\n\n    /**\n     * visualization width in pixels\n     *\n     * @type {integer}\n     */\n    var width;\n\n    /**\n     * visualization height in pixels\n     *\n     * @type {integer}\n     */\n    var height;\n\n    /**\n     * Nodes in the graph\n     *\n     * @type {Node[]}\n     */\n    var nodes = [];\n\n    /**\n     * Edges connecting nodes in the graph\n     *\n     * @type {Node[]}\n     */\n    var edges = [];\n\n    /**\n     * Collection of nodes that are in the \"focused\" state\n     *\n     * @type {Node[]}\n     */\n    var selected = [];\n\n    /**\n     * The currently focused node (if there is one)\n     *\n     * @type {?Node}\n     */\n    var focused = null;\n\n    /**\n     * The currently activated node (if there is one)\n     *\n     * @type {?Node}\n     */\n    var activated = null;\n\n    /**\n     * @type {d3.selection}\n     */\n    var svg;\n\n    /**\n     * @type {d3.selection}\n     */\n    var nodeLayer;\n\n    /**\n     * @type {d3.selection}\n     */\n    var edgeLayer;\n\n    /**\n     * @type {d3.selection}\n     */\n    var progressBar;\n\n    /**\n     * @type {d3.scale}\n     */\n    var progressScale;\n\n    /**\n     * @type {d3.scale}\n     */\n    var nodeRadiusScale;\n\n    /**\n     * @type {d3.layout.force}\n     */\n    var graph;\n\n    /**\n     * function used in a selection.call() method for drawing edge paths.\n     * by default, it draws a straight line between the edge source and target nodes\n     *\n     * @type {function}\n     */\n    var drawEdge = function (selection) {\n      selection.attr('d', function (edge) {\n        var x1 = edge.source.x;\n        var y1 = edge.source.y;\n        var x2 = edge.target.x;\n        var y2 = edge.target.y;\n\n        return 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n      });\n    }\n\n    /**\n     * @type {?d3.tip}\n     */\n    var tooltip = null;\n\n    /**\n     * @type {boolean}\n     */\n    var isInitialized = false;\n\n    ////////////////////////////////////////////////////////////\n\n    // expose public methods\n    var API = {};\n    API.size = setSize;\n    API.data = setData;\n    API.activate = setActivated;\n    API.refresh = refresh;\n    API.on = events.on;\n    return API;\n\n    ////////////////////////////////////////////////////////////\n\n    /**\n     * Sets graph dimensions. refresh() must be called in order for changes to take effect\n     *\n     * @param {integer[]} dims - dimensions (width, height) of new viewing area\n     */\n    function setSize(dims) {\n      width = dims[0];\n      height = dims[1];\n\n      if (isInitialized) {\n        svg.attr('width', width).attr('height', height);\n        progressScale.range([0, width]);\n        graph.size([width, height]);\n      }\n\n      return API;\n    }\n\n    /**\n     * Sets graph data. refresh() must be called in order for changes to take effect\n     *\n     * @param {Node[]} _nodes\n     * @param {Edge[]} _edges\n     */\n    function setData(_nodes, _edges) {\n      nodes = _nodes;\n      edges = _edges;\n\n      // randomize node positions if not already set\n      nodes.forEach(function (node) {\n        node.x = (node.x || Math.random()) * width;\n        node.y = (node.y || Math.random()) * height;\n      });\n\n      return API;\n    }\n\n    /**\n     * Sets the set of currently active node\n     *\n     * @param {Node} node\n     */\n    function setActivated(node) {\n      if (nodes.indexOf(node) < 0) {\n        throw new Error('node to be activated is not a member of the graph');\n      }\n\n      activate(node);\n\n      // also select nodes\n      deselectAll();\n      select(node);\n    }\n\n    /**\n     * Update node and edge bindings for display and run force-directed graph simulation\n     *\n     * @param {object} data\n     */\n    function refresh() {\n      // ensure visualization is initialized\n      initialize();\n\n      // begin force-directed simulation\n      graph\n        .nodes(nodes)\n        .links(edges)\n        .start();\n\n      bindNodes();\n      bindEdges();\n\n      return API;\n    }\n\n    ////////////////////////////////////////////////////////////\n\n    /**\n     * HACK: hand-crafted scaling function to deal with pagerank range distribution discrepancy\n     *\n     * @param  {number} x PageRank value assumed to be in (0,1)\n     * @return {number} A \"more reasonably\" scaled value in (0,1)\n     */\n    function scalePageRank(x) {\n      return 1 - 1 / Math.pow(1 + x, 700);\n    }\n\n    function initialize() {\n      if (isInitialized) {\n        return;\n      }\n\n      isInitialized = true;\n\n      if (!width || !height) {\n        throw new Error('No width/height set. Use size([width, height]) to set size before initializing');\n      }\n\n      svg = d3.select(rootEl).append('svg')\n        .attr('width', width)\n        .attr('height', height);\n\n      // extract edge types and create arrowhead styles for them\n      var edgeTypes = edges.reduce(function (types, edge) {\n        if (types.indexOf(edge.relation) < 0) {\n          types.push(edge.relation);\n        }\n        return types;\n      }, []);\n\n      defineArrowheads(svg, edgeTypes, ['', 'activated', 'selected', 'focused']);\n\n      var baseGroup = svg.append('g').attr('class', 'concept-browser');\n      edgeLayer = baseGroup.append('g').attr('class', 'edges');\n      nodeLayer = baseGroup.append('g').attr('class', 'nodes');\n\n      progressBar = baseGroup.append('rect').attr('class', 'progress')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 2);\n\n      progressScale = d3.scale.linear()\n        .domain([Math.log(0.1), Math.log(0.005)])\n        .range([0, width]);\n\n      // HACK: hand-crafted scaling function to deal with pagerank range distribution discrepancy\n      nodeRadiusScale = function (x) {\n        return NODE_MIN_SIZE + (NODE_MAX_SIZE - NODE_MIN_SIZE) * scalePageRank(x);\n      }\n\n      // nodeRadiusScale = d3.scale.pow()\n      //   .exponent(0.2)\n      //   .range([NODE_MIN_SIZE, NODE_MAX_SIZE]);\n\n      graph = GRAPH_LAYOUT_CTORS[layout || 'planar']()\n        .size([width, height])\n        .on('tick', tick);\n      configureGraph(graph);\n\n      if (graph.edgePath) {\n        drawEdge = graph.edgePath()\n          .x1(function (edge) { return edge.source.x; })\n          .y1(function (edge) { return edge.source.y; })\n          .x2(function (edge) { return edge.target.x; })\n          .y2(function (edge) { return edge.target.y; });\n      }\n\n      if (d3.tip) {\n        tooltip = d3.tip()\n            .attr('class', TIP_CSS_CLASS)\n            .direction(tooltipDirection)\n            .offset(tooltipOffset)\n            .html(function (node) { return node.label; });\n\n        events.on('focus', function (evt) { showTooltip(evt.node); });\n        events.on('blur', function (evt) { hideTooltip(evt.node); });\n      }\n\n      events.on('focus', updateEgoGraphs);\n      events.on('blur', updateEgoGraphs);\n      events.on('select', updateEgoGraphs);\n      events.on('deselect', updateEgoGraphs);\n    }\n\n    /**\n     * Sets configuration values on a D3 graph instance\n     *\n     * @param  {d3.svg.graph} graph\n     */\n    function configureGraph(graph) {\n      graph\n        .gravity(0.1)\n        // .linkDistance(50)\n        // .chargeDistance(width * 0.25)\n        .linkDistance(50)\n        .linkStrength(function (edge) {\n          // influential nodes pull their supporters closer\n          var pagerank = extractPagerank(edge.target);\n          return scalePageRank(pagerank)\n          // var targetInfluence = edge.target.stats.in_degree / 10;\n          // return 1 - 1/(1 + targetInfluence);\n        })\n        .charge(function (node) {\n          // HACK experiment with variably-charged nodes\n          var chargeRange = [-50, -300];\n          var influenceRange = [0, 1];\n          var pagerank = extractPagerank(node);\n\n          return chargeRange[0] + (chargeRange[1] - chargeRange[0])/(influenceRange[1] - influenceRange[0]) * (scalePageRank(pagerank) - influenceRange[0]);\n        })\n        .friction(.9);\n        // .theta(0.08);\n    }\n\n    /**\n     * Update node positions with each tick of a graph's physics simulation\n     *\n     * @param {object} evt\n     */\n    function tick(evt) {\n      updatePositions();\n\n      if (evt.alpha > 0.0051) {\n        progressBar.attr('width', progressScale(Math.log(evt.alpha)));\n        // bail early; do not render nodes\n        if (Math.random() < 0.95) return;\n      } else {\n        progressBar.attr('width', 0);\n      }\n\n      nodeLayer.selectAll('.node').transition().duration(500)\n        .attr('transform', function (node) {\n          return 'translate(' + node.x + ',' + node.y + ')';\n        });\n\n      edgeLayer.selectAll('.edge').transition().duration(500)\n        .call(drawEdge);\n    }\n\n    /**\n     * Update node bindings on the visualization\n     *\n     * @param  {Node[]} nodes\n     */\n    function bindNodes() {\n      // var nodeMetricExtent = d3.extent(nodes, function (node) {\n      //   return (node.metadata && node.metadata.pagerank) || 1;\n      // });\n\n      // nodeRadiusScale.domain(nodeMetricExtent);\n\n      var nodeSelect = nodeLayer.selectAll('.node')\n        .data(nodes, function (node) {\n          return node.id;\n        });\n\n      var nodeEnter = nodeSelect.enter().append('g')\n        .attr('class', 'node')\n        .attr('transform', function (node) {\n          return 'translate(' + node.x + ',' + node.y + ')';\n        })\n        .on('mouseover', focus)\n        .on('mouseout', blur)\n        .on('dblclick', activate)\n        .on('click', function (node) {\n          if (d3.event.ctrlKey) {\n            if (selected.indexOf(node) < 0) {\n              select(node);\n            } else {\n              deselect(node);\n            }\n          } else {\n            deselectAll();\n            select(node);\n          }\n        });\n\n      nodeEnter.append('circle')\n        .attr('r', function (node) {\n          var pagerank = extractPagerank(node);\n          return nodeRadiusScale(pagerank);\n        });\n\n      nodeSelect.exit().remove();\n\n      if (tooltip) {\n        nodeLayer.call(tooltip);\n      }\n    }\n\n    /**\n     * Update edge bindings on the visualization\n     *\n     * @param  {Edge[]} edges\n     */\n    function bindEdges() {\n      var edgeSelect = edgeLayer.selectAll('.edge')\n        .data(edges, function (edge) {\n          return edge.source.id + ',' + edge.target.id;\n        });\n\n      edgeSelect.enter().append('path')\n        .attr('class', function (edge) {\n          return 'edge ' + edge.relation;\n        })\n        .attr('marker-end', function (edge) {\n          return 'url(#arrowhead-' + edge.relation + ')';\n        })\n        .style('stroke-width', function (edge) {\n          var multiplicity = (edge.metadata && edge.metadata.multiplicity) || 1;\n          return multiplicity + 'pt';\n        })\n        .call(drawEdge);\n\n      edgeSelect.exit().remove();\n    }\n\n    /**\n     * Focuses the given node\n     *\n     * @param {Node} node\n     */\n    function focus(node) {\n      // ensure that the currently selected node has already been blurred\n      blur();\n\n      focused = node;\n      events.trigger('focus', { node: focused, selection: selected });\n    }\n\n    /**\n     * Blurs the given node or the currently focused node.\n     *\n     * @param {Node} [node]\n     */\n    function blur(node) {\n      node = node || focused;\n\n      if (node) {\n        if (focused === node) {\n          focused = null;\n        } else {\n          throw new Error('tried to blur a node that was not focused');\n        }\n\n        events.trigger('blur', { node: node, selection: selected });\n      }\n    }\n\n    /**\n     * Activates the given node\n     *\n     * @param {Node} node\n     */\n    function activate(node) {\n      // don't do anything if node is already active\n      if (activated === node) {\n        return;\n      }\n\n      // ensure that the active node has been deactivated\n      deactivate()\n\n      activated = node;\n      events.trigger('activate', { node: activated, selection: selected });\n    }\n\n    /**\n     * Deactivates the given node or the currently activated node.\n     *\n     * @param {Node} node\n     */\n    function deactivate(node) {\n      node = node || activated;\n\n      if (node) {\n        if (activated === node) {\n          activated = null;\n        } else {\n          throw new Error('tried to deactivate a node that was not activated');\n        }\n\n        events.trigger('deactivate', { node: node, selection: selected });\n      }\n    }\n\n    /**\n     * Adds the given node to the list of currently selected nodes\n     *\n     * @param {Node} node\n     */\n    function select(node) {\n      if (!node) {\n        throw new Error('no node provided');\n      }\n\n      if (selected.indexOf(node) < 0) {\n        selected.push(node);\n      } else {\n        throw new Error('tried to select a node that is already selected');\n      }\n\n      events.trigger('select', { node: node, selection: selected });\n    }\n\n    /**\n     * Removes the given node from the list of currently selected nodes\n     *\n     * @param {Node} node\n     */\n    function deselect(node) {\n      if (!node) {\n        throw new Error('no node provided to deselect');\n      }\n\n      var ix = selected.indexOf(node);\n      if (ix < 0) {\n        throw new Error('tried to deselect a node that was not selected');\n      } else {\n        selected.splice(ix, 1);\n      }\n\n      events.trigger('deselect', { node: node, selection: selected });\n    }\n\n    /**\n     * Deselects all selected nodes\n     */\n    function deselectAll() {\n      selected.forEach(function (node) {\n        events.trigger('deselect', { node: node, selection: [] });\n      });\n\n      selected = [];\n    }\n\n    /**\n     * Displays a tooltip with a label for the given node.\n     *\n     * @param {Node} node\n     */\n    function showTooltip(node) {\n      if (tooltip) {\n        tooltip.attr('class', TIP_CSS_CLASS)\n          .show(node);\n      }\n    }\n\n    /**\n     * Hides the tooltip for the given node.\n     *\n     * @param {Node} node\n     */\n    function hideTooltip(node) {\n      if (tooltip) {\n        tooltip.attr('class', TIP_CSS_CLASS)\n          .hide(node);\n      }\n    }\n\n    /**\n     * Marks selected nodes and edges as highlighted\n     */\n    function updateEgoGraphs() {\n      /**\n       * Determines whether a node should be marked as activated\n       *\n       * @param  {Node}    node\n       * @return {boolean}\n       */\n       function isNodeActivated(node) {\n         return activated === node;\n       }\n\n      /**\n       * Determines whether a node should be marked as selected\n       *\n       * @param  {Node}    node\n       * @return {boolean}\n       */\n      function isNodeSelected(node) {\n        return selected.indexOf(node) >= 0;\n      }\n\n      /**\n       * Determines whether a node should be marked as focused\n       * @param  {[type]}  node [description]\n       * @return {Boolean}      [description]\n       */\n      function isNodeFocused(node) {\n        return focused === node;\n      }\n\n      /**\n       * Determines whether an edge has a node that should be marked as activated\n       *\n       * @param  {Edge}    edge\n       * @return {boolean}\n       */\n      function isEdgeActivated(edge) {\n        return isNodeActivated(edge.source) || isNodeActivated(edge.target);\n      }\n\n      /**\n       * Determines whether an edge has a node that should be marked as selected\n       *\n       * @param  {Edge}    edge\n       * @return {boolean}\n       */\n      function isEdgeSelected(edge) {\n        return isNodeSelected(edge.source) || isNodeSelected(edge.target);\n      }\n\n      /**\n       * Determines whether an edge has a node that should be marked as focused\n       *\n       * @param  {Edge}    edge\n       * @return {boolean}\n       */\n      function isEdgeFocused(edge) {\n        return isNodeFocused(edge.source) || isNodeFocused(edge.target);\n      }\n\n      nodeLayer.selectAll('.node')\n        .classed('activated', function (node) {\n          return isNodeActivated(node) || node.outEdges.some(isEdgeActivated) || node.inEdges.some(isEdgeActivated);\n        })\n        .classed('selected', function (node) {\n          return isNodeSelected(node) || node.outEdges.some(isEdgeSelected) || node.inEdges.some(isEdgeSelected);\n        })\n        .classed('focused', function (node) {\n          return isNodeFocused(node) || node.outEdges.some(isEdgeFocused) || node.inEdges.some(isEdgeFocused);\n        });\n\n      edgeLayer.selectAll('.edge')\n        .classed('activated', isEdgeActivated)\n        .classed('selected', isEdgeSelected)\n        .classed('focused', isEdgeFocused)\n        .attr('marker-end', function (edge) {\n          var cls = '';\n\n          if (isEdgeActivated(edge)) {\n            cls = '-activated';\n          } else if (isEdgeSelected(edge)) {\n            cls = '-selected'\n          } else if (isEdgeFocused(edge)) {\n            cls = '-focused'\n          }\n\n          return 'url(#arrowhead-' + edge.relation + cls + ')';\n        });\n    }\n\n    /**\n     * Sets positions of each node to within the viewing area, wrapping left and right sides\n     */\n    function updatePositions() {\n      nodes.forEach(function (node) {\n        // constrain x and y positions to within viewing area\n        node.x = Math.max(Math.min(node.x, width), 0);\n        node.y = Math.max(Math.min(node.y, height), 0);\n      });\n    }\n\n    /**\n     * Gets node-relative tooltip positioning information from a node.\n     * Based on how close the node is to the border/sides of the visualization.\n     *\n     * @param {Node} node\n     * @return {string} tooltip direction (one of: n, ne, e, se, s, sw, w, nw)\n     */\n    function tooltipDirection(node) {\n      var dir = '';\n\n      // control top/bottom based on proximity to borders\n      if (node.y > height - TIP_POSITION_MARGIN.bottom) dir += 'n';\n      else if (node.y < TIP_POSITION_MARGIN.top) dir += 's';\n\n      // control side based on proximity to borders\n      if (node.x > width - TIP_POSITION_MARGIN.right) dir += 'w';\n      else if (node.x < TIP_POSITION_MARGIN.left) dir += 'e';\n\n      // fall back to top\n      if (dir === '') dir = 'n';\n\n      return dir;\n    }\n\n     /**\n      * Controls how far to place the tooltip from the point at which the node is located.\n      * Offset coordinates based on how close the node is to the border/sides of the visualization\n      * (i.e. the node's radius)\n      *\n      * @param {Node} node\n      * @return {integer[]} tooltip x/y offset coordinates\n      */\n    function tooltipOffset(node) {\n      var pagerank = extractPagerank(node);\n      var radius = nodeRadiusScale(pagerank);\n      var offset = [0, 0];\n\n      if (node.y > height - TIP_POSITION_MARGIN.bottom) offset[0] -= radius;\n      else if (node.y < TIP_POSITION_MARGIN.top) offset[0] += radius;\n\n      if (node.x > width - TIP_POSITION_MARGIN.left_right) offset[1] -= radius;\n      else if (node.x < TIP_POSITION_MARGIN.left_right) offset[1] += radius;\n\n      if (offset[1] === 0 && offset[0] === 0) offset[0] -= radius;\n\n      return offset;\n    }\n\n    /**\n     * Extracts pagerank metadata from the given node or computes a default pagerank value\n     *\n     * @param {Node} node\n     * @return {float}\n     */\n    function extractPagerank(node) {\n      return (node.metadata && node.metadata.pagerank) ||\n          ((nodes && nodes.length > 0) ? 1 / nodes.length : 1);\n    }\n\n    /**\n     * Sets arrowhead definitions on the SVG defs element\n     *\n     * @param  {object} svg\n     */\n    function defineArrowheads(svg, edgeTypes, classTypes) {\n      var arrowTypes = [];\n      edgeTypes.forEach(function (type) {\n        classTypes.forEach(function (cls) {\n          arrowTypes.push('arrowhead-' + type + (cls ? '-' + cls : ''));\n        });\n      });\n\n      // arrowhead definitions\n      svg.append('defs').selectAll('marker')\n          .data(arrowTypes)\n        .enter().append('marker')\n          .attr('id', function(id) { return id; })\n          .attr('viewBox', '0 -4 10 8')\n          .attr('refX', 25)\n          .attr('refY', 0)\n          .attr('markerWidth', 6)\n          .attr('markerHeight', 6)\n          .attr('orient', 'auto')\n        .append('path')\n          .attr('d', 'M 0,-4 L 10,0 L 0,4');\n    }\n  }\n\n  return ConceptBrowser;\n\n});\n\nangular.module(\"sda.concept-browser\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<md-sidenav md-component-id=right class=md-sidenav-right md-is-open=main.activeNode md-disable-backdrop md-whiteframe=4 layout=column><md-toolbar><div class=md-toolbar-tools><h2>Node Information</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"main.activeNode = null\\\"><md-icon>close</md-icon></md-button></div></md-toolbar><div flex layout=column layout-align=\\\"center center\\\" ng-if=main.sidebarLoading><md-progress-circular md-mode=indeterminate></md-progress-circular></div><div class=node-info flex layout=column ng-if=!main.sidebarLoading><h3 class=name><span class=given>{{main.person.name.givenName}}</span> <span class=family>{{main.person.name.familyName}}</span></h3><md-tabs flex><md-tab><md-tab-label><md-icon>person</md-icon></md-tab-label><md-tab-body><div class=summary ng-if=main.person.summary ng-bind-html=main.person.summary></div><div class=books ng-if=\\\"main.works && main.works.length > 0\\\"><h4>Books ({{main.works.length}})</h4><md-list><md-list-item ng-repeat=\\\"work in main.works\\\" ng-href=../#/library/books/{{work.id}}>{{work.label}}</md-list-item></md-list></div></md-tab-body></md-tab><md-tab><md-tab-label><md-icon>link</md-icon></md-tab-label><md-tab-body><md-list class=relationships ng-if=\\\"main.related && main.related.length > 0\\\"><div ng-repeat=\\\"group in main.related\\\"><div ng-if=group.directed><div ng-if=\\\"group.out.nodes.length > 0\\\"><md-subheader class=md-no-sticky>{{group.out.label}}</md-subheader><md-list-item ng-repeat=\\\"node in group.out.nodes track by node.id\\\" ng-click=\\\"main.activeNode = node\\\">{{node.label}}</md-list-item></div><div ng-if=\\\"group.in.nodes.length > 0\\\"><md-subheader class=md-no-sticky>{{group.in.label}}</md-subheader><md-list-item ng-repeat=\\\"node in group.in.nodes track by node.id\\\" ng-click=\\\"main.activeNode = node\\\">{{node.label}}</md-list-item></div></div><div ng-if=!group.directed><div ng-if=\\\"group.none.nodes.length > 0\\\"><md-subheader class=md-no-sticky>{{group.none.label}}</md-subheader><md-list-item ng-repeat=\\\"node in group.none.nodes track by node.id\\\" ng-click=\\\"main.activeNode = node\\\">{{node.label}}</md-list-item></div></div></div></md-list></md-tab-body></md-tab></md-tabs></div></md-sidenav><md-toolbar><div class=md-toolbar-tools><img class=logo src=assets/images/sda-logo-light.png alt=SDA><h1>Concept Browser</h1><span flex></span></div></md-toolbar><div style=\\\"overflow: hidden\\\" flex layout=column><concept-browser flex ng-if=main.graph ng-model=main.graph active-node=main.activeNode></concept-browser><div ng-if=\\\"!main.graph && main.graphLoading\\\" flex layout=column layout-align=\\\"center center\\\" layout-padding><md-progress-circular md-mode=indeterminate></md-progress-circular><div class=\\\"text-center md-headline md-secondary\\\">Loading graph data&hellip;<br>This may take a while.</div></div></div>\");\n$templateCache.put(\"app/trc-bio/event-editor.html\",\"<div class=form-group><label class=control-label for=event-title>Title</label><input type=text id=event-title name=event-title class=\\\"form-control event-title\\\" ng-model=event.title></div><div class=form-group><label class=control-label for=event-description>Description</label><textarea id=event-description name=event-description class=\\\"form-control event-description\\\" ng-model=event.description></textarea></div><div class=form-group><label class=control-label for=event-location>Location</label><input type=text id=event-location name=event-location class=\\\"form-control event-location\\\" ng-model=event.location></div><div class=form-group><label class=control-label for=event-date>Date</label><input type=text id=event-date name=event-date class=\\\"form-control event-date\\\" ng-model=event.date.description><!-- TODO add datepicker --></div>\");\n$templateCache.put(\"app/trc-bio/name-editor.html\",\"<div class=form-group class=name-role><label class=control-label for=name-role>Role</label><select id=name-role name=name-role class=\\\"form-control name-role\\\" ng-model=name.role><option ng-repeat=\\\"role in nameEditor.roles\\\" value={{role.value}}>{{role.label}}</option></select></div><div class=form-group class=name-structure><label class=control-label>Structured Name</label><input type=text class=name-title placeholder=title ng-model=name.title> <input type=text class=name-given placeholder=given ng-model=name.givenName> <input type=text class=name-middle placeholder=middle ng-model=name.middleName> <input type=text class=name-family placeholder=family ng-model=name.familyName> <input type=text class=name-suffix placeholder=suffix ng-model=name.suffix></div><div class=form-group class=name-label><label for=label>Display Label</label><input type=text placeholder=label ng-model=name.label></div>\");\n$templateCache.put(\"app/trc-bio/person-editor.html\",\"<div class=form-group><label for=person-name>Primary Name</label><trc-name-editor id=person-name ng-model=person.name></trc-name-editor></div><div class=form-group><label for=person-altnames>Alternate Names</label><div ng-repeat=\\\"name in person.altNames\\\"><trc-name-editor id=person-altnames ng-model=name></trc-name-editor><button ng-click=personEditor.removeName($index)>&minus;</button></div><button ng-click=personEditor.addName()>+</button></div><div class=form-group><label for=person-birth>Birth</label><div ng-if=person.birth><trc-event-editor id=person-birth ng-model=person.birth></trc-event-editor><button ng-click=\\\"personEditor.removeEvent(\\'birth\\')\\\">&minus;</button></div><div ng-if=!person.birth><button ng-click=\\\"personEditor.addEvent(\\'birth\\')\\\">+</button></div></div><div class=form-group><label for=person-death>Death</label><div ng-if=person.death><trc-event-editor id=person-death ng-model=person.death></trc-event-editor><button ng-click=\\\"personEditor.removeEvent(\\'death\\')\\\">&minus;</button></div><div ng-if=!person.death><button ng-click=\\\"personEditor.addEvent(\\'death\\')\\\">+</button></div></div><div class=form-group><label class=control-label for=person-summary>Summary</label><textarea id=person-summary name=person-summary class=\\\"form-control person-summary\\\" ng-model=person.summary></textarea></div>\");}]);"],"sourceRoot":"/source/"}