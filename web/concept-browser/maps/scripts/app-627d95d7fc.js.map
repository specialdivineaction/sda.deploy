{"version":3,"sources":["scripts/app.js"],"names":["angular","module","graphRepoFactory","$resource","getGraph","type","restResource","get","provider","url","repo","$get","graphRepoProvider","MainController","$http","$scope","$q","$mdToast","$mdDialog","$mdMedia","$location","$stateParams","$filter","$timeout","$document","peopleRepo","worksRepo","graphRepo","activate","loadSelectModes","loadSizeMetrics","defaultGraphType","graphType","vm","graphLoading","getGraphData","catch","showSimple","then","data","graph","$watch","node","sidebarLoading","loadNodeData","person","searchQuery","highlightedNodes","nodes","label","toggleRelnTypeFilter","typeId","ix","relnTypeFilter","indexOf","push","splice","selectModes","strategy","selected","adjacent","outEdges","filter","edgeFilter","map","edge","target","incident","inEdges","source","concat","worklist","visited","length","pop","forEach","selectMode","sizeMetrics","metadata","pagerank","disabled","sizeMetric","toggleSearchForm","showSearchForm","element","focus","clearSearchForm","showHelp","$event","config","targetEvent","fullscreen","templateUrl","controller","clickOutsideToClose","show","relation","makeTypeGroup","group","id","directed","out","title","in","reverseTitle","none","ensureTypeGroup","related","hasOwnProperty","works","searchByAuthor","worksP","$promise","items","Error","TYPES","key","all","nodesById","edges","this","activeNode","relnTypes","uk.ac.ox.bodleian.sda.relationships.influence","uk.ac.ox.bodleian.sda.relationships.provoked","uk.ac.ox.bodleian.sda.relationships.patternmatch","HelpDialogController","closeDialog","hide","close","conceptBrowserDirective","$window","linkFunc","scope","el","width","autoWidth","height","autoHeight","layout","rootEl","ConceptBrowser","size","nodeCentralityMetric","refresh","on","oldWidth","oldHeight","preventActivate","evt","$apply","$watchGroup","newValues","oldValues","queueRefresh","graphData","copy","$watchCollection","highlight","updateGraphSelections","directive","restrict","padding","link","runBlock","$log","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","controllerAs","otherwise","constant","d3","$logProvider","$mdThemingProvider","peopleRepoProvider","worksRepoProvider","debugEnabled","definePalette","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","contrastDarkColors","theme","primaryPalette","accentPalette","root","factory","define","amd","exports","EventDispatcher","trigger","eventName","context","eventHandlers","handler","e","console","error","globalHandlers","addGlobalListener","addListener","addOnceListener","deregister","API","once","require","dragstart","d","fixed","dragend","mouseover","px","x","py","y","mouseout","accumulate","quad","alpha","charges","cx","cy","charge","leaf","c","n","i","point","Math","random","k","index","pointCharge","isFunction","o","isNumber","LINK_DISTANCE","LINK_STRENGTH","CHARGE_DISTANCE_2","Infinity","force","cylindrical","wrapDx","dx","abs","repulse","x1","_","x2","dy","dw","dn","theta2","chargeDistance2","dragmove","event","resume","drag","distances","strengths","dispatch","friction","linkDistance","linkStrength","gravity","links","tick","end","q","s","t","l","m","sqrt","weight","geom","quadtree","visit","arguments","chargeDistance","theta","start","timer","position","dimension","neighbors","Array","j","candidates","cs","isNaN","w","h","call","stop","behavior","origin","edgePath","getX1","getY1","getX2","getY2","drawLine","selection","attr","y1","y2","fn","rebind","options","setSize","dims","isInitialized","svg","progressScale","range","setNodeCentralityMetric","centralityMetric","centralityExtent","extent","centralityMetricScale","domain","setSelectMode","_selectMode","setData","_nodes","_edges","setHighlighted","allNodesInGraph","every","unhighlightAll","setActivated","deactivate","deselectAll","select","setEdgeFilter","initialize","bindNodes","bindEdges","append","edgeTypes","reduce","types","defineArrowheads","baseGroup","edgeLayer","nodeLayer","progressBar","scale","linear","log","nodeRadiusScale","NODE_MIN_SIZE","NODE_MAX_SIZE","GRAPH_LAYOUT_CTORS","configureGraph","drawEdge","tip","tooltip","TIP_CSS_CLASS","direction","tooltipDirection","offset","tooltipOffset","html","events","showTooltip","hideTooltip","debounce","applyStyleClasses","sz","chargeRange","influenceRange","updatePositions","selectAll","transition","duration","nodeSelect","nodeEnter","enter","blur","ctrlKey","deselect","exit","remove","edgeSelect","ns","highlighted","focused","activated","activatedSet","selectedSet","slice","focusedSet","p","highlightedSet","classed","cls","max","min","dir","TIP_POSITION_MARGIN","bottom","top","right","left","radius","left_right","classTypes","arrowTypes","wait","leading","trailing","timeout","later","apply","ctx","args","callNow","clearTimeout","setTimeout","planar","warn","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,YACN,kBAKN,WACE,0BAaE,QAASC,GAAiBC,GAaxB,QAASC,GAASC,GAAlB,MAASC,GAASC,KAAMF,KAAAA,IAb1B,GAAAC,GAASH,EAAiBK,EAAWC,IAAA,UAG/BC,IACJ,OADAA,GAAIH,IAAOH,EACNM,yBAVP,IAAIF,KAEJ,OAFAA,GAAIC,IAAW,aACfD,EAASG,KAAMT,EACfM,EAPFR,QACGC,OAAO,YACPO,SAAS,YAAaI,MA8B3B,WAAC,YAGCZ,SAAAC,OAAA,qBACG,YACC,YACA,aACA,aACA,SACA,aACA,YACA,aACA,YACA,SACA,gBAMN,WAAC,YA6BC,SAASY,GAAeC,EAAOC,EAAQC,EAAIC,EAAUC,EAAWC,EAAUC,EAAWC,EAAcC,EAASC,EAAUC,EAAWC,EAAYC,EAAWC,GA8BtJ,QAAAC,KAGEC,IADFC,GAEE,IAAAC,GAAA,SAGIC,EAAYX,EAAahB,MAAQ0B,CADrCE,GAAAC,cAAI,EACJC,EAAIH,GAAYI,MAAa,WAE7B,MADAnB,GAAGoB,WAAe,uBAAAL,EAAA,iCAAAD,EAAA,MAClBI,EAAaJ,KACXO,KAAA,SAASC,GACTN,EAAAC,cAAO,EAGPD,EAFCO,MAAKD,EAAUC,OAChB,WACAP,EAAGC,cAAa,EAGhBjB,EAFCoB,WAAY,gCAKftB,EAAO0B,OAAO,kBAAmB,SAAUC,GACrCA,GADNT,EAAOU,gBAAO,EACZC,EAAUF,GAAAJ,KAAA,WACRL,EAAGU,gBAAiB,GACpB,WACEV,EAAGU,gBAAiB,EAGpB1B,EAFCoB,WAAY,+BAKfJ,EAAGY,OAAS,OAIhB9B,EAAO0B,OAAO,cAAe,SAAUK,GACrCb,EAAGc,iBAAmBD,EAAcxB,EAAQ,UAAUW,EAAGO,MAAMQ,OAASC,MAAOH,SAInF,QAASI,GAAqBC,GAC5B,GAAIC,GAAKnB,EAAGoB,eAAeC,QAAQH,EADrCC,GAAS,EACPnB,EAAIoB,eAAQE,KAAAJ,GAEVlB,EAAGoB,eAAeG,OAAKJ,EAAA,GAM3B,QAASvB,KACPI,EAAGwB,YAAYF,MADjBN,MAAS,YACPS,SAAG,SAAiBC,GAClB,IAAOA,EACP,QAKE,IAAIC,GAAWD,EAASE,SAASC,OAAOC,GAAYC,IAAI,SAAUC,GAChE,MAAOA,GAAKC,SAAZC,EAAYR,EAAAS,QAAAN,OAAAC,GAAAC,IAAA,SAAAC,GAGZ,MAAOA,GAAKI,QAEd,QAFEV,GAAYW,OAAAV,EAAAO,MAMlBlC,EAAGwB,YAAYF,MACbN,MAAO,QADTS,SAAG,SAAiBC,GAClB,IAAOA,EACP,QAME,KADA,GAAIY,IAAYZ,GACZa,KAAAD,EAAUE,OAAA,GAAA,CAGZ,GAAI/B,GAAO6B,EAASG,KADtBF,GAAOjB,KAAAb,GACLA,EAAImB,SAAOc,QAAS,SAAAV,GACpBO,EAAalB,QAAAW,EAAAC,QAAA,GACbK,EAAKhB,KAASU,EAAQC,UAOxB,MAAOM,MAIXvC,EAAGwB,YAAYF,MACbN,MAAO,UADTS,SAAG,SAAiBC,GAClB,MAAOA,IAAAA,GAAAW,OAAAX,EAAAS,QAAAN,OAAAC,GAAAC,IAAA,SAAAC,GACP,MAAUA,GAAAI,gBAOZpC,EAAGwB,YAAYF,MACbN,MAAO,WADTS,SAAG,SAAiBC,GAClB,MAAOA,IAAAA,GAAAW,OAAAX,EAAAE,SAAAC,OAAAC,GAAAC,IAAA,SAAAC,GACP,MAAUA,GAAAC,gBAOZjC,EAAG2C,WAAa3C,EAAGwB,YAAY,GAGjC,QAAS3B,KACPG,EAAG4C,YAAYtB,MADjBN,MAAS,WACPS,SAAG,SAAiBhB,GAClB,MAAOA,GAAAoC,SAAAC,YAMT9C,EAAG4C,YAAYtB,MACbN,MAAO,UADTS,SAAG,WACD,MAAO,MAMTzB,EAAG4C,YAAYtB,MACbN,MAAO,OADT+B,UAAG,EACDtB,SAAO,WACP,MAAA,MAMFzB,EAAGgD,WAAahD,EAAG4C,YAAY,GAGjC,QAASK,KACPjD,EAAGkD,gBAAkBlD,EAAGkD,eAArBlD,EAAAkD,eAGD5D,EAAS,WADPvB,QAAGoF,QAAA,uCAAgBC,UAKrBtE,EAAO+B,YAAc,GAIzB,QAASwC,KACPvE,EAAO+B,YAAc,GADvBvB,EAAS,WACPU,EAAAkD,gBAAqB,IAMvB,QAASI,GAASC,GAChB,GAAIC,IADNC,YAASF,EACPG,WAAaxE,EAAA,OAAAA,EAAA,MACXyE,YAAa,qBACbC,WAAY,uBACZC,qBAAa,EAKf5E,GAAU6E,KAAKN,GAKjB,QAAS1B,GAAWE,GAClB,MAAoC,KAA7BhC,EAAGoB,eAAeoB,QAAgBxC,EAAGoB,eAAeC,QAAQW,EAAK+B,WAAa,EAGvF,QAASpD,GAAaF,GAepB,QAAIuD,GAAU5F,GAGZ,GAAI6F,IAAUC,GAAI9F,EAAK8F,GAAIC,SAAU/F,EAAK+F,SAS1C,OATI/F,GAAA+F,UAGFF,EAAMG,KAAQpD,MAAO5C,EAAKiG,MAAOtD,UADnCkD,EAAIK,IAAKtD,MAAU5C,EAAAmG,aAAAxD,WAEjBkD,EAAMO,MAAOxD,MAAO5C,EAAKiG,MAAAtD,UAKpBkD,EAGT,QAASQ,GAAgBrG,GAKvB,MAJKsG,GAAQC,eAAevG,EAAK8F,MADnCQ,EAAStG,EAAA8F,IAAAF,EAAsB5F,IAKtBsG,EAAQtG,EAAK8F,IAhCtBlE,EAAGY,OAASpB,EAAWlB,IAAImC,EAAKyD,GAAhC,IAAGU,GAASnF,EAAAoF,eAAoBpE,EAAAyD,IAG5BY,EAASF,EAAMG,SAAS1E,KAAK,WADjC,IAAIuE,EAAQI,MACR,KAAA,IAASC,OAAM,uBAMjB,OADAjF,GAAG4E,MAAQA,EAAMI,MACVhF,EAAG4E,QAGRF,IAuBJjE,GAAKmB,SAASG,IAAI,SAAUC,GAC1B,GAAI5D,GAAO8G,EAAMlD,EAAK+B,SADxB,IAAK3F,EAAL,CAEE,GAAI6F,GAAOQ,EAAArG,EAGX6F,GAAM7F,EAAK+F,SAAW,MAAQ,QAAQpD,MAAMO,KAAKU,EAAKC,WAGxDxB,EAAK0B,QAAQJ,IAAI,SAAUC,GACzB,GAAI5D,GAAO8G,EAAMlD,EAAK+B,SADxB,IAAK3F,EAAL,CAEE,GAAI6F,GAAOQ,EAAArG,EAGX6F,GAAM7F,EAAK+F,SAAW,KAAO,QAAQpD,MAAMO,KAAKU,EAAKI,WAGvDpC,EAAG0E,UACH,KAAK,GAAIS,KAAOT,GAAaA,EAAQC,eAAeQ,IADpDnF,EAAG0E,QAAUpD,KAAAoD,EAAAS,GAKb,OAAOpG,GAAGqG,KAAKpF,EAAGY,OAAOmE,SAAUD,IAGrC,QAAS5E,GAAa9B,GACpB,GAAImC,GAAQb,EAAUpB,IAAIF,EAA1B,OAAImC,GAAQwE,SAAU1E,KAAI,WAGxB,GAAIgF,KA0BJ,OAvBA9E,GAAMA,MAAMQ,MAAM2B,QAAQ,SAAUjC,GAClCA,EAAK0B,WADP1B,EAAMmB,YAEJyD,EAAK5E,EAAAyD,IAAWzD,IAUlBF,EAAMA,MAAM+E,MAAM5C,QAAQ,SAAUV,GAClC,GAAIC,GAASoD,EAAUrD,EAAKI,QADxBA,EAAMiD,EAAMrD,EAAQC,OAExBD,GAAII,OAASA,EAGbA,EAAOR,SAASN,KAAKU,GAArBA,EAAAC,OAAOA,EAGPA,EAAOE,QAAQb,KAAKU,KAGfzB,IAvSX,GAAIP,GAAKuF,IAATvF,GAAAiD,iBAASA,EAGTjD,EAAGqD,gBAAkBA,EADrBrD,EAAGkD,gBAAA,EACHlD,EAAGa,YAAA,GAEHb,EAAGsD,SAAAA,EAEHtD,EAAGO,MAAA,KAGHP,EAAGwF,WAAa,KADhBxF,EAAGY,OAAQ,KACXZ,EAAG4E,MAAA,KACH5E,EAAG0E,QAAS,KACZ1E,EAAGU,gBAAQ,EACXV,EAAGC,cAAU,EAEbD,EAAGyF,UAAAP,EAGHlF,EAAGoB,kBADHpB,EAAGiB,qBAAYA,EAEfjB,EAAG2C,WAAA,KAGH3C,EAAGwB,eAAHxB,EAAGgD,WAAA,KAGHhD,EAAG4C,eAAH5C,EAAGc,oBAEHnB,wKArDF,IAAIuF,IACFQ,iDADExB,GAAA,gDACFG,MAAA,aACEE,aAAI,gBACJJ,UAAO,GAITwB,gDACEzB,GAAI,+CADNG,MAAA,WACEE,aAAI,cACJJ,UAAO,GAITyB,oDACE1B,GAAI,mDADNG,MAAA,yBACEF,UAAI,GAMRpG,SACGC,OAAO,qBADV4F,WAAA,iBAAAhF,MAoTF,WACE,YAOA,SAHGiH,GAAW/G,EAAwBG,GAGtC,QAAS6G,KACP7G,EAAO8G,OAAPjH,EAAOkH,MAAQF,mCARjB/H,QAGGC,OAAO,qBACP4F,WAAW,uBAAwBiC,MAcxC,WACE,YAOA,SAJGI,GAAOC,EAAA5G,GAwBR,QAAS6G,GAASC,EAAOC,GACvB,GAAIC,GAAQF,EAAME,MAHpBC,GAAO,EAKDC,EAASJ,EAAMI,OAHrBC,GAAkB,EACZC,EAAQN,EAAMM,OACdC,EAAAN,EAAY/H,IAAA,EAGhBgB,GAAI,WACAgH,IAKAA,EAAQD,EAAGC,QACXC,GAAY,GADZC,IACAA,EAAAH,EAAYG,SAKZC,GAAa,EAGf,IAJElG,GAASqG,eAAGD,EAAAD,GACZG,MAAAP,EAAaE,IAKZ1E,WAAW,SAAUE,GACpB,MAAkC,KAA3BoE,EAAMX,UAAUjD,QAAgB4D,EAAMX,UAAUpE,QAAQW,EAAK+B,WAAa,GADlFqC,GAAApD,YAKDzC,EAJEuG,qBAAuBV,EAAApD,YAGvBoD,EAAMzD,YACRpC,EAAMoC,WAAAyD,EAAAzD,YAGJyD,EAAM7F,QACRA,EAAMD,KAAA8F,EAAW7F,MAAMQ,MAAAqF,EAAA7F,MAAA+E,OAKvB/E,EAAMwG,WAGRhJ,QAJQoF,QAAK+C,GAAYc,GAAA,SAAa,WACpC,GAAAT,GAAME,EAAN,CAIA,GAAIQ,GAACX,EACHY,EAAAV,CAMED,KAHJD,EAAID,EAAAC,SAGAG,IACFD,EAAQH,EAAGG,UAGTS,IAAYX,GAAAY,IAAAV,IACdjG,EAAAsG,MAAYP,EAAAE,IAKZjG,EAAMwG,aAOV,IAAII,IAAkB,CACtB5G,GAAMyG,GAAG,WAAY,SAAUI,GACzBD,GAAJf,EAAIiB,OAAA,WACFjB,EAAAZ,WAAA4B,EAAA3G,SASJ2F,EAAMkB,aAAa,QAAS,SAAU,QAAS,aAAc,aAAc,cAAe,SAAUC,EAAWC,GAC7G,GAAIC,IAAe,CAkBnB,IAhBIF,EAAU,IAAMA,EAAU,KAAOC,EAAU,KAHjDlB,EAAMiB,EAAa,GACjBhH,EAAIsG,MAAAP,EAAeE,IAKbe,EAAU,KAHZE,GAAU,IAIVF,EAAA,IAAeA,EAAA,KAAAC,EAAA,KAKjBhB,EAASe,EAAU,GACnBhH,EAAMsG,MAAMP,EAAOE,IACfe,EAAU,KAHZE,GAAU,IAIVF,EAAA,IAAeA,EAAA,KAAAC,EAAA,GAAA,CAMjB,GAAIE,GAAY3J,QAAQ4J,KAAKJ,EAAU,GACvChH,GAAMD,KAAKoH,EAAU3G,MAAO2G,EAAUpC,OAHxCmC,GAAc,EAGZF,EAAW,KAAAC,EAAiB,KAC5BL,GAAe,EAKf5G,EAAMZ,SAAS4H,EAAU,IACzBJ,GAAkB,GADlBI,EAAM,IAASA,EAAU,KAAAC,EAAA,KACzBjH,EAAAuG,qBAAkBS,EAAA,IAKlBE,GAAe,GADfF,EAAM,IAAAA,EAAqB,KAAAC,EAAU,IACrCjH,EAAAoC,WAAe4E,EAAA,IAGbE,GACFlH,EAAMwG,YAQVX,EAJIwB,iBAAM,mBAAA,SAAAL,GAKJA,GACFhH,EAAMsH,UAAUN,KAIpBnB,EAJIwB,iBAAgB,YAAA,SAAAL,GAKdA,GACFhH,EAAMuH,4BArJd,GAJCC,IAKCC,SAAU,IACV5B,OAHJ7F,MAAS,WACH+F,MAAA,IACFE,OAAU,IACVyB,QAAO,IACLvB,OAAO,IACPlB,WAAO,IACPxC,WAAQ,IACRL,WAAS,IACT7B,iBAAQ,IACR2E,UAAA,KAMFyC,KAJE/B,EAOJ,OAAO4B,oCA1BVhK,QACCC,OAAA,qBAIG+J,UAAU,iBAAkB9B,MAkKjC,WACE,YAEA,SAAAkC,GAAAC,GAMEA,EALCC,MAAO,mCADVtK,QAHDC,OAAA,qBACCsK,IAAAH,MAaF,WACE,YAOA,SAASI,GAAaC,EAAgBC,GALtCD,EACGE,MAAO,QACPlK,IAAO,IAOJmF,YAAa,qBACbC,WAAY,iBALlB+E,aAAS,SASPF,EANSG,UAAA,uDARX7K,QACGC,OAAO,qBAJXwF,OAAA+E,MAuBD,WACE,YAEAxK,SACGC,OAAO,qBACP6K,SAAS,KAAMC,OAIpB,WACE,YAOA,SAAStF,GAAOuF,EAAcC,EAAoBC,EAAoBC,EAAmBvK,GALzFoK,EAAAI,cAAA,GASEF,EAPQzK,IAAA,sBAQR0K,EAAkB1K,IAAM,qBACxBG,EAAkBH,IAAM,qBAExBwK,EAAmBI,cAAc,aANjCC,GAAA,UAQEC,IAAO,UANTC,IAAA,UACAC,IAAA,UACAC,IAAA,UAQEC,IAAO,UANTC,IAAA,UACEC,IAAM,UACNC,IAAO,UACPC,IAAO,UACPC,KAAO,UACPC,KAAO,UACPC,KAAO,UACPC,KAAO,UAEPC,qBAAO,QACPC,oBAAO,UAUTpB,EAPUI,cAAA,UACRC,GAAA,UAQAC,IAAO,UANPC,IAAA,UACAC,IAAA,UAQAC,IAAO,UACPC,IAAO,UANTC,IAAA,UACEC,IAAM,UACNC,IAAO,UACPC,IAAO,UACPC,KAAO,UACPC,KAAO,UACPC,KAAO,UACPC,KAAO,UAEPC,qBAAO,QACPC,oBAAO,KAAA,MAAA,MAAA,UAUTpB,EAPUqB,MAAA,WACRC,eAAQ,aAQPC,cAAc,uHAvDnBxM,QACGC,OAAO,qBACPwF,OAAOA,MA2DZ,SAPOgH,EAAAC,GACc,kBAAdC,SAAcA,OAAAC,IAQjBD,UAAWD,GACgB,gBAAXzM,SAAuBA,OAAO4M,QAC9C5M,OAAO4M,QAAUH,IAEjBD,EAAKK,gBAAkBJ,KALzBlF,KAAI,WAQJ,YAKA,SAASsF,KA6BP,QAASC,GAAQC,EAAWC,GACtBC,EAAcF,IAChBE,EAAcF,GAAWrI,QAAQ,SAAUwI,GACzC,IACEA,EAAQF,GACR,MAAOG,GALfC,QAASC,MAAQF,MAYfG,EAPa5I,QAAG,SAAAwI,GAQd,IACEA,EAPEH,EAAcC,GAQhB,MAAOG,GAEPC,QAAQC,MAAMF,MAUpB,QAASI,GAAkBL,GAGzB,MAFAI,GAAehK,KAAK4J,GAEb,WACL,GAAI/J,GAAKmK,EAAejK,QAAQ6J,EAC5B/J,IAAM,GACRmK,EAAe/J,OAAOJ,EAAI,IAWhC,QAASqK,GAAYT,EAAWG,GAAhC,MACOD,GAAcF,KACjBE,EAAcF,OAGhBE,EAAcF,GAAWzJ,KAAK4J,GALvB,WACP,GAAK/J,GAAA8J,EAAcF,GAAY1J,QAAA6J,EAC7B/J,IAAA,GAQE8J,EAAcF,GAAWxJ,OAAOJ,EAAI,IAW1C,QAASsK,GAAgBV,EAAWG,GAClC,GAAIQ,GAAaF,EAAYT,EAAW,SAAUC,GAChD,IACEE,EAAQF,GACR,MAAOG,GAEPC,QAAQC,MAAMF,WALdO,MAWJ,OAAOA,GArGT,GAAIT,MAMAK,KAIAK,IAKJ,OAJAA,GAAIvG,IAAMmG,EACVI,EAAI3E,GAAKwE,EANTG,EAAIC,KAAAH,EAQJE,EAAIb,QAAUA,EACPa,EA0FT,MAAOd,KAMT,SAAWL,EAAMC,GANR,kBAAAC,SAAAA,OAAAC,IAQLD,QAAQ,MAAOD,GACY,gBAAXzM,SAAuBA,OAAO4M,QAC9C5M,OAAO4M,QAAUH,EAAQoB,QAAQ,OAEjCpB,EAAQ3B,KALVvD,KAAI,SAAOuD,GAQX,YAmaA,SAASgD,GAAUC,GACjBA,EAAEC,OAAS,EAGb,QAASC,GAAQF,GACfA,EAAEC,QAAS,EAGb,QAPIE,GAASH,GAQXA,EAAEC,OAAS,EACXD,EAAEI,GAAKJ,EAAEK,EANXL,EAAAM,GAASN,EAAAO,EAUT,QAASC,GAASR,GANlBA,EAAAC,QAAS,EAUT,QAPSQ,GAAEC,EAAAC,EAAAC,GAQT,GAAIC,GAAK,EACPC,EAAK,CAIP,IATAJ,EAAEK,OAAU,GASPL,EAAKM,KAMR,IAZJ,GAUMC,GAVNjM,EAAS0L,EAAW1L,MACdkM,EAAAlM,EAAKyB,OACP0K,GAAK,IAUIA,EAAID,GANXD,EAACjM,EAAKmM,GACJF,IAEFR,EAAKQ,EAAAN,EAAAC,GACLF,EAAAK,QAAAE,EAAAF,OAQAF,GAAMI,EAAEF,OAASE,EAAEJ,GANrBC,GAAOG,EAAEF,OAAOE,EAAAH,GAWlB,IAPIJ,EAAAU,MAAW,CAEXV,EAAQM,OACRN,EAAAU,MAAQf,GAAAgB,KAAWC,SAAA,GAQnBZ,EAAKU,MAAMb,GAAKc,KAAKC,SAAW,GAJpC,IAAIC,GAAKZ,EAAOC,EAAAF,EAAAU,MAAAI,MAEdd,GAAKK,QAAKL,EAAMe,YAAAF,EAShBV,GAPEU,EAAKb,EAAMU,MAAKf,EAQlBS,GAAMS,EAAIb,EAAKU,MAAMb,EAGvBG,EAAKG,GAAKA,EAAKH,EAAKK,OACpBL,EAPEI,GAAKA,EAAAJ,EAAUK,OAUnB,QAPIW,GAAeC,GAQjB,MAAoB,kBAANA,GAGhB,QAPOC,GAAUD,GAQf,MAAoB,gBAANA,GAlehB,GAPEE,GAAiB,GAQfC,EAPG,EACLC,EAAQC,EAAAA,CAcVjF,GAAGpC,OAPCsH,MAAAC,YAAoB,WA0BtB,QAPIC,GAASC,EAAA7H,GAmBX,MAlBE,GAAA8G,KAAQgB,IAAAD,GAAA7H,IAER6H,EAAA,EAEAA,GAAA7H,EAGE6H,GAAI7H,GAIJ6H,EAUN,QAPME,GAAM5N,GAQV,MAAO,UAAUgM,EAAM6B,EAAIC,EAAGC,GAC5B,GAAI/B,EAAKU,QAAU1M,EAAM,CACvB,GAAI6F,GAAQO,EAAK,GAEbsH,EAAKD,EAAOzB,EAAKG,GAAKnM,EAAK2L,EAAG9F,GAC9BmI,EAAKhC,EAAKI,GAAKpM,EAAK6L,EANrBoC,EAAAF,EAAQF,EAGPK,EAAAR,EAAQA,EAAKM,EAAAA,EAQbnB,EAAI,CAGR,IAPIoB,EAAKA,EAAKE,EAAAD,EAaZ,MALIA,GAAKE,IACPvB,EAAIb,EAAKK,OAAS6B,EANlBlO,EAAK0L,IAAKgC,EAAKb,EACf7M,EAAI4L,IAAAoC,EAAAnB,IASC,CAJLb,GAAIU,OAAKwB,GAASA,EAAAE,IAQpBvB,EAPEb,EAAKe,YAAWmB,EAQlBlO,EAPE0L,IAAKgC,EAAMb,EAQb7M,EAAK4L,IAAMoC,EAAKnB,GAGpB,OAAQb,EAAKK,QAoSjB,QAPOgC,GAAU/C,GAQfA,EAAEI,GAAKrD,EAAGiG,MAAM3C,EANhBL,EAAAM,GAAKvD,EAAGiG,MAAAzC,EAQR0B,EAPMgB,SA9VR,GAGIC,GACAvC,EAGAwC,EACAC,EACAxC,EATAqB,KACAe,EAAQjG,EAAGsG,SAAS,QAAS,OAAQ,OACrCvI,GAAQ,EAAG,GAGXwI,EAAW,GANdC,EAAa1B,EACV2B,EAAQ1B,EACRf,GAAQ,GACR+B,EAAWf,EACX0B,EAAA,GACAZ,EAAA,IACA7N,KACA0O,IAwYJ,OA5UAzB,GAAM0B,KAPO,WASX,IAAKhD,GAAS,KAAQ,KAFxB,MAJIqC,GAAAY,KAQEvR,KAAM,MACNsO,MAAOA,EAAQ,KALf,CAUJ,IAEEkD,GACA1C,EANAQ,EAQAmC,EACAC,EANFC,EACEzC,EACAlB,EACAE,EAVAW,EAAMlM,EAAIyB,OAQVwN,EAPEP,EAAMjN,MAmBV,KAPE0K,EAAA,EAAAA,EAAA8C,IAAA9C,EACAQ,EAAA+B,EAAAvC,GACA2C,EAAAnC,EAAAtL,OACA0N,EAAApC,EAAAzL,OACAmK,EAAA8B,EAAA4B,EAAA1D,EAAAyD,EAAAzD,EAAAvF,EAAA,IAQAyF,EAAIwD,EAAExD,EAAIuD,EAAEvD,EACZyD,EAAK3D,EAAIA,EAAIE,EAAIA,EALP,IAANyD,IACJA,EAAMrD,EAAAyC,EAAAjC,KAAA6C,EAAA3C,KAAA6C,KAAAF,IAAAb,EAAAhC,IAAA6C,EACN3D,GAAM2D,EACNzD,GAAIyD,EAEJD,EAAA1D,GAASA,GAAIkB,EAAIuC,EAAAK,QAAAJ,EAAAI,OAAAL,EAAAK,SAQfJ,EAAExD,GAAKA,EAAIgB,EALXuC,EAAAzD,GAAIA,GAAQkB,EAAA,EAAAA,GACZuC,EAAAvD,GAAKA,EAAAgB,EAaT,IADAA,EAAIZ,EAAQ8C,EANN,IAAFlC,IAQFlB,EAPIvF,EAAK,GAAI,EAQbyF,EAAIzF,EAAK,GAAK,EACdqG,GAAI,EACAI,GACF,OAASJ,EAAID,GANbS,EAAA3M,EAAQmM,GAENQ,EAAApB,IAAKA,EAAKoB,EAAApB,GAAAgB,CAYhB,IAAIR,EAGF,IAFAN,EAAWoD,EAAI9G,EAAGqH,KAAKC,SAASrP,GAAQ2L,EAAOC,GAC/CO,GAPI,IAQKA,EAAID,IACLS,EAAI3M,EAAMmM,IAAIlB,OAClB4D,EAAES,MAAMhC,EAAQX,GAOtB,KADAR,GAPI,IACIA,EAAAD,GAQNS,EAAI3M,EAAMmM,GACNQ,EAAE1B,OACJ0B,EAAEtB,EAAIsB,EAAEvB,GACRuB,EAAEpB,EAAIoB,EAAErB,KALRqB,EAACtB,IAAAsB,EAAAvB,IAAAuB,EAAAvB,GAAAuB,EAAAtB,IAAAiD,EACL3B,EAAApB,IAASoB,EAAIrB,IAAGqB,EAAArB,GAAAqB,EAAApB,IAAA+C,EAYhBnC,IAAI,CAEJ,KADA,GAPI5G,GAAQO,EAAE,KACRqG,EAAMD,GAAE,CAQZS,EAAI3M,EAAMmM,EAEV,IAAIiB,GAAKT,EAAEvB,GAAKuB,EAAEtB,CAClBsB,GAAEtB,GAAK9F,EALLoH,EAAAtB,EAAQ,IACZsB,EAAAtB,GAAS9F,GAIPoH,EAAEvB,GAAKuB,EAAAtB,EAAA+B,EAWTY,EAAMW,MACJtR,KAAM,OACNsO,MAAOA,KAIXsB,EAAMjN,MAAQ,SAAUqL,GANtB,MAAAkE,WAAW9N,QAQXzB,EAPQqL,EACN4B,GAFSjN,GAYbiN,EAAMyB,MAAQ,SAAUrD,GANxB,MAAMkE,WAAQ9N,QACZiN,EAAKrD,EACL4B,GAFyByB,GAY3BzB,EAAMnH,KAAO,SAAUuF,GANvB,MAAMkE,WAAQ9N,QACZqE,EAAKuF,EACL4B,GAFyBnH,GAY3BmH,EAAMsB,aAAe,SAAUlD,GAN/B,MAAMkE,WAAO9N,QACX8M,EAAe7B,EAAQrB,GAAOA,GAAAA,EACvB4B,GAFiBsB,GAY1BtB,EAAMuB,aAAe,SAAUnD,GAN/B,MAAMkE,WAAA9N,QACJ+M,EAAe9B,EAAQrB,GAAOA,GAAAA,EAC9B4B,GAF6BuB,GAY/BvB,EAAMqB,SAAW,SAAUjD,GAN3B,MAAMkE,WAAA9N,QACJ6M,GAAKjD,EACL4B,GAF6BqB,GAY/BrB,EAAMlB,OAAS,SAAUV,GANzB,MAAMkE,WAAW9N,QACfsK,EAAKW,EAAUrB,GAAQA,GAAOA,EAC9B4B,GAF4BlB,GAY9BkB,EAAMuC,eAAiB,SAAUnE,GANjC,MAAMkE,WAAS9N,QACbqM,EAAezC,EAAAA,EACf4B,GAF0BZ,KAAA6C,KAAApB,IAY5Bb,EAAMwB,QAAU,SAAUpD,GAN1B,MAAMkE,WAAA9N,QACJgN,GAAKpD,EACL4B,GAFqBwB,GAYvBxB,EAAMwC,MAAQ,SAAUpE,GANxB,MAAMkE,WAAU9N,QACdoM,EAAKxC,EAAAA,EACL4B,GAF2BZ,KAAA6C,KAAArB,IAY7BZ,EAAMtB,MAAQ,SAAUN,GANxB,MAAMkE,WAAQ9N,QAEZ4J,GAAAA,EACAM,EAQaA,EAAPN,EAAI,EAAWA,EACN,EANXA,EAAQ,IACZ2C,EAAK0B,OAQDrS,KAAM,QANNsO,MAACA,EAAAN,IAEHtD,EAAA4H,MAAQ1C,EAAG0B,OAGX1B,GAduBtB,GAwB3BsB,EAAMyC,MAAQ,WAmDZ,QAPOE,GAAWC,EAAQ/J,GAQxB,IAAKgK,EAAW,CAGd,IATFA,EAAY,GAAIC,OAAQ7D,GASjB8D,EAAI,EAAGA,EAAI9D,IAAK8D,EACnBF,EAAUE,KALhB,KAASA,EAAA,EAAAA,EAASf,IAAAe,EAAA,CACZ,GAACrD,GAAA+B,EAAWsB,EACdF,GAAYnD,EAAAtL,OAAImL,OAAMjM,KAAAoM,EAAAzL,QAQpB4O,EAAUnD,EAAEzL,OAAOsL,OAAOjM,KAAKoM,EAAEtL,SASrC,IALA,GAGEgK,GAVA4E,EAAYH,EAAY3D,GAQxB6D,GAPE,EAQFE,EAPED,EAAYxO,SAUPuO,EAAIE,GACX,IAAKC,MAAM9E,EAAI4E,EAAWD,GAAGH,IAAa,MAAOxE,EAEnD,OAPOgB,MAAAC,SAAAxG,EAjET,GAPEqG,GAYA2D,EANJnD,EAEIT,EAAIlM,EAAMyB,OACVwN,EAAIP,EAAMjN,OANZ2O,EAAAtK,EAAO,GAQLuK,EAAIvK,EAAK,EAIX,KAPEqG,EAAI,EAAMA,EAAAD,IAAAC,GACVQ,EAAI3M,EAAMmM,IAAAK,MAAAL,EACVQ,EAAAwC,OAAS,CAUX,KAPEhD,EAAA,EAAAA,EAAA8C,IAAA9C,EAQAQ,EAAI+B,EAAMvC,GANPS,EAAOD,EAAItL,UAAQsL,EAAAtL,OAAArB,EAAA2M,EAAAtL,SACrBuL,EAAUD,EAAIzL,UAAQyL,EAAAzL,OAAAlB,EAAA2M,EAAAzL,WACrByL,EAAAtL,OAAS8N,SAQTxC,EAAEzL,OAAOiO,MAGb,KAPEhD,EAAI,EAAMA,EAAAD,IAAAC,EACVQ,EAAI3M,EAAAmM,GACAgE,MAAAxD,EAAAtB,KAAWsB,EAAAtB,EAAAuE,EAAW,IAASQ,IAC/BD,MAAAxD,EAAOpB,KAAAoB,EAAApB,EAAAqE,EAAA,IAAAS,IACPF,MAAAxD,EAAOvB,MAAAuB,EAAAvB,GAAAuB,EAAAtB,GAQP8E,MAAMxD,EAAErB,MAAKqB,EAAErB,GAAKqB,EAAEpB,EAI5B,IADA4C,KANEzB,EAAY6B,GACZ,IAAIpC,EAAA,EAAQA,EAAI8C,IAAE9C,EAAIgC,EAAShC,IAAKoC,EAAA+B,KAAA9L,KAAAkK,EAAAvC,GAAAA,OAEpC,KAAIA,EAAA,EAAQA,EAAA8C,IAAO9C,EAAKgC,EAAEhC,GAAAoC,CAG5B,IAMAH,KANA1B,EAAY8B,GACZ,IAAIrC,EAAA,EAAAA,EAAW8C,IAAA9C,EAAAiC,EAAAjC,IAAAqC,EAAA8B,KAAA9L,KAAAkK,EAAAvC,GAAAA,OASb,KAAKA,EAAI,EAAGA,EAAI8C,IAAK9C,EAAGiC,EAAUjC,GAAKqC,CAJzC,IAMA5C,KANAc,EAAYX,GACZ,IAAII,EAAA,EAAAA,EAAWD,IAAAC,EAAAP,EAAAO,IAAAJ,EAAAuE,KAAA9L,KAAAxE,EAAAmM,GAAAA,OASb,KAAKA,EAAI,EAAGA,EAAID,IAAKC,EAAGP,EAAQO,GAAKJ,CA8BvC,OAAOkB,GAAMgB,UAGfhB,EAAMgB,OAAS,WACb,MAPEhB,GAAOtB,MAAK,KAUhBsB,EAPEsD,KAAO,WAQP,MAAOtD,GAAMtB,MAAM,IAIrBsB,EAAMiB,KAAO,WASX,MARKA,KAAMA,EAAOnG,EAAGyI,SAAStC,OANhCuC,OAAM,SAAO9D,GACX,MAAOA,KASJ1G,GAAG,kBAAmB8E,GACtB9E,GAAG,aAAc8H,GANtB9H,GAAM,gBAAmBiF,IAEpBqE,UAAO9N,WASV+C,MAAKyB,GAAG,kBAAmBkF,GANxBlF,GAAG,iBAAAuF,GACH8E,KAAGpC,GAJiBA,GAoBzBjB,EAAMyD,SAAW,WANjB,GAAAnL,GAASO,EAAS,GAEd6K,EAAQ,SAAM3F,GAAA,MAAAA,GAAA,GAAA,IAChB4F,EAAM,SAAA5F,GAAA,MAAAA,GAAA,GAAA,IAQF6F,EAAQ,SAAU7F,GAAK,MAAOA,GAAE,GAAG,IACnC8F,EAAQ,SAAU9F,GAAK,MAAOA,GAAE,GAAG,IALnC+F,EAAQ,SAAKC,GAQfA,EAAUC,KAAK,IAAK,SAAUjG,GAN5B,GAAAuC,GAAQoD,EAAA3F,GACRkG,EAAQN,EAAA5F,GACRyC,EAAQoD,EAAA7F,GACRmG,EAAQL,EAAA9F,EAER,OAAA,GAAAqB,KAAWgB,IAAAE,EAAAE,GAAUlI,EAEZ,KAAMgI,EAAA,IAAA2D,EAAA,MAAAzD,EAAA,IAAA0D,EACN5D,EAAME,EAEN,KAAMF,EAAA,IAAA2D,EAAA,OAAAzD,EAAAlI,GAAA,IAAA4L,EAAA,MAQJ1D,EAAK,IAAM0D,EAAK,OAAS5D,EAAKhI,GAAS,IAAM2L,EAJ/C,KAAO3D,EAAK,IAAM2D,EAAK,OAAQzD,EAAKlI,GAAM,IAAA4L,EAAA,MACxC1D,EAAK,IAAI0D,EAAA,OAAA5D,EAAAhI,GAAA,IAAA2L,IAiBxB,OALAH,GAASxD,GAAK,SAAU6D,GAAkB,MAAZT,GAAQS,EAAWL,GACjDA,EAPMG,GAAO,SAAOE,GAAgB,MAAXR,GAAWQ,EAASL,GAQ7CA,EAPQtD,GAAA,SAAY2D,GAAoB,MAAdP,GAAKO,EAAcL,GAQ7CA,EAASI,GAAK,SAAUC,GAAkB,MAAZN,GAAQM,EAAWL,GAE1CA,GAJPhJ,EAAAsJ,OAAcpE,EAAAe,EAAc,SAuFlC,SAPWvE,EAAAC,GACa,kBAAbC,SAAaA,OAAAC,IAQpBD,QAAQ,KAAM,mBAAoB,wBAAyBD,GAChC,gBAAXzM,SAAuBA,OAAO4M,SAC9CiB,QAAQ,wBACR7N,OAAO4M,QAAUH,EAAQoB,QAAQ,MAAOA,QAAQ,sBALnDrB,EAAA5D,eAAyB6D,EAAAD,EAAA1B,GAAA0B,EAAAK,kBASvBtF,KAPC,SAAcuD,EAAA+B,GAQhB,YAsCA,SAASjE,GAAeD,EAAQD,EAAQ2L,GAmMtC,QAASC,GAAQC,GAUf,MATAjM,GAAQiM,EAAK,GACb/L,EAAS+L,EAAK,GAEVC,KACFC,EAAIT,KAAK,QAAS1L,GAAO0L,KAAK,SAAUxL,GACxCkM,EAAcC,OAAO,EAAGrM,IAN5B/F,EAASsG,MAAAP,EAAcE,KAUdmF,GAQT,QAASiH,GAAwB9L,GAG/B,GAFA+L,GAAmB/L,EAEf0L,GAAe,CACjB,GAAIM,GAAmBhK,EAAGiK,OAAOhS,EAAO8R,GACxCG,GAAsBC,OAAOH,EAAiB,KAAOA,EAAiB,IAAMA,EAAiB,GAAK,EAAGA,EAAiB,GAAK,GAAKA,GAJlI,MAAAnH,IAeF,QAASuH,GAAcC,GAGrB,MAFAxQ,IAAawQ,EAENxH,GAST,QAASyH,GAAQC,EAAQC,GAUvB,MATAvS,GAAQsS,EACR/N,EAAQgO,EAGRvS,EAAM2B,QAAQ,SAAUjC,GACtBA,EAAK2L,GAAK3L,EAAK2L,GAAKgB,KAAKC,UAAY/G,EANzC7F,EAAS6L,GAAA7L,EAAQ6L,GAAAc,KAAQC,UAAQ7G,IAUxBmF,GAQT,QAAS4H,GAAezS,GAChBA,YAA4BgQ,SAChChQ,GAAoBA,GAItB,IAAI0S,GAAkB1S,EAAiB2S,MAAM,SAAUhT,GANzD,MAASM,GAAAM,QAAeZ,IAAA,GAUtB,KAAK+S,EACH,KAAM,IAAIvO,OAAM,8DADlB,OAIAyO,KACA7L,EAAU/G,GALL6K,GAeP,QAASgI,GAAalT,GACpB,GAAIA,GAAQM,EAAMM,QAAQZ,GAAQ,EAChC,KAAM,IAAIwE,OAAM,oDAalB,OAVA2O,KALFnT,IACEd,EAAIc,GAUFoT,IANFC,EAAArT,IAGEkL,GAeJ,QAASoI,GAAc5B,GAGrB,MAFArQ,IAAaqQ,EAENxG,GAQT,QAAS5E,KAaP,MAXAiN,KAGAzT,EACGQ,MAAMA,GANX0O,MAASnK,GAQJmL,QAEHwD,IACAC,IALGvI,GAYL,QAPEqI,KAQA,IAAK1N,IAAUE,EANf,KAAO,IAAAvB,OAAA,iFAUP,KAAKlE,IAAUuE,EACb,KAAM,IAAIL,OAAM,6EAGlB,KAPEuN,GAOF,CAIAA,IAPY,EASZC,EAAM3J,EAAGgL,OAAOnN,GAAQwN,OAAO,OAN/BnC,KAAI,QAAA1L,GACF0L,KAAA,SAAAxL,EAGF,IAAA4N,GAAgB9O,EAAA+O,OAAA,SAAAC,EAAAtS,GAWd,MAHIsS,GAAMjT,QAAQW,EAAK+B,UAAY,GANrCuQ,EAAShT,KAAAU,EAAO+B,UAERuQ,MAGRC,GAAgB9B,EAAM2B,GAAO,GAAA,YAAiB,WAAM,WASpD,IAPII,GAAW/B,EAAK0B,OAAA,KAAAnC,KAAA,QAAA,kBAQpByC,GAAYD,EAAUL,OAAO,KAAKnC,KAAK,QAAS,SAChD0C,EAPSF,EAAAL,OAAA,KAAAnC,KAAA,QAAA,SAST2C,EAAcH,EAAUL,OAAO,QAAQnC,KAAK,QAAS,YANrDA,KAAA,IAAA,GAQGA,KAAK,IAAK,GANbA,KAAI,SAAY,GAEhBU,EAAY5J,EAAA8L,MAAUC,SAQnB5B,QAAQ7F,KAAK0H,IAAI,IAAM1H,KAAK0H,IAAI,QANnCnC,OAAA,EAAArM,GASA,IAPGwM,GAAUhK,EAAAiK,OAAAhS,EAAA8R,GAQbG,GAPkBlK,EAAA8L,MAAAC,SAQf5B,OAAOH,EAAiB,KAAOA,EAAiB,IAAMA,EAAiB,GAAK,EAAGA,EAAiB,GAAK,GAAKA,GAN7GH,OAAA,EAAA,IASAoC,EAPa,SAAA3I,GAQX,MAAO4I,IAAiBC,EAAgBD,GAAiBhC,EAAsB5G,IAGjF7L,EAPG2U,EAAwBxO,GAAO,YAC/BG,MAAMP,EAAIE,IAQVQ,GAAG,OAAQ0I,GANdyF,EAAA5U,GASIA,EAAMkR,WACR2D,GAAW7U,EAAMkR,WANnBnD,GAAQ,SAAAtM,GAAA,MAAmBA,GAAUI,OAAAgK,IAClC6F,GAAK,SAAQjQ,GAAA,MAAAA,GAAAI,OAAAkK,IACbkC,GAAG,SAAQxM,GAAA,MAAAA,GAAAC,OAAAmK,IACd8F,GAAA,SAAelQ,GAAA,MAAAA,GAAAC,OAAAqK,KAGbxD,EAAAuM,MAQAC,GAPMxM,EAAAuM,MACHrD,KAAG,QAAUuD,GACbC,UAAGC,GACHC,OAAGC,GAQDC,KAAK,SAAUnV,GAAQ,MAAOA,GAAKO,QAL1C6U,EAAO7O,GAAK,QAAA,SAAAI,GAAA0O,EAAA1O,EAAA3G,QACVoV,EAAA7O,GAAU,OAAG,SAAAI,GAAA2O,EAAA3O,EAAA3G,QAUf,IAAIqH,GAPUkO,EAAAC,EAAA,KAAA,GAAA,EASdJ,GAAO7O,GAAG,YAAac,GACvB+N,EAPE7O,GAAO,cAAYc,GAQrB+N,EAPE7O,GAAO,QAAGc,GAQZ+N,EAAO7O,GAAG,OAAQc,GAClB+N,EAAO7O,GAAG,SAAUc,GANpB+N,EAAI7O,GAAA,WAAAc,GAQJ+N,EAAO7O,GAAG,WAAYc,GANtB+N,EAAO7O,GAAG,aAAac,IAezB,QAASqN,GAAe5U,GACtBA,EACGiP,QAAQ,IAGRF,aAAa,IACbC,aAAa,SAAUvN,GAL1B,GAAAkU,GAAArD,GAAA7Q,EAAAI,OACG,OAAQ4Q,GAAAkD,KAIRpJ,OAAA,SAAarM,GAEZ,GAAI0V,KAAK,IAAA,KACTC,GAAO,EAAA,GAQHF,EAAKrD,GAAiBpS,EAE1B,OAAO0V,GAAY,IAAMA,EAAY,GAAKA,EAAY,KAAKC,EAAe,GAAKA,EAAe,KAAOpD,EAAsBkD,GAAME,EAAe,MAEjJ/G,SAAS,IASd,QAASK,GAAKtI,GAGZ,GAFAiP,IAEIjP,EAAIsF,MAAQ,OAGd,GAFAiI,EAAY3C,KAAK,QAASU,EAActF,KAAK0H,IAAI1N,EAAIsF,SAEjDU,KAAKC,SAAW,GAAK,WAL3BsH,GAAA3C,KAAA,QAAA,EAUA0C,GAPE4B,UAAiB,SAASC,aAAcC,SAAS,KAQhDxE,KAAK,YAAa,SAAUvR,GAN7B,MAAS,aAAWA,EAAK2L,EAAA,IAAA3L,EAAA6L,EAAA,MAU3BmI,EAAU6B,UAAU,SAASC,aAAaC,SAAS,KAChDnF,KAAK+D,IAQV,QAASnB,KACP,IAAKlT,GAA0B,IAAjBA,EAAMyB,OAClB,KAAM,IAAIyC,OAAM,oBASlB,IAAIwR,GAAa/B,EAAU4B,UAAU,SAClChW,KAAKS,EAAO,SAAUN,GACrB,MAAOA,GAAKyD,KAGZwS,EAAYD,EAAWE,QAAQxC,OAAO,KACvCnC,KAAK,QAAS,QANjBA,KAAI,YAAa,SAAUvR,GACxB,MAAK,aAAiBA,EAAM2L,EAAA,IAAA3L,EAAA6L,EAAA,MAS5BtF,GAAG,YAAa5D,GAChB4D,GAAG,WAAY4P,GANlB5P,GAAI,WAAYrH,GACbqH,GAAA,QAAK,SAASvG,GACTqI,EAAAiG,MAAA8H,QACJnV,GAAOL,QAAeZ,GAAS,EAQ3BqT,EAAOrT,GALTqW,EAAArW,IAGFoT,IACEC,EAAIrT,KAWViW,GAAUvC,OAAO,UAEjBsC,EAPM3C,OAAA,UAQH9B,KAPG,IAAO,SAAAvR,GAQT,GAAIyV,GAAKrD,GAAiBpS,EAC1B,OAAOsU,GAAgBmB,KAG3BO,EAAWM,OAAOC,SALf1B,IAQDZ,EAPMrD,KAAKiE,IAgBf,QAASpB,KACP,IAAK5O,GAA0B,IAAjBA,EAAM9C,OAClB,KAAM,IAAIyC,OAAM,oBAGlB,IAAIgS,GAAaxC,EAAU6B,UAAU,SAClChW,KAAKgF,EAAO,SAAUtD,GAN3B,MAASA,GAAAI,OAAY8B,GAAA,IAAAlC,EAAAC,OAAAiC,IAUnB+S,GAAWN,QAAQxC,OAAO,QACvBnC,KAAK,QAAS,SAAUhQ,GANvB,MAAA,QAAaA,EAAA+B,WASdiO,KAPC,aAAY,SAAYhQ,GAQxB,MAAO,kBAAoBA,EAAK+B,SAAW,MAD5CsN,KAAK+D,IASR6B,EAAWF,OAAOC,SAQpB,QAASnP,GAAUqP,GACXA,YAAcpG,SAClBoG,GAAMA,IAGRA,EAAGxU,QAAQ,SAAUuK,GACfkK,EAAY9V,QAAQ4L,GAAK,GANjCkK,EAAS7V,KAAc2L,GAUnB4I,EAAO/K,QAAQ,aAAerK,KAAMwM,EAAG8E,UAAWrQ,OA0BtD,QAASgS,KACPyD,EAAYzU,QAAQ,SAAUjC,GAC5BoV,EAAO/K,QAAQ,eAAiBrK,KAAMA,EAAMsR,UAAWrQ,OAGzDyV,KAQF,QAAS/T,GAAM3C,GAEbmW,IAEAQ,GAAU3W,EACVoV,EAAO/K,QAAQ,SAAWrK,KAAM2W,GAASrF,UAAWrQ,KAQtD,QAASkV,GAAKnW,GAGZ,GAFAA,EAAOA,GAAQ2W,GAEL,CACR,GAAIA,KAAY3W,EAJpB,KAAS,IAAKwE,OAAM,4CAKdmS,IAAU,KAFdvB,EAAI/K,QAAM,QAAArK,KAAAA,EAAAsR,UAAArQ,MAgBZ,QAAS/B,GAASc,GAEZ4W,KAAc5W,IAFpBmT,IAEEyD,GAAI5W,EAQJoV,EAPE/K,QAAA,YAAArK,KAAA4W,GAAAtF,UAAArQ,MAeJ,QAASkS,GAAWnT,GAGlB,GAFAA,EAAOA,GAAQ4W,GAEL,CACR,GAAIA,KAAc5W,EAJtB,KAAS,IAAAwE,OAAW,oDAKdoS,IAAY,KAFhBxB,EAAI/K,QAAM,cAAArK,KAAAA,EAAAsR,UAAArQ,MAgBZ,QAASoS,GAAOrT,GACd,IAAKA,EACH,KAAM,IAAIwE,OAAM,mBAGlB,MAAIvD,GAASL,QAAQZ,GAAQ,GAJ7B,KAAK,IAAMwE,OAAA,kDAKTvD,IAASJ,KAAKb,GAKhBoV,EAAO/K,QAAQ,UAAYrK,KAAMA,EAAMsR,UAAWrQ,KAQpD,QAASoV,GAASrW,GAChB,IAAKA,EACH,KAAM,IAAIwE,OAAM,+BAGlB,IAAI9D,GAAKO,GAASL,QAAQZ,EAC1B,IAAIU,EAAK,EANX,KAAS,IAAA8D,OAAS,iDAEdvD,IAAMH,OAAUJ,EAAA,GAGlB0U,EAAI/K,QAAK,YAAiBrK,KAAAA,EAAAsR,UAAArQ,KAa5B,QAASmS,KANPnS,GAAOgB,QAAQ,SAAYjC,GAQzBoV,EAAO/K,QAAQ,YAAcrK,KAAMA,EAAMsR,iBAG3CrQ,MAQF,QAASoU,GAAYrV,GACf6U,IACFA,GAAQtD,KAAK,QAASuD,GACnBzR,KAAKrD,GASZ,QAASsV,GAAYtV,GACf6U,IACFA,GAAQtD,KAAK,QAASuD,GACnBxP,KAAKtF,GAOZ,QAPOwV,KAQL,GAAIqB,IAAgBD,IAGhBE,EAAc7V,GAAS8V,QAEvBC,EAAa9U,GAAWyU,GAG5B1V,IAASgB,QAAQ,SAAUgV,GACzB/U,GAAW+U,GAAGhV,QAAQ,SAAUkN,GAN9B6H,EAAcpW,QAASuO,GAAA,GAQrB6H,EAAWnW,KAAKsO,OAMtBjN,GAPQ0U,IAAW3U,QAAQ,SAAQkN,GAC7B6H,EAAWpW,QAAKuO,GAAA,GAQlB6H,EAAWnW,KAAKsO,IAIpB,IAAI+H,GAAiBR,EAAYK,OAEjC9C,GAPM4B,UAAW,SAQdsB,QAPC,YAAgB,SAAAnX,GAQhB,MAAO6W,GAAajW,QAAQZ,IAAS,IAEtCmX,QAAQ,WAAY,SAAUnX,GAN7B,MAAA8W,GAAiBlW,QAAAZ,IAAY,IAEjCmX,QAAU,UAAU,SAAAnX,GACjB,MAAQgX,GAAApW,QAAaZ,IAAU,IAS/BmX,QAAQ,cAAe,SAAUnX,GANjC,MAAQkX,GAAYtW,QAAUZ,IAAM,IAUvCgU,EAPG6B,UAAQ,SAQRsB,QAPQ,YAAW,SAAQ5V,GAQ1B,MAAOsV,GAAajW,QAAQW,EAAKI,SAAW,GAAKkV,EAAajW,QAAQW,EAAKC,SAAW,IAEvF2V,QAPQ,WAAA,SAAe5V,GAQtB,MAAOuV,GAAYlW,QAAQW,EAAKI,SAAW,GAAKmV,EAAYlW,QAAQW,EAAKC,SAAW,IALxF2V,QAAU,UAAU,SAAA5V,GACjB,MAAQyV,GAAApW,QAAaW,EAAUI,SAAM,GAAAqV,EAAApW,QAAAW,EAAAC,SAAA,IASrC2V,QAAQ,SAAU,SAAU5V,GAN5B,OAAQF,GAAYE,KASpBgQ,KAAK,aAAc,SAAUhQ,GAN7B,GAAA6V,GAAQ,EAiBP,OARIP,GAAajW,QAAQW,EAAKI,SAAW,GAAKkV,EAAajW,QAAQW,EAAKC,SAAW,EANpF4V,EAAQ,aACCN,EAAWlW,QAAAW,EAAAI,SAAA,GAAAmV,EAAAlW,QAAAW,EAAAC,SAAA,EAQjB4V,EAAM,YANJJ,EAAcpW,QAAUW,EAAMI,SAAA,GAAAqV,EAAApW,QAAAW,EAAAC,SAAA,IAClC4V,EAAI,YAGF,kBAAM7V,EAAA+B,SAAA8T,EAAA,MAcd,QAPMxB,KAQJtV,EAAM2B,QAAQ,SAAUjC,GAEtBA,EAAK2L,EAAIgB,KAAK0K,IAAI1K,KAAK2K,IAAItX,EAAK2L,EAAG9F,GAAQ,GAC3C7F,EAAK6L,EAAIc,KAAK0K,IAAI1K,KAAK2K,IAAItX,EAAK6L,EAAG9F,GAAS,KAWhD,QAASiP,GAAiBhV,GACxB,GAAIuX,GAAM,EAaV,OAVIvX,GAAK6L,EAAI9F,EAASyR,EAAoBC,OAAQF,GAAO,IAChDvX,EAAK6L,EAAI2L,EAAoBE,MAAKH,GAAO,KAJ9CvX,EAAA2L,EAAM9F,EAAA2R,EAAAG,MAAAJ,GAAA,IAQDvX,EAAK2L,EAAI6L,EAAoBI,OAAML,GAAO,KAJ1C,KAOLA,IAPUA,EAAI,KASXA,EAWT,QAASrC,GAAclV,GACrB,GAAIyV,GAAKrD,GAAiBpS,GACtB6X,EAASvD,EAAgBmB,GACzBR,GAAU,EAAG,EAUjB,OARIjV,GAAK6L,EAAI9F,EAASyR,EAAoBC,OAAQxC,EAAO,IAAM4C,EACtD7X,EAAK6L,EAAI2L,EAAoBE,MAAKzC,EAAO,IAAM4C,GALpD7X,EAAK2L,EAAA9F,EAAA2R,EAAiBM,WAAA7C,EAAA,IAAA4C,EACtB7X,EAAS2L,EAAA6L,EAAgBM,aAAA7C,EAAA,IAAA4C,GASX,IAAd5C,EAAO,IAA0B,IAAdA,EAAO,KAAUA,EAAO,IAAM4C,GALhD5C,EAeP,QAASnB,GAAiB9B,EAAK2B,EAAWoE,GACxC,GAAIC,KACJrE,GAAU1R,QAAQ,SAAUtE,GAC1Boa,EAAW9V,QAAQ,SAAUmV,GAC3BY,EAAWnX,KAAK,aAAelD,GAAQyZ,EAAM,IAAMA,EAAM,SAF7DpF,EAAA0B,OAAU,QAAQmC,UAAU,UAC1BhW,KAAAmY,GAQC9B,QAPCxC,OAAW,UAQVnC,KAAK,KAAM,SAAS9N,GAAM,MAAOA,KACjC8N,KAAK,UAAW,aAChBA,KAAK,OAAQ,IACbA,KAAK,OAAQ,GANdA,KAAA,cAAe,GACdA,KAAK,eAAA,GACPA,KAAA,SAAe,QAQfmC,OAPO,QACLnC,KAAK,IAAA,uBAz4BZtL,EAASA,GAAU,SACnB2L,EAAUA,KAEV,IAAIwD,GAAShL,GAETwH,GAAQhK,OANdwN,EAASzQ,IAAA,SAAe2F,EAAQC,GAE9BI,QAAU0J,IAAA/J,EAAWC,EAAAvK,KAAAuK,EAAAvK,KAAAyD,GAAA8G,IAgBrB,IAAI1E,GAAAE,EAsDAiM,EAKAiC,EAKAD,EAKAE,EAKAjC,EAKAqC,EAKA/B,EAKAzS,EAlFAQ,KAOAuE,KAOA6R,KAOAC,GAAA,KAOA1V,MAOA2V,GAAW,KAuDXjC,GAAW,SAAUrD,GACvBA,EAAUC,KAAK,IAAK,SAAUhQ,GAC5B,GAAIsM,GAAKtM,EAAKI,OAAOgK,EACjB6F,EAAKjQ,EAAKI,OAAOkK,EACjBkC,EAAKxM,EAAKC,OAAOmK,EACjB8F,EAAKlQ,EAAKC,OAAOqK,CALrB,OAAA,KAAWgC,EAAA,IAAU2D,EAAA,MAAWzD,EAAA,IAAA0D,KAOhCoD,GAAO,KAYP9C,IAAgB,EAMhB7P,GAAa,SAAUlC,GAN3B,IAAIA,EAQA,QAGF,IAAIkB,GAAWlB,EAAKmB,SAASc,QAAQ,SAAUV,GAC7C,MAAOA,GAAKC,SAJZC,EAAOzB,EAAA0B,QAAAO,QAAA,SAAAV,GAQP,MAAOA,GAAKI,QAGd,QAPE3B,GAAY4B,OAAAV,EAAAO,IAOd2Q,GAAqB,WAQrB,MAAO,IAAP/Q,GAAO,WAQP,OAAO,GADL6J,KAWJ,OAHAA,IAPE9E,KAAOyL,EAQT3G,GAAI7E,qBAAuB8L,EAC3BjH,GAAIhJ,WAAauQ,EACjBvH,GAAIrL,KAAO8S,EACXzH,GAAI9D,UAAY0L,EAChB5H,GAAIhM,SAAWgU,EANfhI,GAAI7J,WAAMiS,EACVpI,GAAI7D,sBAAOmO,EACXtK,GAAI5E,QAAAA,EACJ4E,GAAI3E,GAAA6O,EAAA7O,GACA2E,GAouBN,QAPOqK,GAAO7D,EAAAuG,EAAAC,EAAAC,GAQZ,GAAIC,EAUJ,OARuB,mBAAZF,KACTA,GAAU,GAJQ,mBAAbC,KACPA,GAAI,GAGF,WAYA,QAAAE,KACAD,EAAU,KAQJD,GANFzG,EAAA4G,MAASC,EAAAC,GAPb,GAAID,GAAMzT,KACN0T,EAAO3I,UALX4I,EAAWP,IAAAE,CAQXM,cAAaN,GACbA,EAAUO,WAAWN,EAAOJ,GALxBQ,GACJ/G,EAAI4G,MAAOC,EAAAC,IAv8Bf,GAAIjE,GAPG,EAGNC,EAAgB,GAUbC,GANJmE,OAAIvQ,EAAApC,OAAgBsH,MAQlBC,YAAanF,EAAGpC,OAAOsH,MAAMC,aAI3BsH,EAAgB,SAJlB0C,GAQAI,KAAM,IACND,MAAO,IACPD,IAAK,IANPD,OAAI,IA46BJ,OAz6BIpP,GAAAuM,KAEFjK,QAAOkO,KAAA,gEAu6BF1S,IAoCT7I,QAAQC,OAAO,qBAAqBsK,KAAK,iBAAkB,SAASiR,GAAiBA,EAAeC,IAAI,qBAAqB,kbAC7HD,EAAeC,IAAI,qBAAqB","file":"../../scripts/app-627d95d7fc.js","sourcesContent":["(function () {\n  'use strict';\n\n  angular\n    .module('trcGraph', [\n      'ngResource'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcGraph')\n    .provider('graphRepo', graphRepoProvider);\n\n  function graphRepoProvider() {\n    var provider = {};\n    provider.url = '/api/graph';\n    provider.$get = graphRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function graphRepoFactory($resource) {\n      var restResource = $resource(provider.url + '/:type');\n\n      var repo = {};\n      repo.get = getGraph;\n      return repo;\n\n      /**\n       * Retrieves a graph by type identifier\n       *\n       * @param  {string} type\n       * @return {Graph}\n       */\n      function getGraph(type) {\n        return restResource.get({ type: type });\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaConceptBrowser', [\n      'ngAnimate',\n      'ngCookies',\n      'ngSanitize',\n      'ngMessages',\n      'ngAria',\n      'ngResource',\n      'ui.router',\n      'ngMaterial',\n      'trcBiblio',\n      'trcBio',\n      'trcGraph'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  // HACK types should be loaded from reln repo\n  var TYPES = {\n    'uk.ac.ox.bodleian.sda.relationships.influence': {\n      id: 'uk.ac.ox.bodleian.sda.relationships.influence',\n      title: 'Influenced',\n      reverseTitle: 'Influenced By',\n      directed: true\n    },\n    'uk.ac.ox.bodleian.sda.relationships.provoked': {\n      id: 'uk.ac.ox.bodleian.sda.relationships.provoked',\n      title: 'Provoked',\n      reverseTitle: 'Provoked By',\n      directed: true\n    },\n    'uk.ac.ox.bodleian.sda.relationships.patternmatch': {\n      id: 'uk.ac.ox.bodleian.sda.relationships.patternmatch',\n      title: 'Possible Pattern Match',\n      directed: false\n    }\n  };\n\n  angular\n    .module('sdaConceptBrowser')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($http, $scope, $q, $mdToast, $mdDialog, $mdMedia, $location, $stateParams, $filter, $timeout, $document, peopleRepo, worksRepo, graphRepo) {\n    var vm = this;\n\n    vm.toggleSearchForm = toggleSearchForm;\n    vm.clearSearchForm = clearSearchForm;\n    vm.showSearchForm = false;\n    vm.searchQuery = '';\n\n    vm.showHelp = showHelp;\n\n    vm.graph = null;\n    vm.activeNode = null;\n    vm.person = null;\n    vm.works = null;\n    vm.related = null;\n    vm.sidebarLoading = false;\n    vm.graphLoading = false;\n\n    vm.relnTypes = TYPES;\n    vm.relnTypeFilter = [];\n    vm.toggleRelnTypeFilter = toggleRelnTypeFilter;\n\n    vm.selectMode = null;\n    vm.selectModes = [];\n\n    vm.sizeMetric = null;\n    vm.sizeMetrics = [];\n\n    vm.highlightedNodes = [];\n\n    activate();\n\n    function activate() {\n      loadSelectModes();\n      loadSizeMetrics();\n\n      var defaultGraphType = 'people';\n      var graphType = $stateParams.type || defaultGraphType;\n      vm.graphLoading = true;\n      getGraphData(graphType).catch(function () {\n        $mdToast.showSimple('Unable to load the \"' + graphType + '\"graph type. Falling back to \"' + defaultGraphType + '\".');\n        return getGraphData(defaultGraphType);\n      }).then(function (data) {\n        vm.graphLoading = false;\n        vm.graph = data.graph;\n      }, function () {\n        vm.graphLoading = false;\n        $mdToast.showSimple('Unable to load graph data.');\n      });\n\n      $scope.$watch('main.activeNode', function (node) {\n        if (node) {\n          vm.sidebarLoading = true;\n          loadNodeData(node).then(function () {\n            vm.sidebarLoading = false;\n          }, function () {\n            vm.sidebarLoading = false;\n            $mdToast.showSimple('Unable to load node data');\n          });\n        } else {\n          vm.person = null;\n        }\n      });\n\n      $scope.$watch('searchQuery', function (searchQuery) {\n        vm.highlightedNodes = searchQuery ? $filter('filter')(vm.graph.nodes, { label: searchQuery }) : [];\n      });\n    }\n\n    function toggleRelnTypeFilter(typeId) {\n      var ix = vm.relnTypeFilter.indexOf(typeId);\n      if (ix < 0) {\n        vm.relnTypeFilter.push(typeId);\n      } else {\n        vm.relnTypeFilter.splice(ix, 1);\n      }\n    }\n\n    function loadSelectModes() {\n      vm.selectModes.push({\n        label: 'Neighbors',\n        strategy: function (selected) {\n          if (!selected) {\n            return [];\n          }\n\n          var adjacent = selected.outEdges.filter(edgeFilter).map(function (edge) {\n            return edge.target;\n          });\n          var incident = selected.inEdges.filter(edgeFilter).map(function (edge) {\n            return edge.source;\n          });\n          return [selected].concat(adjacent, incident);\n        }\n      });\n\n      vm.selectModes.push({\n        label: 'Trace',\n        strategy: function (selected) {\n          if (!selected) {\n            return [];\n          }\n\n          var worklist = [selected];\n          var visited = [];\n\n          while (worklist.length > 0) {\n            var node = worklist.pop();\n            visited.push(node);\n            node.outEdges.forEach(function (edge) {\n              if (visited.indexOf(edge.target) < 0) {\n                worklist.push(edge.target);\n              }\n            });\n          }\n\n          return visited;\n        }\n      });\n\n      vm.selectModes.push({\n        label: 'Inbound',\n        strategy: function (selected) {\n          return selected ? [selected].concat(selected.inEdges.filter(edgeFilter).map(function (edge) {\n            return edge.source;\n          })) : [];\n        }\n      });\n\n      vm.selectModes.push({\n        label: 'Outbound',\n        strategy: function (selected) {\n          return selected ? [selected].concat(selected.outEdges.filter(edgeFilter).map(function (edge) {\n            return edge.target;\n          })) : [];\n        }\n      });\n\n      vm.selectMode = vm.selectModes[0];\n    }\n\n    function loadSizeMetrics() {\n      vm.sizeMetrics.push({\n        label: 'PageRank',\n        strategy: function (node) {\n          return node.metadata.pagerank;\n        }\n      });\n\n      vm.sizeMetrics.push({\n        label: 'Uniform',\n        strategy: function () {\n          return 1;\n        }\n      });\n\n      vm.sizeMetrics.push({\n        label: 'HITS',\n        disabled: true,\n        strategy: function () {\n          return 1;\n        }\n      });\n\n      vm.sizeMetric = vm.sizeMetrics[0];\n    }\n\n    function toggleSearchForm() {\n      vm.showSearchForm = !vm.showSearchForm;\n\n      if (vm.showSearchForm) {\n        $timeout(function () {\n          angular.element('.search-form > input[type=\"search\"]').focus();\n        });\n      } else {\n        $scope.searchQuery = '';\n      }\n    }\n\n    function clearSearchForm() {\n      $scope.searchQuery = '';\n      $timeout(function () {\n        vm.showSearchForm = false;\n      });\n    }\n\n    function showHelp($event) {\n      var config = {\n        targetEvent: $event,\n        fullscreen: $mdMedia('sm') || $mdMedia('xs'),\n        templateUrl: 'app/main/help.html',\n        controller: 'HelpDialogController',\n        clickOutsideToClose: true\n      };\n\n      $mdDialog.show(config)\n    }\n\n    // HACK: this function is duplicated in the concept browser directive...\n    //       need a way to tell the graph to update from outside the directive...\n    function edgeFilter(edge) {\n      return vm.relnTypeFilter.length === 0 || vm.relnTypeFilter.indexOf(edge.relation) >= 0;\n    }\n\n    function loadNodeData(node) {\n      // HACK only works for people; should probably refactor to a directive with parallel one for works,\n      //      but how should we determine which directive to display?\n      vm.person = peopleRepo.get(node.id);\n\n      var works = worksRepo.searchByAuthor(node.id);\n      var worksP = works.$promise.then(function () {\n        if (!works.items) {\n          throw new Error('unable to load items');\n        }\n\n        vm.works = works.items;\n        return vm.works;\n      });\n\n      var related = {};\n\n      function makeTypeGroup(type) {\n        var group = { id: type.id, directed: type.directed };\n\n        if (type.directed) {\n          group.out = { label: type.title, nodes: [] };\n          group.in = { label: type.reverseTitle, nodes: [] };\n        } else {\n          group.none = { label: type.title, nodes: [] };\n        }\n\n        return group;\n      }\n\n      function ensureTypeGroup(type) {\n        if (!related.hasOwnProperty(type.id)) {\n          related[type.id] = makeTypeGroup(type);\n        }\n\n        return related[type.id];\n      }\n\n      node.outEdges.map(function (edge) {\n        var type = TYPES[edge.relation];\n        if (!type) return;\n\n        var group = ensureTypeGroup(type);\n        group[type.directed ? 'out' : 'none'].nodes.push(edge.target);\n      });\n\n      node.inEdges.map(function (edge) {\n        var type = TYPES[edge.relation];\n        if (!type) return;\n\n        var group = ensureTypeGroup(type);\n        group[type.directed ? 'in' : 'none'].nodes.push(edge.source);\n      });\n\n      vm.related = [];\n      for (var key in related) if (related.hasOwnProperty(key)) {\n        vm.related.push(related[key]);\n      }\n\n      return $q.all([vm.person.$promise, worksP]);\n    }\n\n    function getGraphData(type) {\n      var graph = graphRepo.get(type);\n\n      return graph.$promise.then(function () {\n        var nodesById = {};\n\n        // index nodes by ID; prepare structure for dereferencing\n        graph.graph.nodes.forEach(function (node) {\n          node.inEdges = [];\n          node.outEdges = [];\n\n          nodesById[node.id] = node;\n        });\n\n        // dereference edges\n        // edge direction plays an opposite role in the view than it does in the server data:\n        //    suppose A provoked B, C, and D\n        //    we would like to draw arrows from A to B, C, and D (A->B, A->C, A->D)\n        //    but for analytical purposes, the data treats provocation as references from B, C, and D back to A (B->A, C->A, D->A)\n        graph.graph.edges.forEach(function (edge) {\n          var target = nodesById[edge.source];\n          var source = nodesById[edge.target];\n\n          edge.source = source;\n          source.outEdges.push(edge);\n\n          edge.target = target;\n          target.inEdges.push(edge);\n        });\n\n        return graph;\n      });\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaConceptBrowser')\n    .controller('HelpDialogController', HelpDialogController);\n\n  /** @ngInject */\n  function HelpDialogController($scope, $mdDialog) {\n    $scope.close = closeDialog;\n\n    function closeDialog() {\n      $mdDialog.hide();\n    }\n  }\n\n})();\n\n/*global ConceptBrowser:false*/\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaConceptBrowser')\n    .directive('conceptBrowser', conceptBrowserDirective);\n\n  /** @ngInject */\n  function conceptBrowserDirective($window, $timeout) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        graph: '=ngModel',\n        width: '=',\n        height: '=',\n        padding: '=',\n        layout: '@',\n        activeNode: '=',\n        sizeMetric: '=',\n        selectMode: '=',\n        highlightedNodes: '=',\n        relnTypes: '='\n      },\n      link: linkFunc\n    };\n\n    return directive;\n\n    function linkFunc(scope, el) {\n      var width = scope.width;\n      var autoWidth = false;\n      var height = scope.height;\n      var autoHeight = false;\n      var layout = scope.layout;\n      var rootEl = el.get(0);\n\n      // HACK: delay initialization until flex elements have a width/height\n      $timeout(function () {\n        if (!width) {\n          width = el.width();\n          autoWidth = true;\n        }\n\n        if (!height) {\n          height = el.height();\n          autoHeight = true;\n        }\n\n        var graph = ConceptBrowser(rootEl, layout)\n          .size([width, height])\n          .edgeFilter(function (edge) {\n            return scope.relnTypes.length === 0 || scope.relnTypes.indexOf(edge.relation) >= 0;\n          });\n\n        if (scope.sizeMetric) {\n          graph.nodeCentralityMetric(scope.sizeMetric);\n        }\n\n        if (scope.selectMode) {\n          graph.selectMode(scope.selectMode);\n        }\n\n        if (scope.graph) {\n          graph.data(scope.graph.nodes, scope.graph.edges);\n          graph.refresh();\n        }\n\n        angular.element($window).on('resize', function () {\n          if (!autoWidth && !autoHeight) {\n            return;\n          }\n\n          var oldWidth = width;\n          var oldHeight = height;\n\n          if (autoWidth) {\n            width = el.width();\n          }\n\n          if (autoHeight) {\n            height = el.height();\n          }\n\n          if (oldWidth !== width || oldHeight !== height) {\n            graph.size([width, height]);\n            graph.refresh();\n          }\n        });\n\n        // listen for graph events\n\n        // HACK if digest is already in progress, do not try to set active node (probably because it was set from the parent scope)\n        var preventActivate = false;\n        graph.on('activate', function (evt) {\n          if (preventActivate) {\n            return;\n          }\n\n          scope.$apply(function () {\n            scope.activeNode = evt.node;\n          });\n        });\n\n        // listen for data updates\n        scope.$watchGroup(['width', 'height', 'graph', 'activeNode', 'sizeMetric', 'selectMode'], function (newValues, oldValues) {\n          var queueRefresh = false;\n\n          if (newValues[0] && newValues[0] !== oldValues[0]) {\n            width = newValues[0];\n            graph.size([width, height]);\n            if (newValues[2]) {\n              queueRefresh = true;\n            }\n          }\n\n          if (newValues[1] && newValues[1] !== oldValues[1]) {\n            height = newValues[1];\n            graph.size([width, height]);\n            if (newValues[2]) {\n              queueRefresh = true;\n            }\n          }\n\n          if (newValues[2] && newValues[2] !== oldValues[2]) {\n            // make a copy of the data so changes within this directive don't get leaked out\n            var graphData = angular.copy(newValues[2]);\n            graph.data(graphData.nodes, graphData.edges);\n            queueRefresh = true;\n          }\n\n          if (newValues[3] !== oldValues[3]) {\n            preventActivate = true;\n            graph.activate(newValues[3]);\n            preventActivate = false;\n          }\n\n          if (newValues[4] && newValues[4] !== oldValues[4]) {\n            graph.nodeCentralityMetric(newValues[4]);\n            queueRefresh = true;\n          }\n\n          if (newValues[5] && newValues[5] !== oldValues[5]) {\n            graph.selectMode(newValues[5]);\n          }\n\n          if (queueRefresh) {\n            graph.refresh();\n          }\n        });\n\n        scope.$watchCollection('highlightedNodes', function (newValues) {\n          if (newValues) {\n            graph.highlight(newValues);\n          }\n        });\n\n        scope.$watchCollection('relnTypes', function (newValues) {\n          if (newValues) {\n            graph.updateGraphSelections();\n          }\n        });\n      });\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaConceptBrowser')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaConceptBrowser')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global d3: false */\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaConceptBrowser')\n    .constant('d3', d3);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaConceptBrowser')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, $mdThemingProvider, peopleRepoProvider, worksRepoProvider, graphRepoProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    peopleRepoProvider.url = '/api/catalog/people';\n    worksRepoProvider.url = '/api/catalog/works';\n    graphRepoProvider.url = '/api/catalog/graph';\n\n    $mdThemingProvider.definePalette('darkBrown', {\n      '50': '#595c59',\n      '100': '#4c4f4c',\n      '200': '#404240',\n      '300': '#333533',\n      '400': '#272827',\n      '500': '#1a1b1a',\n      '600': '#0d0e0d',\n      '700': '#010101',\n      '800': '#000000',\n      '900': '#000000',\n      'A100': '#e0f0e0',\n      'A200': '#565956',\n      'A400': '#7e837e',\n      'A700': '#000000',\n\n      contrastDefaultColor: 'light',\n      contrastDarkColors: ['A100']\n    });\n\n    $mdThemingProvider.definePalette('copper', {\n      '50': '#d4b190',\n      '100': '#cca47e',\n      '200': '#c5976b',\n      '300': '#be8a59',\n      '400': '#b67e47',\n      '500': '#a47140',\n      '600': '#926439',\n      '700': '#7f5832',\n      '800': '#6d4b2b',\n      '900': '#5b3e23',\n      'A100': '#dcc3ab',\n      'A200': '#a47140',\n      'A400': '#48321c',\n      'A700': '#272927',\n\n      contrastDefaultColor: 'light',\n      contrastDarkColors: ['50', '100', '200', 'A100']\n    });\n\n    $mdThemingProvider.theme('default')\n      .primaryPalette('darkBrown')\n      .accentPalette('copper');\n  }\n\n})();\n\n/*eslint-env amd,browser,node*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory();\n  } else {\n    root.EventDispatcher = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  /**\n   * Creates a new simple event dispatcher object that handles listener registration and event triggering.\n   */\n  function EventDispatcher() {\n    /**\n     * Map of event name to registered event handlers\n     * @type {object.<string,function[]>}\n     */\n    var eventHandlers = {};\n\n    /**\n     * List of registered global event handlers\n     * @type {function[]}\n     */\n    var globalHandlers = [];\n\n    ////////////////////////////////////////////////////////////\n\n    var API = {};\n    API.all = addGlobalListener;\n    API.on = addListener;\n    API.once = addOnceListener;\n    API.trigger = trigger;\n    return API;\n\n    ////////////////////////////////////////////////////////////\n\n    /**\n     * Trigger the named event, passing the given context to all registered event handlers\n     * @param {string} eventName\n     * @param {object} context\n     */\n    function trigger(eventName, context) {\n      if (eventHandlers[eventName]) {\n        eventHandlers[eventName].forEach(function (handler) {\n          try {\n            handler(context);\n          } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n        });\n      }\n\n      globalHandlers.forEach(function (handler) {\n        try {\n          handler(eventName, context);\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error(e);\n        }\n      });\n    }\n\n    /**\n     * Attach an event handler that will be triggered for all events\n     * @param {function} handler\n     * @return {function} deregistration function\n     */\n    function addGlobalListener(handler) {\n      globalHandlers.push(handler);\n\n      return function () {\n        var ix = globalHandlers.indexOf(handler);\n        if (ix >= 0) {\n          globalHandlers.splice(ix, 1);\n        }\n      }\n    }\n\n    /**\n     * Attach an event handler to the given event name.\n     * @param {string} eventName\n     * @param {function} handler\n     * @return {function} deregistration function\n     */\n    function addListener(eventName, handler) {\n      if (!eventHandlers[eventName]) {\n        eventHandlers[eventName] = [];\n      }\n\n      eventHandlers[eventName].push(handler);\n\n      return function () {\n        var ix = eventHandlers[eventName].indexOf(handler);\n        if (ix >= 0) {\n          eventHandlers[eventName].splice(ix, 1);\n        }\n      }\n    }\n\n    /**\n     * Attach an event listener to the given event name that will automatically deregister after it has been fired.\n     * @param {string} eventName\n     * @param {function} handler\n     * @return {function} deregistration function\n     */\n    function addOnceListener(eventName, handler) {\n      var deregister = addListener(eventName, function (context) {\n        try {\n          handler(context);\n        } catch (e) {\n          // eslint-disable-next-line no-console\n          console.error(e);\n        } finally {\n          deregister();\n        }\n      });\n\n      return deregister;\n    }\n  }\n\n  return EventDispatcher;\n\n});\n\n/*global d3:false*/\n/*eslint-env amd,browser,node*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['d3'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory(require('d3'));\n  } else {\n    factory(d3);\n  }\n})(this, function (d3) {\n  'use strict';\n\n  var LINK_DISTANCE = 20,\n      LINK_STRENGTH = 1,\n      CHARGE_DISTANCE_2 = Infinity;\n\n  /**\n   * force layout based on d3.layout.force(), but with horizontal wrapping\n   *\n   * @return {object}\n   */\n  d3.layout.force.cylindrical = function () {\n    var force = {},\n        event = d3.dispatch(\"start\", \"tick\", \"end\"),\n        size = [1, 1],\n        drag,\n        alpha,\n        friction = 0.9,\n        linkDistance = LINK_DISTANCE,\n        linkStrength = LINK_STRENGTH,\n        charge = -30,\n        chargeDistance2 = CHARGE_DISTANCE_2,\n        gravity = 0.1,\n        theta2 = 0.64,\n        nodes = [],\n        links = [],\n        distances,\n        strengths,\n        charges;\n\n    function wrapDx(dx, width) {\n      if (2 * Math.abs(dx) > width) {\n        // the \"other side\" of the cylinder is closer\n        if (dx < 0) {\n          // quad point is to the left: simulate force as if it were on the right\n          dx += width;\n        } else {\n          // quad point is to the right: simulate force as if it were on the left\n          dx -= width;\n        }\n      }\n\n      return dx;\n    }\n\n    function repulse(node) {\n      return function (quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var width = size[0];\n\n          var dx = wrapDx(quad.cx - node.x, width),\n              dy = quad.cy - node.y,\n              dw = x2 - x1;\n\n\n          var dn = dx * dx + dy * dy;\n          var k = 0;\n\n          /* Barnes-Hut criterion. */\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n\n          if (quad.point && dn && dn < chargeDistance2) {\n            k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n\n    force.tick = function () {\n      // simulated annealing, basically\n      if ((alpha *= 0.99) < 0.005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n\n      var n = nodes.length,\n        m = links.length,\n        q,\n        i, // current index\n        o, // current object\n        s, // current source\n        t, // current target\n        l, // current distance\n        k, // current force\n        x, // x-distance\n        y; // y-distance\n\n      // gauss-seidel relaxation for links\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = wrapDx(t.x - s.x, size[0]);\n        y = t.y - s.y;\n        l = (x * x + y * y);\n\n        if (l !== 0) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n\n      // apply gravity forces\n      k = alpha * gravity;\n      if (k !== 0) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k)\n          while (++i < n) {\n            o = nodes[i];\n            // o.x += (x - o.x) * k;\n            o.y += (y - o.y) * k;\n          }\n      }\n\n      // compute quadtree center of mass and apply charge forces\n      if (charge) {\n        accumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n\n      // position verlet integration\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n\n      // update positions if a node gets pushed off the sides of the visualization\n      i = -1;\n      var width = size[0];\n      while (++i < n) {\n        o = nodes[i];\n\n        var dx = o.px - o.x;\n        o.x %= width;\n        // ensure node.x is positive; there's a chance that -width < node.x % width < 0\n        if (o.x < 0) {\n          o.x += width;\n        }\n\n        // ensure that previous x position (used to calculate velocity) is semantically correct after wrapping\n        o.px = o.x + dx;\n\n      }\n\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n\n    force.nodes = function (x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n\n    force.links = function (x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n\n    force.size = function (x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n\n    force.linkDistance = function (x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = isFunction(x) ? x : +x;\n      return force;\n    };\n\n    force.linkStrength = function (x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = isFunction(x) ? x : +x;\n      return force;\n    };\n\n    force.friction = function (x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n\n    force.charge = function (x) {\n      if (!arguments.length) return charge;\n      charge = isFunction(x) ? x : +x;\n      return force;\n    };\n\n    force.chargeDistance = function (x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n\n    force.gravity = function (x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n\n    force.theta = function (x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n\n    force.alpha = function (x) {\n      if (!arguments.length) return alpha;\n\n      x = +x;\n      if (alpha) { // if we're already running\n        if (x > 0) alpha = x; // we might keep it hot\n        else alpha = 0; // or, next tick will dispatch \"end\"\n      } else if (x > 0) { // otherwise, fire it up!\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n\n      return force;\n    };\n\n    force.start = function () {\n      var i,\n        n = nodes.length,\n        m = links.length,\n        w = size[0],\n        h = size[1],\n        neighbors,\n        o;\n\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (isNumber(o.source)) o.source = nodes[o.source];\n        if (isNumber(o.target)) o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n\n      distances = [];\n      if (isFunction(linkDistance))\n        for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i);\n      else\n        for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\n      strengths = [];\n      if (isFunction(linkStrength))\n        for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i);\n      else\n        for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\n      charges = [];\n      if (isFunction(charge))\n        for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i);\n      else\n        for (i = 0; i < n; ++i) charges[i] = charge;\n\n      // inherit node position from first neighbor with defined position\n      // or if no such neighbors, initialize node position randomly\n      // initialize neighbors lazily to avoid overhead when not needed\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n\n          for (j = 0; j < n; ++j)\n            neighbors[j] = [];\n\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n\n        var candidates = neighbors[i],\n          j = -1,\n          cs = candidates.length,\n          x;\n\n        while (++j < cs)\n          if (!isNaN(x = candidates[j][dimension])) return x;\n\n        return Math.random() * size;\n      }\n\n      return force.resume();\n    };\n\n    force.resume = function () {\n      return force.alpha(0.1);\n    };\n\n    force.stop = function () {\n      return force.alpha(0);\n    };\n\n    // use `node.call(force.drag)` to make nodes draggable\n    force.drag = function () {\n      if (!drag) drag = d3.behavior.drag()\n        .origin(function (o) {\n          return o;\n        })\n        .on(\"dragstart.force\", dragstart)\n        .on(\"drag.force\", dragmove)\n        .on(\"dragend.force\", dragend);\n\n      if (!arguments.length) return drag;\n\n      this.on(\"mouseover.force\", mouseover)\n        .on(\"mouseout.force\", mouseout)\n        .call(drag);\n    };\n\n    function dragmove(d) {\n      d.px = d3.event.x;\n      d.py = d3.event.y;\n      force.resume(); // restart annealing\n    }\n\n    force.edgePath = function () {\n      var width = size[0];\n\n      var getX1 = function (d) { return d[0][0]; }\n      var getY1 = function (d) { return d[0][1]; }\n      var getX2 = function (d) { return d[1][0]; }\n      var getY2 = function (d) { return d[1][1]; }\n\n      var drawLine = function (selection) {\n        selection.attr('d', function (d) {\n          var x1 = getX1(d);\n          var y1 = getY1(d);\n          var x2 = getX2(d);\n          var y2 = getY2(d);\n\n          if (2*Math.abs(x1-x2) < width) {\n            // draw direct from source to target\n            return 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n          } else if (x1 < x2) {\n            // shorter to go around the \"back\" and x1 is on the left\n            return 'M ' + x1 + ' ' + y1 + ' L ' + (x2 - width) + ' ' + y2 + ' ' +\n              'M ' + x2 + ' ' + y2 + ' L ' + (x1 + width) + ' ' + y1;\n          } else {\n            // shorter to go around the \"back\" and x1 is on the right\n            return 'M ' + x1 + ' ' + y1 + ' L ' + (x2 + width) + ' ' + y2 + ' ' +\n              'M ' + x2 + ' ' + y2 + ' L ' + (x1 - width) + ' ' + y1;\n          }\n        });\n      };\n\n      drawLine.x1 = function (fn) { getX1 = fn; return drawLine; }\n      drawLine.y1 = function (fn) { getY1 = fn; return drawLine; }\n      drawLine.x2 = function (fn) { getX2 = fn; return drawLine; }\n      drawLine.y2 = function (fn) { getY2 = fn; return drawLine; }\n\n      return drawLine;\n    };\n\n    return d3.rebind(force, event, \"on\");\n  };\n\n  // The fixed property has three bits:\n  // Bit 1 can be set externally (e.g., d.fixed = true) and show persist.\n  // Bit 2 stores the dragging state, from mousedown to mouseup.\n  // Bit 3 stores the hover state, from mouseover to mouseout.\n  // Dragend is a special case: it also clears the hover state.\n\n  function dragstart(d) {\n    d.fixed |= 2; // set bit 2\n  }\n\n  function dragend(d) {\n    d.fixed &= ~6; // unset bits 2 and 3\n  }\n\n  function mouseover(d) {\n    d.fixed |= 4; // set bit 3\n    d.px = d.x;\n    d.py = d.y; // set velocity to zero\n  }\n\n  function mouseout(d) {\n    d.fixed &= ~4; // unset bit 3\n  }\n\n  function accumulate(quad, alpha, charges) {\n    var cx = 0,\n      cy = 0;\n\n    quad.charge = 0;\n\n    if (!quad.leaf) {\n      var nodes = quad.nodes,\n        n = nodes.length,\n        i = -1,\n        c;\n\n      while (++i < n) {\n        c = nodes[i];\n        if (!c) continue;\n\n        accumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n\n    if (quad.point) {\n      // jitter internal nodes that are coincident\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - 0.5;\n        quad.point.y += Math.random() - 0.5;\n      }\n\n      var k = alpha * charges[quad.point.index];\n\n      quad.charge += quad.pointCharge = k;\n\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n\n  function isFunction(o) {\n    return typeof o === 'function';\n  }\n\n  function isNumber(o) {\n    return typeof o === 'number';\n  }\n\n});\n\n/*eslint-env amd,browser,node*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['d3', 'event-dispatcher', 'd3-force-cylindrical'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    require('d3-force-cylindrical');\n    module.exports = factory(require('d3'), require('event-dispatcher'));\n  } else {\n    root.ConceptBrowser = factory(root.d3, root.EventDispatcher);\n  }\n})(this, function (d3, EventDispatcher) {\n  'use strict';\n\n  /** @type {integer} */\n  var NODE_MIN_SIZE = 5;\n\n  /** @type {integer} */\n  var NODE_MAX_SIZE = 13;\n\n  /** @type {object.<string,functin>} */\n  var GRAPH_LAYOUT_CTORS = {\n    planar: d3.layout.force,\n    cylindrical: d3.layout.force.cylindrical\n  };\n\n  /** @type {string} */\n  var TIP_CSS_CLASS = 'd3-tip';\n\n  /** @type {object.<string,integer>} */\n  var TIP_POSITION_MARGIN = {\n    left: 200,\n    right: 200,\n    top: 100,\n    bottom: 100\n  };\n\n  if (!d3.tip) {\n    // eslint-disable-next-line no-console\n    console.warn('d3.tip is not available; tooltips will not display properly.');\n  }\n\n  /**\n   * SDA Concept Browser Visualization\n   *\n   * @param  {Element} rootEl\n   * @param  {integer} width\n   * @param  {integer} height\n   * @param  {string} [layout=planar] - one of: (planar, cylindrical)\n   */\n  function ConceptBrowser(rootEl, layout, options) {\n    layout = layout || 'planar';\n    options = options || {};\n\n    var events = EventDispatcher();\n\n    if (options.debug) {\n      events.all(function (eventName, context) {\n        // eslint-disable-next-line no-console\n        console.log(eventName, context.node ? context.node.id : context);\n      });\n    }\n\n    /**\n     * visualization width in pixels\n     *\n     * @type {integer}\n     */\n    var width;\n\n    /**\n     * visualization height in pixels\n     *\n     * @type {integer}\n     */\n    var height;\n\n    /**\n     * Nodes in the graph\n     *\n     * @type {Node[]}\n     */\n    var nodes = [];\n\n    /**\n     * Edges connecting nodes in the graph\n     *\n     * @type {Node[]}\n     */\n    var edges = [];\n\n    /**\n     * Collection of nodes that are in the \"highlighted\" state\n     *\n     * @type {Node[]}\n     */\n    var highlighted = [];\n\n    /**\n     * The currently focused node (if there is one)\n     *\n     * @type {?Node}\n     */\n    var focused = null;\n\n    /**\n     * Collection of nodes that are in the \"selected\" state\n     *\n     * @type {Node[]}\n     */\n    var selected = [];\n\n    /**\n     * The currently activated node (if there is one)\n     *\n     * @type {?Node}\n     */\n    var activated = null;\n\n    /**\n     * @type {d3.selection}\n     */\n    var svg;\n\n    /**\n     * @type {d3.selection}\n     */\n    var nodeLayer;\n\n    /**\n     * @type {d3.selection}\n     */\n    var edgeLayer;\n\n    /**\n     * @type {d3.selection}\n     */\n    var progressBar;\n\n    /**\n     * @type {d3.scale}\n     */\n    var progressScale;\n\n    /**\n     * @type {d3.scale}\n     */\n    var nodeRadiusScale;\n\n    /**\n     * @type {d3.scale}\n     */\n    var centralityMetricScale;\n\n    /**\n     * @type {d3.layout.force}\n     */\n    var graph;\n\n    /**\n     * function used in a selection.call() method for drawing edge paths.\n     * by default, it draws a straight line between the edge source and target nodes\n     *\n     * @type {function}\n     */\n    var drawEdge = function (selection) {\n      selection.attr('d', function (edge) {\n        var x1 = edge.source.x;\n        var y1 = edge.source.y;\n        var x2 = edge.target.x;\n        var y2 = edge.target.y;\n\n        return 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n      });\n    }\n\n    /**\n     * @type {?d3.tip}\n     */\n    var tooltip = null;\n\n    /**\n     * @type {boolean}\n     */\n    var isInitialized = false;\n\n    /**\n     * Given a selected node, determines what other nodes should be highlighted.\n     * @type {function}\n     */\n    var selectMode = function (node) {\n      if (!node) {\n        return [];\n      }\n\n      var adjacent = node.outEdges.forEach(function (edge) {\n        return edge.target;\n      });\n\n      var incident = node.inEdges.forEach(function (edge) {\n        return edge.source;\n      });\n\n      return [node].concat(adjacent, incident);\n    };\n\n    /**\n     * Given a node, what is its size metric?\n     * @type {function}\n     */\n    var centralityMetric = function () {\n      return 1;\n    };\n\n    /**\n     * A predicate to determine whether a given edge should display\n     * @type {function}\n     */\n    var edgeFilter = function () {\n      return true;\n    };\n\n    ////////////////////////////////////////////////////////////\n\n    // expose public methods\n    var API = {};\n    API.size = setSize;\n    API.nodeCentralityMetric = setNodeCentralityMetric;\n    API.selectMode = setSelectMode;\n    API.data = setData;\n    API.highlight = setHighlighted;\n    API.activate = setActivated;\n    API.edgeFilter = setEdgeFilter;\n    API.updateGraphSelections = applyStyleClasses;\n    API.refresh = refresh;\n    API.on = events.on;\n    return API;\n\n    ////////////////////////////////////////////////////////////\n\n    /**\n     * Sets graph dimensions. refresh() must be called in order for changes to take effect\n     *\n     * @param {integer[]} dims - dimensions (width, height) of new viewing area\n     */\n    function setSize(dims) {\n      width = dims[0];\n      height = dims[1];\n\n      if (isInitialized) {\n        svg.attr('width', width).attr('height', height);\n        progressScale.range([0, width]);\n        graph.size([width, height]);\n      }\n\n      return API;\n    }\n\n    /**\n     * Sets a node size metric function\n     *\n     * @param {function} nodeCentralityMetric\n     */\n    function setNodeCentralityMetric(nodeCentralityMetric) {\n      centralityMetric = nodeCentralityMetric;\n\n      if (isInitialized) {\n        var centralityExtent = d3.extent(nodes, centralityMetric);\n        centralityMetricScale.domain(centralityExtent[0] === centralityExtent[1] ? [centralityExtent[0] - 1, centralityExtent[1] + 1] : centralityExtent);\n      }\n\n      return API;\n    }\n\n    /**\n     * Sets a node selection mode function\n     *\n     * @param {function} _selectMode\n     */\n    function setSelectMode(_selectMode) {\n      selectMode = _selectMode;\n\n      return API;\n    }\n\n    /**\n     * Sets graph data. refresh() must be called in order for changes to take effect\n     *\n     * @param {Node[]} _nodes\n     * @param {Edge[]} _edges\n     */\n    function setData(_nodes, _edges) {\n      nodes = _nodes;\n      edges = _edges;\n\n      // randomize node positions if not already set\n      nodes.forEach(function (node) {\n        node.x = (node.x || Math.random()) * width;\n        node.y = (node.y || Math.random()) * height;\n      });\n\n      return API;\n    }\n\n    /**\n     * Sets the set of currently highlighted nodes\n     *\n     * @param {Node|Node[]} nodes\n     */\n    function setHighlighted(highlightedNodes) {\n      if (!(highlightedNodes instanceof Array)) {\n        highlightedNodes = [highlightedNodes];\n      }\n\n      // make sure every node is present in the graph\n      var allNodesInGraph = highlightedNodes.every(function (node) {\n        return nodes.indexOf(node) >= 0;\n      });\n\n      if (!allNodesInGraph) {\n        throw new Error('some node(s) to be highlighted are not members of the graph');\n      }\n\n      unhighlightAll();\n      highlight(highlightedNodes);\n\n      return API;\n    }\n\n    /**\n     * Sets the currently active node\n     *\n     * @param {Node} node\n     */\n    function setActivated(node) {\n      if (node && nodes.indexOf(node) < 0) {\n        throw new Error('node to be activated is not a member of the graph');\n      }\n\n      deactivate();\n\n      if (node) {\n        activate(node);\n\n        // also select nodes\n        deselectAll();\n        select(node);\n      }\n\n      return API;\n    }\n\n    /**\n     * Sets an edge predicate that determines whether an edge should be displayed\n     *\n     * @param {function} fn\n     */\n    function setEdgeFilter(fn) {\n      edgeFilter = fn;\n\n      return API;\n    }\n\n    /**\n     * Update node and edge bindings for display and run force-directed graph simulation\n     *\n     * @param {object} data\n     */\n    function refresh() {\n      // ensure visualization is initialized\n      initialize();\n\n      // begin force-directed simulation\n      graph\n        .nodes(nodes)\n        .links(edges)\n        .start();\n\n      bindNodes();\n      bindEdges();\n\n      return API;\n    }\n\n    ////////////////////////////////////////////////////////////\n\n    function initialize() {\n      if (!width || !height) {\n        throw new Error('No width/height set. Use size([width, height]) to set size before initializing');\n      }\n\n      if (!nodes || !edges) {\n        throw new Error('No nodes/edges set. Use data(nodes, edges) to set them before initializing');\n      }\n\n      if (isInitialized) {\n        return;\n      }\n\n      isInitialized = true;\n\n      svg = d3.select(rootEl).append('svg')\n        .attr('width', width)\n        .attr('height', height);\n\n      // extract edge types and create arrowhead styles for them\n      var edgeTypes = edges.reduce(function (types, edge) {\n        if (types.indexOf(edge.relation) < 0) {\n          types.push(edge.relation);\n        }\n        return types;\n      }, []);\n\n      defineArrowheads(svg, edgeTypes, ['', 'activated', 'selected', 'focused']);\n\n      var baseGroup = svg.append('g').attr('class', 'concept-browser');\n      edgeLayer = baseGroup.append('g').attr('class', 'edges');\n      nodeLayer = baseGroup.append('g').attr('class', 'nodes');\n\n      progressBar = baseGroup.append('rect').attr('class', 'progress')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 2);\n\n      progressScale = d3.scale.linear()\n        .domain([Math.log(0.1), Math.log(0.005)])\n        .range([0, width]);\n\n      var centralityExtent = d3.extent(nodes, centralityMetric);\n      centralityMetricScale = d3.scale.linear()\n        .domain(centralityExtent[0] === centralityExtent[1] ? [centralityExtent[0] - 1, centralityExtent[1] + 1] : centralityExtent)\n        .range([0, 1]);\n\n      nodeRadiusScale = function (x) {\n        return NODE_MIN_SIZE + (NODE_MAX_SIZE - NODE_MIN_SIZE) * centralityMetricScale(x);\n      }\n\n      graph = GRAPH_LAYOUT_CTORS[layout || 'planar']()\n        .size([width, height])\n        .on('tick', tick);\n      configureGraph(graph);\n\n      if (graph.edgePath) {\n        drawEdge = graph.edgePath()\n          .x1(function (edge) { return edge.source.x; })\n          .y1(function (edge) { return edge.source.y; })\n          .x2(function (edge) { return edge.target.x; })\n          .y2(function (edge) { return edge.target.y; });\n      }\n\n      if (d3.tip) {\n        tooltip = d3.tip()\n            .attr('class', TIP_CSS_CLASS)\n            .direction(tooltipDirection)\n            .offset(tooltipOffset)\n            .html(function (node) { return node.label; });\n\n        events.on('focus', function (evt) { showTooltip(evt.node); });\n        events.on('blur', function (evt) { hideTooltip(evt.node); });\n      }\n\n      var updateGraphSelections = debounce(applyStyleClasses, 100, true, true);\n\n      events.on('highlight', updateGraphSelections);\n      events.on('unhighlight', updateGraphSelections);\n      events.on('focus', updateGraphSelections);\n      events.on('blur', updateGraphSelections);\n      events.on('select', updateGraphSelections);\n      events.on('deselect', updateGraphSelections);\n      events.on('activate', updateGraphSelections);\n      events.on('deactivate', updateGraphSelections);\n    }\n\n    /**\n     * Sets configuration values on a D3 graph instance\n     *\n     * @param  {d3.svg.graph} graph\n     */\n    function configureGraph(graph) {\n      graph\n        .gravity(0.1)\n        // .linkDistance(50)\n        // .chargeDistance(width * 0.25)\n        .linkDistance(50)\n        .linkStrength(function (edge) {\n          // influential nodes pull their supporters closer\n          var sz = centralityMetric(edge.source);\n          return centralityMetricScale(sz)\n          // var targetInfluence = edge.target.stats.in_degree / 10;\n          // return 1 - 1/(1 + targetInfluence);\n        })\n        .charge(function (node) {\n          // HACK experiment with variably-charged nodes\n          var chargeRange = [-50, -300];\n          var influenceRange = [0, 1];\n          var sz = centralityMetric(node);\n\n          return chargeRange[0] + (chargeRange[1] - chargeRange[0])/(influenceRange[1] - influenceRange[0]) * (centralityMetricScale(sz) - influenceRange[0]);\n        })\n        .friction(.9);\n        // .theta(0.08);\n    }\n\n    /**\n     * Update node positions with each tick of a graph's physics simulation\n     *\n     * @param {object} evt\n     */\n    function tick(evt) {\n      updatePositions();\n\n      if (evt.alpha > 0.0051) {\n        progressBar.attr('width', progressScale(Math.log(evt.alpha)));\n        // bail early; do not render nodes\n        if (Math.random() < 0.9) return;\n      } else {\n        progressBar.attr('width', 0);\n      }\n\n      nodeLayer.selectAll('.node').transition().duration(500)\n        .attr('transform', function (node) {\n          return 'translate(' + node.x + ',' + node.y + ')';\n        });\n\n      edgeLayer.selectAll('.edge').transition().duration(500)\n        .call(drawEdge);\n    }\n\n    /**\n     * Update node bindings on the visualization\n     *\n     * @param  {Node[]} nodes\n     */\n    function bindNodes() {\n      if (!nodes || nodes.length === 0) {\n        throw new Error('no nodes provided');\n      }\n\n      // var nodeMetricExtent = d3.extent(nodes, function (node) {\n      //   return (node.metadata && node.metadata.pagerank) || 1;\n      // });\n\n      // nodeRadiusScale.domain(nodeMetricExtent);\n\n      var nodeSelect = nodeLayer.selectAll('.node')\n        .data(nodes, function (node) {\n          return node.id;\n        });\n\n      var nodeEnter = nodeSelect.enter().append('g')\n        .attr('class', 'node')\n        .attr('transform', function (node) {\n          return 'translate(' + node.x + ',' + node.y + ')';\n        })\n        .on('mouseover', focus)\n        .on('mouseout', blur)\n        .on('dblclick', activate)\n        .on('click', function (node) {\n          if (d3.event.ctrlKey) {\n            if (selected.indexOf(node) < 0) {\n              select(node);\n            } else {\n              deselect(node);\n            }\n          } else {\n            deselectAll();\n            select(node);\n          }\n        });\n\n      nodeEnter.append('circle');\n\n      nodeSelect.select('circle')\n        .attr('r', function (node) {\n          var sz = centralityMetric(node);\n          return nodeRadiusScale(sz);\n        });\n\n      nodeSelect.exit().remove();\n\n      if (tooltip) {\n        nodeLayer.call(tooltip);\n      }\n    }\n\n    /**\n     * Update edge bindings on the visualization\n     *\n     * @param  {Edge[]} edges\n     */\n    function bindEdges() {\n      if (!edges || edges.length === 0) {\n        throw new Error('no edges provided');\n      }\n\n      var edgeSelect = edgeLayer.selectAll('.edge')\n        .data(edges, function (edge) {\n          return edge.source.id + ',' + edge.target.id;\n        });\n\n      edgeSelect.enter().append('path')\n        .attr('class', function (edge) {\n          return 'edge ' + edge.relation;\n        })\n        .attr('marker-end', function (edge) {\n          return 'url(#arrowhead-' + edge.relation + ')';\n        })\n        // .style('stroke-width', function (edge) {\n        //   var multiplicity = (edge.metadata && edge.metadata.multiplicity) || 1;\n        //   return multiplicity + 'pt';\n        // })\n        .call(drawEdge);\n\n      edgeSelect.exit().remove();\n    }\n\n    /**\n     * Adds the given node or nodes to the set of highlighted nodes\n     *\n     * @param {Node|Node[]} ns\n     */\n    function highlight(ns) {\n      if (!(ns instanceof Array)) {\n        ns = [ns];\n      }\n\n      ns.forEach(function (n) {\n        if (highlighted.indexOf(n) < 0) {\n          highlighted.push(n);\n        }\n\n        events.trigger('highlight', { node: n, selection: selected });\n      });\n    }\n\n    /**\n     * Unhighlights the given node, nodes, or all currently highlighted nodes\n     * @param  {Node|Node[]} [ns]\n     */\n    function unhighlight(ns) {\n      if (!ns) {\n        return unhighlightAll();\n      } else if (!(ns instanceof Array)) {\n        ns = [ns];\n      }\n\n      ns.forEach(function (n) {\n        var ix = highlighted.indexOf(n);\n        if (ix >= 0) {\n          highlighted.splice(ix, 1);\n        }\n      });\n    }\n\n    /**\n     * Unhighlights all nodes\n     */\n    function unhighlightAll() {\n      highlighted.forEach(function (node) {\n        events.trigger('unhighlight', { node: node, selection: selected });\n      });\n\n      highlighted = [];\n    }\n\n    /**\n     * Focuses the given node\n     *\n     * @param {Node} node\n     */\n    function focus(node) {\n      // ensure that the currently selected node has already been blurred\n      blur();\n\n      focused = node;\n      events.trigger('focus', { node: focused, selection: selected });\n    }\n\n    /**\n     * Blurs the given node or the currently focused node.\n     *\n     * @param {Node} [node]\n     */\n    function blur(node) {\n      node = node || focused;\n\n      if (node) {\n        if (focused === node) {\n          focused = null;\n        } else {\n          throw new Error('tried to blur a node that was not focused');\n        }\n\n        events.trigger('blur', { node: node, selection: selected });\n      }\n    }\n\n    /**\n     * Activates the given node\n     *\n     * @param {Node} node\n     */\n    function activate(node) {\n      // don't do anything if node is already active\n      if (activated === node) {\n        return;\n      }\n\n      // ensure that the active node has been deactivated\n      deactivate()\n\n      activated = node;\n      events.trigger('activate', { node: activated, selection: selected });\n    }\n\n    /**\n     * Deactivates the given node or the currently activated node.\n     *\n     * @param {Node} node\n     */\n    function deactivate(node) {\n      node = node || activated;\n\n      if (node) {\n        if (activated === node) {\n          activated = null;\n        } else {\n          throw new Error('tried to deactivate a node that was not activated');\n        }\n\n        events.trigger('deactivate', { node: node, selection: selected });\n      }\n    }\n\n    /**\n     * Adds the given node to the list of currently selected nodes\n     *\n     * @param {Node} node\n     */\n    function select(node) {\n      if (!node) {\n        throw new Error('no node provided');\n      }\n\n      if (selected.indexOf(node) < 0) {\n        selected.push(node);\n      } else {\n        throw new Error('tried to select a node that is already selected');\n      }\n\n      events.trigger('select', { node: node, selection: selected });\n    }\n\n    /**\n     * Removes the given node from the list of currently selected nodes\n     *\n     * @param {Node} node\n     */\n    function deselect(node) {\n      if (!node) {\n        throw new Error('no node provided to deselect');\n      }\n\n      var ix = selected.indexOf(node);\n      if (ix < 0) {\n        throw new Error('tried to deselect a node that was not selected');\n      } else {\n        selected.splice(ix, 1);\n      }\n\n      events.trigger('deselect', { node: node, selection: selected });\n    }\n\n    /**\n     * Deselects all selected nodes\n     */\n    function deselectAll() {\n      selected.forEach(function (node) {\n        events.trigger('deselect', { node: node, selection: [] });\n      });\n\n      selected = [];\n    }\n\n    /**\n     * Displays a tooltip with a label for the given node.\n     *\n     * @param {Node} node\n     */\n    function showTooltip(node) {\n      if (tooltip) {\n        tooltip.attr('class', TIP_CSS_CLASS)\n          .show(node);\n      }\n    }\n\n    /**\n     * Hides the tooltip for the given node.\n     *\n     * @param {Node} node\n     */\n    function hideTooltip(node) {\n      if (tooltip) {\n        tooltip.attr('class', TIP_CSS_CLASS)\n          .hide(node);\n      }\n    }\n\n    /**\n     * Marks selected nodes and edges as highlighted\n     */\n    function applyStyleClasses() {\n      var activatedSet = [activated];\n\n\n      var selectedSet = selected.slice();\n\n      var focusedSet = selectMode(focused);\n\n      // ego graphs of selected nodes get focused\n      selected.forEach(function (p) {\n        selectMode(p).forEach(function (q) {\n          if (focusedSet.indexOf(q) < 0) {\n            focusedSet.push(q);\n          }\n        });\n      });\n\n      // ego graphs of activated nodes get focused\n      selectMode(activated).forEach(function (q) {\n        if (focusedSet.indexOf(q) < 0) {\n          focusedSet.push(q);\n        }\n      });\n\n      var highlightedSet = highlighted.slice();\n\n      nodeLayer.selectAll('.node')\n        .classed('activated', function (node) {\n          return activatedSet.indexOf(node) >= 0;\n        })\n        .classed('selected', function (node) {\n          return selectedSet.indexOf(node) >= 0;\n        })\n        .classed('focused', function (node) {\n          return focusedSet.indexOf(node) >= 0;\n        })\n        .classed('highlighted', function (node) {\n          return highlightedSet.indexOf(node) >= 0;\n        });\n\n      edgeLayer.selectAll('.edge')\n        .classed('activated', function (edge) {\n          return activatedSet.indexOf(edge.source) >= 0 && activatedSet.indexOf(edge.target) >= 0;\n        })\n        .classed('selected', function (edge) {\n          return selectedSet.indexOf(edge.source) >= 0 && selectedSet.indexOf(edge.target) >= 0;\n        })\n        .classed('focused', function (edge) {\n          return focusedSet.indexOf(edge.source) >= 0 && focusedSet.indexOf(edge.target) >= 0;\n        })\n        .classed('hidden', function (edge) {\n          return !edgeFilter(edge);\n        })\n        .attr('marker-end', function (edge) {\n          var cls = '';\n\n          if (activatedSet.indexOf(edge.source) >= 0 && activatedSet.indexOf(edge.target) >= 0) {\n            cls = '-activated';\n          } else if (selectedSet.indexOf(edge.source) >= 0 && selectedSet.indexOf(edge.target) >= 0) {\n            cls = '-selected'\n          } else if (focusedSet.indexOf(edge.source) >= 0 && focusedSet.indexOf(edge.target) >= 0) {\n            cls = '-focused'\n          }\n\n          return 'url(#arrowhead-' + edge.relation + cls + ')';\n        });\n    }\n\n    /**\n     * Sets positions of each node to within the viewing area, wrapping left and right sides\n     */\n    function updatePositions() {\n      nodes.forEach(function (node) {\n        // constrain x and y positions to within viewing area\n        node.x = Math.max(Math.min(node.x, width), 0);\n        node.y = Math.max(Math.min(node.y, height), 0);\n      });\n    }\n\n    /**\n     * Gets node-relative tooltip positioning information from a node.\n     * Based on how close the node is to the border/sides of the visualization.\n     *\n     * @param {Node} node\n     * @return {string} tooltip direction (one of: n, ne, e, se, s, sw, w, nw)\n     */\n    function tooltipDirection(node) {\n      var dir = '';\n\n      // control top/bottom based on proximity to borders\n      if (node.y > height - TIP_POSITION_MARGIN.bottom) dir += 'n';\n      else if (node.y < TIP_POSITION_MARGIN.top) dir += 's';\n\n      // control side based on proximity to borders\n      if (node.x > width - TIP_POSITION_MARGIN.right) dir += 'w';\n      else if (node.x < TIP_POSITION_MARGIN.left) dir += 'e';\n\n      // fall back to top\n      if (dir === '') dir = 'n';\n\n      return dir;\n    }\n\n     /**\n      * Controls how far to place the tooltip from the point at which the node is located.\n      * Offset coordinates based on how close the node is to the border/sides of the visualization\n      * (i.e. the node's radius)\n      *\n      * @param {Node} node\n      * @return {integer[]} tooltip x/y offset coordinates\n      */\n    function tooltipOffset(node) {\n      var sz = centralityMetric(node);\n      var radius = nodeRadiusScale(sz);\n      var offset = [0, 0];\n\n      if (node.y > height - TIP_POSITION_MARGIN.bottom) offset[0] -= radius;\n      else if (node.y < TIP_POSITION_MARGIN.top) offset[0] += radius;\n\n      if (node.x > width - TIP_POSITION_MARGIN.left_right) offset[1] -= radius;\n      else if (node.x < TIP_POSITION_MARGIN.left_right) offset[1] += radius;\n\n      if (offset[1] === 0 && offset[0] === 0) offset[0] -= radius;\n\n      return offset;\n    }\n\n    /**\n     * Sets arrowhead definitions on the SVG defs element\n     *\n     * @param  {object} svg\n     */\n    function defineArrowheads(svg, edgeTypes, classTypes) {\n      var arrowTypes = [];\n      edgeTypes.forEach(function (type) {\n        classTypes.forEach(function (cls) {\n          arrowTypes.push('arrowhead-' + type + (cls ? '-' + cls : ''));\n        });\n      });\n\n      // arrowhead definitions\n      svg.append('defs').selectAll('marker')\n          .data(arrowTypes)\n        .enter().append('marker')\n          .attr('id', function(id) { return id; })\n          .attr('viewBox', '0 -4 10 8')\n          .attr('refX', 25)\n          .attr('refY', 0)\n          .attr('markerWidth', 6)\n          .attr('markerHeight', 6)\n          .attr('orient', 'auto')\n        .append('path')\n          .attr('d', 'M 0,-4 L 10,0 L 0,4');\n    }\n  }\n\n  return ConceptBrowser;\n\n  function debounce(fn, wait, leading, trailing) {\n    var timeout;\n\n    if (typeof leading === 'undefined') {\n      leading = true;\n    }\n\n    if (typeof trailing === 'undefined') {\n      trailing = false;\n    }\n\n    return function () {\n      var ctx = this;\n      var args = arguments;\n\n      var callNow = leading && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n\n      if (callNow) {\n        fn.apply(ctx, args);\n      }\n\n      function later() {\n        timeout = null;\n        if (trailing) {\n          fn.apply(ctx, args);\n        }\n      }\n    };\n  }\n\n});\n\nangular.module('sdaConceptBrowser').run(['$templateCache', function($templateCache) {$templateCache.put('app/main/help.html','<md-dialog><md-toolbar><div class=md-toolbar-tools><h2>Help</h2><span flex></span><md-button class=md-icon-button ng-click=close()><md-icon>close</md-icon></md-button></div></md-toolbar><md-dialog-content><div class=md-dialog-content layout=column layout-align=\"center center\"><iframe width=1280 height=720 src=https://www.youtube.com/embed/0PzUCCnlN18 frameborder=0 allowfullscreen></iframe></div></md-dialog-content></md-dialog>');\n$templateCache.put('app/main/main.html','<md-toolbar class=layout-navbar><div class=md-toolbar-tools><a class=logo href=/ layout=column layout-align=\"center center\"><img src=/assets/images/sda-logo-light.png alt=SDA flex=nogrow></a><h1>Concept Browser</h1><span flex></span><md-menu><md-button class=md-icon-button md-menu-origin ng-click=$mdOpenMenu($event) title=\"Ranking Model\"><md-icon>adjust</md-icon></md-button><md-menu-content><md-menu-item ng-repeat=\"metric in main.sizeMetrics\"><md-button ng-click=\"main.sizeMetric = metric\" ng-disabled=metric.disabled><md-icon md-menu-align-target>radio_button_{{main.sizeMetric === metric ? \\'\\' : \\'un\\'}}checked</md-icon>{{metric.label}}</md-button></md-menu-item></md-menu-content></md-menu><md-menu><md-button class=md-icon-button md-menu-origin ng-click=$mdOpenMenu($event) title=\"Selection Mode\"><md-icon>device_hub</md-icon></md-button><md-menu-content><md-menu-item ng-repeat=\"mode in main.selectModes\"><md-button ng-click=\"main.selectMode = mode\" ng-disabled=metric.disabled><md-icon md-menu-align-target>radio_button_{{main.selectMode === mode ? \\'\\' : \\'un\\'}}checked</md-icon>{{mode.label}}</md-button></md-menu-item></md-menu-content></md-menu><md-menu><md-button class=md-icon-button md-menu-origin ng-click=$mdOpenMenu($event) title=\"Relationship Types\"><md-icon>filter_list</md-icon></md-button><md-menu-content><md-menu-item><md-button ng-click=\"main.relnTypeFilter = []\"><md-icon md-menu-align-target>check_box{{main.relnTypeFilter.length &gt; 0 ? \\'_outline_blank\\' : \\'\\'}}</md-icon>All Relationships</md-button></md-menu-item><md-divider></md-divider><md-menu-item ng-repeat=\"type in main.relnTypes\"><md-button ng-click=main.toggleRelnTypeFilter(type.id) md-prevent-menu-close><md-icon md-menu-align-target>check_box{{main.relnTypeFilter.indexOf(type.id) &lt; 0 ? \\'_outline_blank\\' : \\'\\'}}</md-icon>{{type.title}}</md-button></md-menu-item></md-menu-content></md-menu><span flex></span><md-button class=md-icon-button ng-click=main.toggleSearchForm($event)><md-icon>search</md-icon></md-button><form name=search class=search-form layout=row ng-style=\"{ width: main.showSearchForm ? \\'20rem\\' : \\'0\\' }\"><input type=search name=query ng-model=searchQuery ng-change=main.highlightNodes() flex> <button class=clear ng-click=main.clearSearchForm()><md-icon>clear</md-icon></button></form><md-button class=md-icon-button ng-click=main.showHelp($event)><md-icon>help_outline</md-icon></md-button></div></md-toolbar><main layout=row layout-align=center flex><div layout=column flex><concept-browser flex ng-if=main.graph ng-model=main.graph active-node=main.activeNode size-metric=main.sizeMetric.strategy select-mode=main.selectMode.strategy highlighted-nodes=main.highlightedNodes reln-types=main.relnTypeFilter></concept-browser><div ng-if=\"!main.graph && main.graphLoading\" flex layout=column layout-align=\"center center\" layout-padding><md-progress-circular md-mode=indeterminate></md-progress-circular><div class=\"text-center md-headline md-secondary\">Loading graph data&hellip;<br>This may take a while.</div></div></div><md-sidenav md-component-id=right class=md-sidenav-right md-is-open=main.activeNode md-disable-backdrop md-whiteframe=4 layout=column><md-toolbar><div class=md-toolbar-tools><h2>Node Information</h2><span flex></span><md-button class=md-icon-button ng-click=\"main.activeNode = null\"><md-icon>close</md-icon></md-button></div></md-toolbar><div flex layout=column layout-align=\"center center\" ng-if=main.sidebarLoading><md-progress-circular md-mode=indeterminate></md-progress-circular></div><div class=node-info flex layout=column ng-if=!main.sidebarLoading><h3 class=name><span class=given>{{main.person.name.givenName}}</span> <span class=family>{{main.person.name.familyName}}</span></h3><md-tabs flex><md-tab ng-if=main.person.summary><md-tab-label><md-icon>person</md-icon></md-tab-label><md-tab-body><div class=summary ng-if=main.person.summary ng-bind-html=main.person.summary></div></md-tab-body></md-tab><md-tab ng-if=\"main.works &amp;&amp; main.works.length &gt; 0\"><md-tab-label><md-icon>content_copy</md-icon></md-tab-label><md-tab-body><div class=books><h4>Books ({{main.works.length}})</h4><md-list><md-list-item ng-repeat=\"work in main.works\" ng-href=../#/library/books/{{work.id}}>{{work.label}}</md-list-item></md-list></div></md-tab-body></md-tab><md-tab ng-if=\"main.related &amp;&amp; main.related.length &gt; 0\"><md-tab-label><md-icon>link</md-icon></md-tab-label><md-tab-body><md-list class=relationships><div ng-repeat=\"group in main.related\"><div ng-if=group.directed><div ng-if=\"group.out.nodes.length &gt; 0\"><md-subheader class=md-no-sticky>{{group.out.label}}</md-subheader><md-list-item ng-repeat=\"node in group.out.nodes track by node.id\" ng-click=\"main.activeNode = node\">{{node.label}}</md-list-item></div><div ng-if=\"group.in.nodes.length &gt; 0\"><md-subheader class=md-no-sticky>{{group.in.label}}</md-subheader><md-list-item ng-repeat=\"node in group.in.nodes track by node.id\" ng-click=\"main.activeNode = node\">{{node.label}}</md-list-item></div></div><div ng-if=!group.directed><div ng-if=\"group.none.nodes.length &gt; 0\"><md-subheader class=md-no-sticky>{{group.none.label}}</md-subheader><md-list-item ng-repeat=\"node in group.none.nodes track by node.id\" ng-click=\"main.activeNode = node\">{{node.label}}</md-list-item></div></div></div></md-list></md-tab-body></md-tab></md-tabs></div></md-sidenav></main>');}]);"]}