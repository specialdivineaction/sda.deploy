{"version":3,"sources":["scripts/app.js"],"names":["angular","module","workEditorDirective","WorkEditorController","$scope","worksRepo","_","activate","work","editions","forEach","edition","vm","push","model","focused","createEdition","titles","cloneDeep","authors","otherAuthors","deleteEdition","ix","splice","this","$inject","directive","restrict","templateUrl","scope","controller","controllerAs","volumeEditorDirective","volume","titleEditorDirective","title","publicationInfoEditorDirective","pubInfo","editionEditorDirective","EditionEditorController","volumes","createVolume","publicationInfo","deleteVolume","copyEditorDirective","copy","CopyEditorController","addHandler","HathiTrustRefHandler","GoogleBooksRefHandler","InternetArchiveRefHandler","handler","refHandlers","id","parseProperties","type","url","properties","copyForm","$setValidity","setProperties","handle","parsed","parseUrl","seq","path","substr","lastIndexOf","pageNo","fragment","match","length","makePropertiesObject","toString","src","display","hostname","query","urlappend","subquery","parseQueryString","htid","section","printsec","page","pg","parser","document","createElement","href","protocol","host","port","pathname","search","hash","sep","isString","flags","indexOf","kvpairs","split","pair","key","value","decodeURIComponent","URIError","hasOwnProperty","isArray","authorRefEditorDirective","AuthorRefEditorController","peopleRepo","ref","authorId","author","get","$promise","then","linkAuthorSearchText","name","label","setLinkedAuthor","person","getResults","resultSet","items","authorRoles","workEditorItemDirective","$log","linkFunc","error","WorkEditorItemController","loaded","link","nameEditorDirective","eventEditorDirective","event","summaryEditorDirective","summary","SummaryEditDialogController","$mdDialog","close","hide","cancel","dateEditorDirective","date","ShowWorkController","$state","$stateParams","relationshipsRepo","$mdToast","$q","$timeout","workId","bcTitle","getTitle","relationshipsPromise","loadRelationships","all","loading","getCurrentUri","relationships","currentUri","normalizeRelationships","editBibInfo","$event","dialog","targetEvent","locals","dialogPromise","show","updatedWork","extend","saveWork","showSavedToast","editSummary","updatedSummary","addEdition","prompt","textContent","placeholder","ok","savePromise","editionName","saveEdition","go","editionId","confirm","addCopy","editCopy","copies","updatedCopy","deleteCopy","openRelationship","relationship","entity","entities","refParams","addRelationship","createRelationship","updatedRelationship","save","deleteRelationship","confirmPromise","deletePromise","toast","simple","position","WorkEditDialogController","addAuthor","field","authorRef","deleteAuthor","addTitle","deleteTitle","ShowVolumeController","volumeId","getWork","getEdition","getVolume","workTitle","updatedVolume","saveVolume","VolumeEditDialogController","RelationshipEditDialogController","types","getTypes","target","createAnchor","targetEntities","self","entryUris","relatedEntities","descriptionMimeType","rawTypes","Object","defineProperty","identifier","reverse","isDirected","reverseTitle","results","setType","typeId","isReverse","swap","selectWork","workProxy","targets","workUri","uri","subtitle","editionUri","editionTitle","volumeUri","volumeTitle","volumeNumber","selectedTarget","setTarget","selectedType","searchText","ShowEditionController","updatedEdition","addVolume","EditionEditDialogController","CopyEditDialogController","worksRepoProvider","worksRepoFactory","$resource","findAll","restResource","q","max","isUndefined","TypeError","adaptWork","editionResource","adaptEdition","volumeResource","adaptVolume","createWork","arguments","apply","Error","$update","$save","deleteWork","dataItem","adaptCommon","toLowerCase","role","getTitleByTypePreference","reduce","found","find","provider","update","method","repo","getAll","create","$get","tasksRepoProvider","tasksRepoFactory","getTask","taskId","workflow","workflowResource","task","getItems","stageId","options","itemResource","stage","start","transition","item","sourceStage","targetStage","result","itemId","comments","resp","relationshipsRepoProvider","relationshipsRepoFactory","typesCache","force","typeResource","tcPromise","getType","reln","relnResource","adaptRelationship","createProvenance","provenance","adaptProvenance","anchor","adaptAnchor","findById","queryOpts","direction","off","saveRelationship","response","creatorUris","normalizedRelationships","map","some","targetField","flattened","arr","concat","resolveEntityUri","description","relnsByTypeDir","fwd","rev","typeGroups","dirs","group","ENTITY_URI","exec","makeVolumeEntity","makeEditionEntity","makeWorkEntity","peopleRepoProvider","peopleRepoFactory","createPerson","adaptPerson","createMeta","meta","adaptMeta","createName","adaptName","createEvent","evt","adaptEvent","createDateDescription","dateDescription","savePerson","personId","deletePerson","altNames","birth","death","links","trcPersonEditorDirective","PersonEditorController","addName","newName","removeName","addEvent","newEvent","removeEvent","trcNameEditorDirective","NameEditorController","roles","trcEventEditorDirective","TaskController","$mdSidenav","tasksRepo","worklistPromises","stages","worklistPromise","fetchStage","openMenu","toggle","focusItem","stopImmediatePropagation","entityId","transitionItem","updatedItem","worklists","stageOrder","slideToggle","el","attr","duration","parseInt","slideToggleDuration","$watch","active","stop","slideDown","slideUp","ShowPersonController","editBioInfo","updatedPerson","editEvent","updatedEvent","PersonEditDialogController","deleteName","nameRoles","EventEditDialogController","MainController","searchQuery","peopleResults","worksResults","debounce","runBlock","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","views","main","otherwise","config","constant","moment","$logProvider","$mdThemingProvider","debugEnabled","definePalette","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastDefaultColor","contrastDarkColors","theme","primaryPalette","accentPalette","$templateCache","put"],"mappings":"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","file":"scripts/app-57b654d528.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb', [\n      'ngAnimate',\n      'ngCookies',\n      // 'ngTouch',\n      'ngSanitize',\n      'ngMessages',\n      'ngAria',\n      'ngResource',\n      'ui.router',\n      'ckeditor',\n      'ngMaterial',\n      'slideToggle',\n      'trcWorks',\n      'trcTasks',\n      'trcBio',\n      'trcReln'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('workEditor', workEditorDirective);\n\n  /** @ngInject */\n  function workEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/work/components/work-editor/work-editor.html',\n      scope: {\n        work: '=ngModel'\n      },\n      controller: WorkEditorController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function WorkEditorController($scope, worksRepo, _) {\n      var vm = this;\n\n      vm.editions = [];\n\n      vm.createEdition = createEdition;\n      vm.deleteEdition = deleteEdition;\n\n      activate();\n\n      function activate() {\n        $scope.work.editions.forEach(function (edition) {\n          vm.editions.push({\n            model: edition,\n            focused: false\n          });\n        });\n      }\n\n      function createEdition() {\n        var edition = worksRepo.createEdition();\n        edition.titles = _.cloneDeep($scope.work.titles);\n        edition.authors = _.cloneDeep($scope.work.authors);\n        edition.otherAuthors = _.cloneDeep($scope.work.otherAuthors);\n\n        $scope.work.editions.push(edition);\n        vm.editions.push({\n          model: edition,\n          focused: true\n        });\n      }\n\n      function deleteEdition(ix) {\n        vm.editions.splice(ix, 1);\n        $scope.work.editions.splice(ix, 1);\n      }\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('volumeEditor', volumeEditorDirective);\n\n  /** @ngInject */\n  function volumeEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/work/components/volume-editor/volume-editor.html',\n      scope: {\n        volume: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('titleEditor', titleEditorDirective);\n\n  /** @ngInject */\n  function titleEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/work/components/title-editor/title-editor.html',\n      scope: {\n        title: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('publicationInfoEditor', publicationInfoEditorDirective);\n\n  /** @ngInject */\n  function publicationInfoEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/work/components/publication-info-editor/publication-info-editor.html',\n      scope: {\n        pubInfo: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('editionEditor', editionEditorDirective);\n\n  /** @ngInject */\n  function editionEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/work/components/edition-editor/edition-editor.html',\n      scope: {\n        edition: '=ngModel'\n      },\n      controller: EditionEditorController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function EditionEditorController($scope, worksRepo, _) {\n      var vm = this;\n\n      vm.volumes = [];\n\n      vm.createVolume = createVolume;\n      vm.deleteVolume = deleteVolume;\n\n      activate();\n\n      function activate() {\n        $scope.edition.volumes.forEach(function (volume) {\n          vm.volumes.push({\n            model: volume,\n            focused: false\n          });\n        });\n      }\n\n      function createVolume() {\n        var volume = worksRepo.createVolume();\n        volume.titles = _.cloneDeep($scope.edition.titles);\n        volume.authors = _.cloneDeep($scope.edition.authors);\n        volume.otherAuthors = _.cloneDeep($scope.edition.otherAuthors);\n        volume.publicationInfo = _.cloneDeep($scope.edition.publicationInfo);\n\n        $scope.edition.volumes.push(volume);\n        vm.volumes.push({\n          model: volume,\n          focused: true\n        });\n      }\n\n      function deleteVolume(ix) {\n        vm.volumes.splice(ix, 1);\n        $scope.edition.volumes.splice(ix, 1);\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('copyEditor', copyEditorDirective);\n\n  /** @ngInject */\n  function copyEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/work/components/copy-editor/copy-editor.html',\n      scope: {\n        copy: '=ngModel'\n      },\n      controller: CopyEditorController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n  }\n\n  /** @ngInject */\n  function CopyEditorController($scope) {\n    var vm = this;\n\n    vm.refHandlers = {};\n    vm.setProperties = parseProperties;\n\n    activate();\n\n    function activate() {\n      addHandler(HathiTrustRefHandler());\n      addHandler(GoogleBooksRefHandler());\n      addHandler(InternetArchiveRefHandler());\n    }\n\n    function addHandler(handler) {\n      vm.refHandlers[handler.id] = handler;\n    }\n\n    function parseProperties(type, url) {\n      if (vm.refHandlers[type]) {\n        $scope.copy.properties = vm.refHandlers[type](url);\n      }\n\n      $scope.copyForm.url.$setValidity(type, $scope.copy.properties != null);\n    }\n  }\n\n  // https://archive.org/details/essayinanswertom00adamiala\n  // <iframe src='https://archive.org/stream/essayinanswertom00adamiala?ui=embed#page/n7/mode/1up' width='480px' height='430px' frameborder='0' ></iframe>\n  // TODO add support for resources from OpenLibrary\n  // https://openlibrary.org/books/OL7186607M/An_essay_in_answer_to_Mr._Hume's_Essay_on_miracles.\n\n  /**\n   * A reference parse handler to support digital copies from the Internet\n   * Archive.\n   */\n  function InternetArchiveRefHandler() {\n    function handle(url) {\n      var parsed = parseUrl(url);\n      if (!parsed) {\n        return null;\n      }\n\n      var seq;\n      var id = parsed.path.substr(parsed.path.lastIndexOf('/') + 1)\n      var pageNo = parsed.fragment.match(/page\\/([^\\/]+)/);\n      if (pageNo && pageNo.length >= 2) {\n        seq = pageNo[1];\n      }\n\n      return makePropertiesObject(parsed.toString(), id, seq);\n    }\n\n    handle.id = 'internetarchive';\n    handle.display = 'Internet Archive';\n\n    /**\n     * Constructs an object literal that represents the stored-properties\n     * to associate with an InternetArchive digital copy.\n     *\n     * @param  {string} src The source URL from which the properties were parsed.\n     * @param  {string} id  The identifier used to uniquely reference a\n     *                      particular digial copy at the Internet Archive.\n     * @param  {string} seq The sequence number that identifies the page to be\n     *                      used as the initial page of this digital copy.\n     * @return {object}     The object literal of properties to be associated\n     *                      with this digital copy.\n     */\n    function makePropertiesObject(src, id, seq) {\n      if (!id) {\n        return null;\n      }\n\n      return {\n        src: src,\n        id: id,\n        seq: seq\n      };\n    }\n\n    return handle;\n  }\n\n  function HathiTrustRefHandler() {\n    function handle(url) {\n      var parsed = parseUrl(url);\n      if (!parsed) {\n        return null;\n      }\n\n      var id, seq;\n\n      switch (parsed.hostname) {\n        case 'babel.hathitrust.org':\n          id = parsed.query.id;\n          seq = parsed.query.seq;\n          break;\n\n        case 'hdl.handle.net':\n          id = parsed.path.substr(parsed.path.lastIndexOf('/') + 1);\n\n          if (!parsed.query.urlappend) {\n            break;\n          }\n\n          var subquery = parseQueryString(parsed.query.urlappend);\n          if (!subquery) {\n            break;\n          }\n          seq = subquery.seq;\n          break;\n      }\n\n      if (!id) {\n        return null;\n      }\n\n      return {\n        htid: id,\n        seq: seq\n      };\n    }\n\n    handle.id = 'hathitrust';\n    handle.display = 'HathiTrust';\n\n    return handle;\n  }\n\n  function GoogleBooksRefHandler() {\n    function handle(url) {\n      var parsed = parseUrl(url);\n      if (!parsed) {\n        return null;\n      }\n\n      switch (parsed.hostname) {\n        case 'books.google.com':\n          var id = parsed.query.id;\n          var section = parsed.query.printsec;\n          var page = parsed.query.pg;\n          break;\n      }\n\n      if (!id) {\n        return null;\n      }\n\n      return {\n        id: id,\n        section: section,\n        page: page\n      };\n    }\n\n    handle.id = 'googlebooks';\n    handle.display = 'Google Books';\n\n    return handle;\n  }\n\n  /**\n   * Parses a URL string into its components\n   *\n   * @param  {string} url\n   * @return {URL}\n   */\n  function parseUrl(url) {\n    if (!url) {\n      return null;\n    }\n\n    // eslint-disable-next-line angular/document-service\n    var parser = document.createElement('a');\n    parser.href = url;\n\n    return {\n      toString: function() {\n        return url;\n      },\n      protocol: parser.protocol,\n      host: parser.host,\n      hostname: parser.hostname,\n      port: parser.port,\n      path: parser.pathname,\n      query: parseQueryString(parser.search),\n      fragment: parser.hash\n    };\n  }\n\n  /**\n   * Parses a query string into key/value pairs\n   *\n   * @param {string} query\n   * @return {object.<string,any>}\n   */\n  function parseQueryString(query, sep) {\n    if (!query || !angular.isString(query)) {\n      return {};\n    }\n\n    // remove leading '?'\n    if (query[0] === '?') {\n      query = query.substr(1);\n    }\n\n    // attempt to auto-detect separator\n    if (!sep) {\n      // auto-detection \"bitmask\"\n      // 0 = none detected -- prefer '&'\n      // 1 = only ';' detected -- use it\n      // 2 = only '&' detected -- use it\n      // 3 = both detected -- prefer '&'\n      var flags = (query.indexOf(';') >= 0 ? 1 : 0) + (query.indexOf('&') >= 0 ? 2 : 0);\n      sep = flags === 1 ? ';' : '&';\n    }\n\n    var parsed = {};\n\n    var kvpairs = query.split(sep);\n    kvpairs.forEach(function (pair) {\n      var ix = pair.indexOf('=');\n      var key = pair;\n      var value = null;\n\n      if (!key) {\n        return;\n      }\n\n      if (ix >= 0) {\n        key = pair.substr(0, ix);\n        value = pair.substr(ix + 1);\n      }\n\n      try {\n        key = decodeURIComponent(key);\n        value = decodeURIComponent(value);\n      } catch (URIError) {\n        return;\n      }\n\n      // TODO: handle key array/map notation\n\n      if (parsed.hasOwnProperty(key)) {\n        // convert repeated keys into an array\n        if (angular.isArray(parsed[key])) {\n          parsed[key].push(value);\n        } else {\n          parsed[key] = [parsed[key], value];\n        }\n      } else {\n        parsed[key] = value;\n      }\n    });\n\n    return parsed;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('authorRefEditor', authorRefEditorDirective);\n\n  /** @ngInject */\n  function authorRefEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/work/components/author-ref-editor/author-ref-editor.html',\n      scope: {\n        ref: '=ngModel'\n      },\n      controller: AuthorRefEditorController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function AuthorRefEditorController($scope, peopleRepo) {\n      var vm = this;\n\n      vm.linkAuthorSearchText = '';\n      vm.authorRoles = [\n        'author',\n        'editor',\n        'translator',\n        'other'\n      ];\n\n      vm.setLinkedAuthor = setLinkedAuthor;\n      vm.getResults = getResults;\n\n      activate();\n\n      function activate() {\n        if ($scope.ref.authorId) {\n          var author = peopleRepo.get($scope.ref.authorId);\n          author.$promise.then(function () {\n            vm.linkAuthorSearchText = author.name.label;\n          })\n        }\n      }\n\n      function setLinkedAuthor(person) {\n        $scope.ref.authorId = person.id;\n      }\n\n      function getResults(query) {\n        var resultSet = peopleRepo.search(query);\n        return resultSet.$promise.then(function () {\n          return resultSet.items;\n        });\n      }\n\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('workEditorItem', workEditorItemDirective);\n\n  /** @ngInject */\n  function workEditorItemDirective($log) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/task/components/work-editor/work-editor-item.html',\n      link: linkFunc,\n      scope: {\n        id: '=id'\n      },\n      controller: WorkEditorItemController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc($scope) {\n      if (!$scope.id) {\n        $log.error('missing required attribute \"id\"');\n      }\n    }\n\n    /** @ngInject */\n    function WorkEditorItemController($scope, worksRepo) {\n      var vm = this;\n\n      vm.loaded = false;\n\n      activate();\n\n      function activate() {\n        if ($scope.id) {\n          vm.work = worksRepo.get($scope.id);\n          vm.work.$promise.then(function () {\n            vm.loaded = true;\n          });\n        }\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('nameEditor', nameEditorDirective);\n\n  /** @ngInject */\n  function nameEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/person/components/name-editor/name-editor.html',\n      scope: {\n        name: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('eventEditor', eventEditorDirective);\n\n  /** @ngInject */\n  function eventEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/person/components/event-editor/event-editor.html',\n      scope: {\n        event: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('summaryEditor', summaryEditorDirective);\n\n  /** @ngInject */\n  function summaryEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/summary-editor/summary-editor.html',\n      scope: {\n        summary: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('SummaryEditDialogController', SummaryEditDialogController);\n\n  /** @ngInject */\n  function SummaryEditDialogController($mdDialog, summary) {\n    var vm = this;\n\n    vm.summary = summary;\n\n    vm.close = close;\n    vm.cancel = cancel;\n\n    function close() {\n      $mdDialog.hide(vm.summary);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .directive('dateEditor', dateEditorDirective);\n\n  /** @ngInject */\n  function dateEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/date-editor/date-editor.html',\n      scope: {\n        date: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('ShowWorkController', ShowWorkController);\n\n  /** @ngInject */\n  function ShowWorkController($state, $stateParams, worksRepo, relationshipsRepo, $mdDialog, $mdToast, $q, $timeout) {\n    var vm = this;\n\n    vm.loading = true;\n    vm.work = null;\n    vm.title = null;\n    vm.relationships = null;\n\n    vm.editBibInfo = editBibInfo;\n    vm.editSummary = editSummary;\n    vm.addEdition = addEdition;\n    vm.deleteEdition = deleteEdition;\n    vm.addCopy = addCopy;\n    vm.editCopy = editCopy;\n    vm.deleteCopy = deleteCopy;\n    vm.openRelationship = openRelationship;\n    vm.addRelationship = addRelationship;\n    vm.deleteRelationship = deleteRelationship;\n\n    activate();\n\n    function activate() {\n      var workId = $stateParams.workId;\n\n      vm.work = worksRepo.get(workId);\n\n      vm.work.$promise.then(function () {\n        vm.bcTitle = worksRepo.getTitle(vm.work.titles, ['short', 'canonical', 'bibliographic']);\n        vm.title = worksRepo.getTitle(vm.work.titles, ['canonical', 'bibliographic', 'short']);\n      });\n\n      var relationshipsPromise = loadRelationships();\n\n      $q.all([vm.work.$promise, relationshipsPromise]).then(function () {\n        vm.loading = false;\n      });\n    }\n\n    function getCurrentUri() {\n      var workId = $stateParams.workId;\n      return 'works/' + workId;\n    }\n\n    function loadRelationships() {\n      vm.relationships = [];\n      var currentUri = getCurrentUri();\n      var relationships = relationshipsRepo.search(currentUri);\n      return relationships.$promise.then(function () {\n        vm.relationships = relationshipsRepo.normalizeRelationships(relationships, currentUri, worksRepo);\n      });\n    }\n\n    function editBibInfo($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/work-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          work: angular.copy(vm.work)\n        },\n        controller: 'WorkEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedWork) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        angular.extend(vm.work, updatedWork);\n\n        worksRepo.saveWork(vm.work).then(showSavedToast);\n      });\n    }\n\n    function editSummary($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/components/summary-edit-dialog/summary-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation (even if it is just a string)\n          summary: angular.copy(vm.work.summary)\n        },\n        controller: 'SummaryEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedSummary) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        vm.work.summary = updatedSummary;\n\n        worksRepo.saveWork(vm.work).then(showSavedToast);\n      });\n    }\n\n    function addEdition($event) {\n      var prompt = $mdDialog.prompt()\n        .targetEvent($event)\n        .title('Create Edition')\n        .textContent('Please provide a name for the new edition.')\n        .placeholder('edition name')\n        .ok('Create')\n        .cancel('Cancel');\n\n      var dialogPromise = $mdDialog.show(prompt);\n\n      var savePromise = dialogPromise.then(function (editionName) {\n        var edition = worksRepo.createEdition();\n        edition.editionName = editionName;\n        edition.titles = angular.copy(vm.work.titles);\n        edition.authors = angular.copy(vm.work.authors);\n        edition.otherAuthors = angular.copy(vm.work.otherAuthors);\n\n        vm.work.editions.push(edition);\n\n        // resolve to the created edition when save is successful\n        return worksRepo.saveEdition(vm.work.id, edition);\n      });\n\n      savePromise.then(showSavedToast);\n\n      savePromise.then(function (edition) {\n        $state.go('editor.edition', { workId: vm.work.id, editionId: edition.id });\n      });\n    }\n\n    function deleteEdition(edition, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this edition?')\n        .ok('Yes')\n        .cancel('No');\n\n      $mdDialog.show(confirm)\n        .then(function () {\n          var ix = vm.work.editions.indexOf(edition);\n          if (ix >= 0) {\n            vm.work.editions.splice(ix, 1);\n            worksRepo.saveWork(vm.work).then(showSavedToast);\n          }\n        });\n    }\n\n    function addCopy($event) {\n      var copy = {};\n      editCopy(copy, $event).then(function () {\n        vm.work.copies.push(copy);\n      });\n    }\n\n    function editCopy(copy, $event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/copy-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          copy: angular.copy(copy)\n        },\n        controller: 'CopyEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedCopy) {\n        // copy updates back to original only after dialog is positively dismised (i.e. not canceled)\n        angular.extend(copy, updatedCopy);\n\n        worksRepo.saveWork(vm.work).then(showSavedToast);\n      });\n\n      return dialogPromise;\n    }\n\n    function deleteCopy(copy, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this copy?')\n        .ok('Yes')\n        .cancel('No');\n\n      $mdDialog.show(confirm)\n        .then(function () {\n          var ix = vm.work.copies.indexOf(copy);\n          if (ix >= 0) {\n            vm.work.copies.splice(ix, 1);\n            worksRepo.saveWork(vm.work).then(showSavedToast);\n          }\n        });\n    }\n\n    function openRelationship(relationship) {\n      // HACK just working with first entity\n      var entity = relationship.entities[0];\n      $state.go('editor.' + entity.type, entity.refParams);\n    }\n\n    function addRelationship($event) {\n      var relationship = relationshipsRepo.createRelationship();\n\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/relationship-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          relationship: angular.copy(relationship),\n          currentUri: getCurrentUri()\n        },\n        controller: 'RelationshipEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      var savePromise = dialogPromise.then(function (updatedRelationship) {\n        // copy updates back to original only after dialog is positively dismised (i.e. not canceled)\n        angular.extend(relationship, updatedRelationship);\n\n        return relationshipsRepo.save(relationship);\n      });\n\n      savePromise.then(showSavedToast);\n\n      savePromise.then(function () {\n        // HACK give relationship a chance to save on the server\n        $timeout(loadRelationships, 1000);\n      });\n\n    }\n\n    function deleteRelationship(relationship, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this relationship?')\n        .ok('Yes')\n        .cancel('No');\n\n      var confirmPromise = $mdDialog.show(confirm);\n      var deletePromise = confirmPromise.then(function () {\n        return relationshipsRepo.delete(relationship.id);\n      });\n\n      deletePromise.then(showSavedToast);\n\n      deletePromise.then(function () {\n        // HACK give relationship a chance to be deleted from the server\n        $timeout(loadRelationships, 1000);\n      });\n    }\n\n    function showSavedToast() {\n      var toast = $mdToast.simple()\n        .textContent('Saved')\n        .position('bottom right');\n\n      return $mdToast.show(toast);\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('WorkEditDialogController', WorkEditDialogController);\n\n  /** @ngInject */\n  function WorkEditDialogController($mdDialog, work) {\n    var vm = this;\n\n    vm.work = work;\n\n    vm.close = close;\n    vm.cancel = cancel;\n    vm.addAuthor = addAuthor;\n    vm.deleteAuthor = deleteAuthor;\n    vm.addTitle = addTitle;\n    vm.deleteTitle = deleteTitle;\n\n    function close() {\n      $mdDialog.hide(vm.work);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n\n    function addAuthor(field) {\n      // TODO delegate creation to worksRepo\n      var authorRef = {};\n      vm.work[field].push(authorRef);\n    }\n\n    function deleteAuthor(field, authorRef) {\n      var ix = vm.work[field].indexOf(authorRef);\n      if (ix >= 0) {\n        vm.work[field].splice(ix, 1);\n      }\n    }\n\n    function addTitle() {\n      // TODO delegate creation to worksRepo\n      var title = {};\n      vm.work.titles.push(title);\n    }\n\n    function deleteTitle(title) {\n      var ix = vm.work.titles.indexOf(title);\n      if (ix >= 0) {\n        vm.work.titles.splice(ix, 1);\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('ShowVolumeController', ShowVolumeController);\n\n  /** @ngInject */\n  function ShowVolumeController($state, $stateParams, worksRepo, relationshipsRepo, _, $mdDialog, $mdToast, $q, $timeout) {\n    var vm = this;\n\n    vm.loading = true;\n    vm.work = null;\n    vm.workTitle = null;\n    vm.edition = null;\n    vm.volume = null;\n    vm.title = null;\n\n    vm.editBibInfo = editBibInfo;\n    vm.editSummary = editSummary;\n    vm.addCopy = addCopy;\n    vm.editCopy = editCopy;\n    vm.deleteCopy = deleteCopy;\n    vm.openRelationship = openRelationship;\n    vm.addRelationship = addRelationship;\n    vm.deleteRelationship = deleteRelationship;\n\n    activate();\n\n    function activate() {\n      var workId = $stateParams.workId\n      var editionId = $stateParams.editionId;\n      var volumeId = $stateParams.volumeId;\n\n      vm.work = worksRepo.getWork(workId);\n      vm.edition = worksRepo.getEdition(workId, editionId);\n      vm.volume = worksRepo.getVolume(workId, editionId, volumeId);\n\n      vm.work.$promise.then(function () {\n        vm.workTitle = worksRepo.getTitle(vm.work.titles, ['short', 'canonical', 'bibliographic']);\n      });\n\n      vm.volume.$promise.then(function () {\n        vm.title = worksRepo.getTitle(vm.volume.titles, ['canonical', 'bibliographic', 'short']);\n      });\n\n      var relationshipsPromise = loadRelationships();\n\n      $q.all([vm.work.$promise, vm.edition.$promise, vm.volume.$promise, relationshipsPromise]).then(function () {\n        vm.loading = false;\n      });\n    }\n\n    function getCurrentUri() {\n      var workId = $stateParams.workId;\n      var editionId = $stateParams.editionId;\n      var volumeId = $stateParams.volumeId;\n      return 'works/' + workId + '/editions/' + editionId + '/volumes/' + volumeId;\n    }\n\n    function loadRelationships() {\n\n      vm.relationships = [];\n      var currentUri = getCurrentUri();\n      var relationships = relationshipsRepo.search(currentUri);\n      relationships.$promise.then(function () {\n        vm.relationships = relationshipsRepo.normalizeRelationships(relationships, currentUri, worksRepo);\n      });\n    }\n\n    function editBibInfo($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/volume-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          volume: angular.copy(vm.volume)\n        },\n        controller: 'VolumeEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedVolume) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        angular.extend(vm.volume, updatedVolume);\n\n        worksRepo.saveVolume(vm.work.id, vm.edition.id, vm.volume).then(showSavedToast);\n      });\n\n      return dialogPromise;\n    }\n\n    function editSummary($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/components/summary-edit-dialog/summary-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation (even if it is just a string)\n          summary: angular.copy(vm.volume.summary)\n        },\n        controller: 'SummaryEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedSummary) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        vm.volume.summary = updatedSummary;\n\n        worksRepo.saveVolume(vm.work.id, vm.edition.id, vm.volume).then(showSavedToast);\n      });\n    }\n\n    function addCopy($event) {\n      var copy = {};\n      editCopy(copy, $event).then(function () {\n        vm.volume.copies.push(copy);\n      });\n    }\n\n    function editCopy(copy, $event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/copy-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          copy: angular.copy(copy)\n        },\n        controller: 'CopyEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedCopy) {\n        // copy updates back to original only after dialog is positively dismised (i.e. not canceled)\n        angular.extend(copy, updatedCopy);\n\n        worksRepo.saveVolume(vm.work.id, vm.edition.id, vm.volume).then(showSavedToast);\n      });\n\n      return dialogPromise;\n    }\n\n    function deleteCopy(copy, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this copy?')\n        .ok('Yes')\n        .cancel('No');\n\n      $mdDialog.show(confirm)\n        .then(function () {\n          var ix = vm.volume.copies.indexOf(copy);\n          if (ix >= 0) {\n            vm.volume.copies.splice(ix, 1);\n            worksRepo.saveVolume(vm.work.id, vm.edition.id, vm.volume).then(showSavedToast);\n          }\n        });\n    }\n\n    function openRelationship(relationship) {\n      // HACK just working with first entity\n      var entity = relationship.entities[0];\n      $state.go('editor.' + entity.type, entity.refParams);\n    }\n\n    function addRelationship($event) {\n      var relationship = relationshipsRepo.createRelationship();\n\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/relationship-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          relationship: angular.copy(relationship),\n          currentUri: getCurrentUri()\n        },\n        controller: 'RelationshipEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      var savePromise = dialogPromise.then(function (updatedRelationship) {\n        // copy updates back to original only after dialog is positively dismised (i.e. not canceled)\n        angular.extend(relationship, updatedRelationship);\n\n        return relationshipsRepo.save(relationship);\n      });\n\n      savePromise.then(showSavedToast);\n\n      savePromise.then(function () {\n        // HACK give relationships a chance to save on the server\n        $timeout(loadRelationships, 1000);\n      });\n    }\n\n    function deleteRelationship(relationship, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this relationship?')\n        .ok('Yes')\n        .cancel('No');\n\n      var confirmPromise = $mdDialog.show(confirm);\n      var deletePromise = confirmPromise.then(function () {\n        return relationshipsRepo.delete(relationship.id);\n      });\n\n      deletePromise.then(showSavedToast);\n\n      deletePromise.then(function () {\n        // HACK give relationships a chance to save on the server\n        $timeout(loadRelationships, 1000);\n      });\n    }\n\n    function showSavedToast() {\n      var toast = $mdToast.simple()\n        .textContent('Saved')\n        .position('bottom right');\n\n      return $mdToast.show(toast);\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('VolumeEditDialogController', VolumeEditDialogController);\n\n  /** @ngInject */\n  function VolumeEditDialogController($mdDialog, volume) {\n    var vm = this;\n\n    vm.volume = volume;\n\n    vm.close = close;\n    vm.cancel = cancel;\n    vm.addAuthor = addAuthor;\n    vm.deleteAuthor = deleteAuthor;\n    vm.addTitle = addTitle;\n    vm.deleteTitle = deleteTitle;\n\n    function close() {\n      $mdDialog.hide(vm.volume);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n\n    function addAuthor(field) {\n      // TODO delegate creation to worksRepo\n      var authorRef = {};\n      vm.volume[field].push(authorRef);\n    }\n\n    function deleteAuthor(field, authorRef) {\n      var ix = vm.volume[field].indexOf(authorRef);\n      if (ix >= 0) {\n        vm.volume[field].splice(ix, 1);\n      }\n    }\n\n    function addTitle() {\n      // TODO delegate creation to worksRepo\n      var title = {};\n      vm.volume.titles.push(title);\n    }\n\n    function deleteTitle(title) {\n      var ix = vm.volume.titles.indexOf(title);\n      if (ix >= 0) {\n        vm.volume.titles.splice(ix, 1);\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('RelationshipEditDialogController', RelationshipEditDialogController);\n\n  /** @ngInject */\n  function RelationshipEditDialogController($mdDialog, worksRepo, relationshipsRepo, currentUri, relationship) {\n    var vm = this;\n\n    vm.relationship = relationship;\n    vm.types = [];\n    vm.selectedType = null;\n    vm.targets = [];\n    vm.selectedTarget = null;\n    vm.searchText = '';\n    vm.isReverse = false;\n\n    vm.getResults = getResults;\n    vm.selectWork = selectWork;\n    vm.setType = setType;\n    vm.setTarget = setTarget;\n    vm.close = close;\n    vm.cancel = cancel;\n\n    activate();\n\n    function activate() {\n      vm.types = getTypes();\n\n      vm.target = relationshipsRepo.createAnchor();\n      vm.relationship.targetEntities = [vm.target];\n\n      var self = relationshipsRepo.createAnchor();\n      self.entryUris = [currentUri];\n      vm.relationship.relatedEntities = [self];\n\n      vm.relationship.descriptionMimeType = 'text/html';\n    }\n\n    function getTypes() {\n      var rawTypes = relationshipsRepo.getTypes();\n      var types = [];\n\n      Object.defineProperty(types, '$promise', {\n        value: rawTypes.$promise\n      });\n\n      rawTypes.$promise.then(function () {\n        angular.forEach(rawTypes, function (type) {\n          types.push({\n            id: type.identifier,\n            label: type.title,\n            reverse: false\n          });\n\n          if (type.isDirected) {\n            types.push({\n              id: type.identifier,\n              label: type.reverseTitle,\n              reverse: true\n            });\n          }\n        });\n      });\n\n      return types;\n    }\n\n    function getResults(query) {\n      var results = worksRepo.search(query);\n      return results.$promise.then(function () {\n        return results.items;\n      });\n    }\n\n    function setType(type) {\n      vm.relationship.typeId = type.id;\n      if (vm.isReverse && !type.reverse || !vm.isReverse && type.reverse) {\n        var swap = vm.relationship.relatedEntities;\n        vm.relationship.relatedEntities = vm.relationship.targetEntities;\n        vm.relationship.targetEntities = swap;\n      }\n      vm.isReverse = type.reverse;\n    }\n\n    function selectWork(workProxy) {\n      vm.targets = [];\n\n      if (!workProxy) {\n        return;\n      }\n\n      var work = worksRepo.getWork(workProxy.id);\n\n      work.$promise.then(function () {\n        var workUri = 'works/' + work.id;\n        var workTitle = worksRepo.getTitle(work.titles, ['short', 'canonical', 'bibliographic']);\n\n        vm.targets.push({\n          uri: workUri,\n          label: workTitle.title + (workTitle.subtitle ? ': ' + workTitle.subtitle : '')\n        });\n\n        work.editions.forEach(function (edition) {\n          var editionUri = workUri + '/editions/' + edition.id;\n          var editionTitle = worksRepo.getTitle(edition.titles, ['short', 'canonical', 'bibliographic']);\n\n          vm.targets.push({\n            uri: editionUri,\n            label: editionTitle.title + (editionTitle.subtitle ? ': ' + editionTitle.subtitle : '') + '. ' + edition.editionName\n          });\n\n          edition.volumes.forEach(function (volume) {\n            var volumeUri = editionUri + '/volumes/' + volume.id;\n            var volumeTitle = worksRepo.getTitle(volume.titles, ['short', 'canonical', 'bibliographic']);\n\n            vm.targets.push({\n              uri: volumeUri,\n              label: volumeTitle.title + (volumeTitle.subtitle ? ': ' + volumeTitle.subtitle : '') + '. ' + edition.editionName + '. Volume ' + volume.volumeNumber\n            });\n          });\n        });\n\n        if (vm.targets.length === 1) {\n          vm.selectedTarget = vm.targets[0];\n          setTarget(vm.selectedTarget);\n        }\n      });\n    }\n\n    function setTarget(target) {\n      vm.target.entryUris = target && target.uri ? [target.uri] : [];\n    }\n\n    function close() {\n      $mdDialog.hide(vm.relationship);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('ShowEditionController', ShowEditionController);\n\n  /** @ngInject */\n  function ShowEditionController($state, $stateParams, worksRepo, relationshipsRepo, _, $mdDialog, $mdToast, $q, $timeout) {\n    var vm = this;\n\n    vm.loading = true;\n    vm.work = null;\n    vm.workTitle = null;\n    vm.edition = null;\n    vm.title = null;\n\n    vm.editBibInfo = editBibInfo;\n    vm.editSummary = editSummary;\n    vm.addVolume = addVolume;\n    vm.deleteVolume = deleteVolume;\n    vm.addCopy = addCopy;\n    vm.editCopy = editCopy;\n    vm.deleteCopy = deleteCopy;\n    vm.openRelationship = openRelationship;\n    vm.addRelationship = addRelationship;\n    vm.deleteRelationship = deleteRelationship;\n\n    activate();\n\n    function activate() {\n      var workId = $stateParams.workId;\n      var editionId = $stateParams.editionId;\n\n      vm.work = worksRepo.getWork(workId);\n      vm.edition = worksRepo.getEdition(workId, editionId);\n\n      vm.work.$promise.then(function () {\n        vm.workTitle = worksRepo.getTitle(vm.work.titles, ['short', 'canonical', 'bibliographic']);\n      });\n\n      vm.edition.$promise.then(function () {\n        vm.title = worksRepo.getTitle(vm.edition.titles, ['canonical', 'bibliographic', 'short']);\n      });\n\n      var relationshipsPromise = loadRelationships();\n\n      $q.all([vm.work.$promise, vm.edition.$promise, relationshipsPromise]).then(function (){\n        vm.loading = false;\n      });\n    }\n\n    function getCurrentUri() {\n      var workId = $stateParams.workId;\n      var editionId = $stateParams.editionId;\n\n      return 'works/' + workId + '/editions/' + editionId;\n    }\n\n    function loadRelationships() {\n\n      vm.relationships = [];\n      var currentUri = getCurrentUri();\n      var relationships = relationshipsRepo.search(currentUri);\n      relationships.$promise.then(function () {\n        vm.relationships = relationshipsRepo.normalizeRelationships(relationships, currentUri, worksRepo);\n      });\n    }\n\n    function editBibInfo($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/edition-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          edition: angular.copy(vm.edition)\n        },\n        controller: 'EditionEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedEdition) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        angular.extend(vm.edition, updatedEdition);\n\n        worksRepo.saveEdition(vm.work.id, vm.edition).then(showSavedToast);\n      });\n\n      return dialogPromise;\n    }\n\n    function editSummary($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/components/summary-edit-dialog/summary-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation (even if it is just a string)\n          summary: angular.copy(vm.edition.summary)\n        },\n        controller: 'SummaryEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedSummary) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        vm.edition.summary = updatedSummary;\n\n        worksRepo.saveEdition(vm.work.id, vm.edition).then(showSavedToast);\n      });\n    }\n\n    function addVolume($event) {\n      var prompt = $mdDialog.prompt()\n        .targetEvent($event)\n        .title('Create Volume')\n        .textContent('Please provide a number for the new volume.')\n        .placeholder('volume number')\n        .ok('Create')\n        .cancel('Cancel');\n\n      var dialogPromise = $mdDialog.show(prompt);\n\n      var savePromise = dialogPromise.then(function (volumeNumber) {\n        var volume = worksRepo.createVolume();\n        volume.volumeNumber = volumeNumber;\n        volume.titles = angular.copy(vm.edition.titles);\n        volume.authors = angular.copy(vm.edition.authors);\n        volume.otherAuthors = angular.copy(vm.edition.otherAuthors);\n        volume.publicationInfo = angular.copy(vm.edition.publicationInfo);\n\n        vm.edition.volumes.push(volume);\n\n        return worksRepo.saveVolume(vm.work.id, vm.edition.id, volume);\n      });\n\n      savePromise.then(showSavedToast);\n\n      savePromise.then(function (volume) {\n        $state.go('editor.volume', { workId: vm.work.id, editionId: vm.edition.id, volumeId: volume.id });\n      });\n    }\n\n    function deleteVolume(volume, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this volume?')\n        .ok('Yes')\n        .cancel('No');\n\n      $mdDialog.show(confirm)\n        .then(function () {\n          var ix = vm.edition.volumes.indexOf(volume);\n          if (ix >= 0) {\n            vm.edition.volumes.splice(ix, 1);\n            worksRepo.saveEdition(vm.work.id, vm.edition).then(showSavedToast);\n          }\n        });\n    }\n\n    function addCopy($event) {\n      var copy = {};\n      editCopy(copy, $event).then(function () {\n        vm.edition.copies.push(copy);\n      });\n    }\n\n    function editCopy(copy, $event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/copy-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          copy: angular.copy(copy)\n        },\n        controller: 'CopyEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedCopy) {\n        // copy updates back to original only after dialog is positively dismised (i.e. not canceled)\n        angular.extend(copy, updatedCopy);\n\n        worksRepo.saveEdition(vm.work.id, vm.edition).then(showSavedToast);\n      });\n\n      return dialogPromise;\n    }\n\n    function deleteCopy(copy, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this copy?')\n        .ok('Yes')\n        .cancel('No');\n\n      $mdDialog.show(confirm)\n        .then(function () {\n          var ix = vm.edition.copies.indexOf(copy);\n          if (ix >= 0) {\n            vm.edition.copies.splice(ix, 1);\n            worksRepo.saveEdition(vm.work.id, vm.edition).then(showSavedToast);\n          }\n        });\n    }\n\n    function openRelationship(relationship) {\n      // HACK just working with first entity\n      var entity = relationship.entities[0];\n      $state.go('editor.' + entity.type, entity.refParams);\n    }\n\n    function addRelationship($event) {\n      var relationship = relationshipsRepo.createRelationship();\n\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/relationship-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          relationship: angular.copy(relationship),\n          currentUri: getCurrentUri()\n        },\n        controller: 'RelationshipEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      var savePromise = dialogPromise.then(function (updatedRelationship) {\n        // copy updates back to original only after dialog is positively dismised (i.e. not canceled)\n        angular.extend(relationship, updatedRelationship);\n\n        return relationshipsRepo.save(relationship);\n      });\n\n      savePromise.then(showSavedToast);\n\n      savePromise.then(function () {\n        // HACK give relationships a chance to save on the server\n        $timeout(loadRelationships, 1000);\n      });\n    }\n\n    function deleteRelationship(relationship, $event) {\n      var confirm = $mdDialog.confirm()\n        .targetEvent($event)\n        .title('Confirm Deletion')\n        .textContent('Are you sure you want to delete this relationship?')\n        .ok('Yes')\n        .cancel('No');\n\n      var confirmPromise = $mdDialog.show(confirm);\n      var deletePromise = confirmPromise.then(function () {\n        return relationshipsRepo.delete(relationship.id);\n      });\n\n      deletePromise.then(showSavedToast);\n\n      deletePromise.then(function () {\n        // HACK give relationships a chance to save on the server\n        $timeout(loadRelationships, 1000);\n      });\n    }\n\n    function showSavedToast() {\n      var toast = $mdToast.simple()\n        .textContent('Saved')\n        .position('bottom right');\n\n      return $mdToast.show(toast);\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('EditionEditDialogController', EditionEditDialogController);\n\n  /** @ngInject */\n  function EditionEditDialogController($mdDialog, edition) {\n    var vm = this;\n\n    vm.edition = edition;\n\n    vm.close = close;\n    vm.cancel = cancel;\n    vm.addAuthor = addAuthor;\n    vm.deleteAuthor = deleteAuthor;\n    vm.addTitle = addTitle;\n    vm.deleteTitle = deleteTitle;\n\n    function close() {\n      $mdDialog.hide(vm.edition);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n\n    function addAuthor(field) {\n      // TODO delegate creation to worksRepo\n      var authorRef = {};\n      vm.edition[field].push(authorRef);\n    }\n\n    function deleteAuthor(field, authorRef) {\n      var ix = vm.edition[field].indexOf(authorRef);\n      if (ix >= 0) {\n        vm.edition[field].splice(ix, 1);\n      }\n    }\n\n    function addTitle() {\n      // TODO delegate creation to worksRepo\n      var title = {};\n      vm.edition.titles.push(title);\n    }\n\n    function deleteTitle(title) {\n      var ix = vm.edition.titles.indexOf(title);\n      if (ix >= 0) {\n        vm.edition.titles.splice(ix, 1);\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('CopyEditDialogController', CopyEditDialogController);\n\n  /** @ngInject */\n  function CopyEditDialogController($mdDialog, copy) {\n    var vm = this;\n\n    vm.copy = copy;\n\n    vm.close = close;\n    vm.cancel = cancel;\n\n    function close() {\n      $mdDialog.hide(vm.copy);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcWorks', [\n      'ngResource'\n    ]);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcWorks')\n    .provider('worksRepo', worksRepoProvider);\n\n  /**\n   * This functionality is already being implemented as a standalone trc-biblio module. The code is\n   * used here as an interim until the Bower build/dependency workflow has been finalized.\n   *\n   * @return {angular.provider}\n   */\n  function worksRepoProvider() {\n    var provider = {};\n    provider.url = '/api/works';\n    provider.$get = worksRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function worksRepoFactory($resource, _) {\n      var restResource = $resource(provider.url + '/:workId', { workId: '@id' }, {\n        update: {\n          method: 'PUT'\n        }\n      });\n\n      var editionResource = $resource(provider.url + '/:workId/editions/:editionId', { editionId: '@id' }, {\n        update: {\n          method: 'PUT'\n        }\n      });\n\n      var volumeResource = $resource(provider.url + '/:workId/editions/:editionId/volumes/:volumeId', { volumeId: '@id' }, {\n        update: {\n          method: 'PUT'\n        }\n      });\n\n      var repo = {};\n      repo.getAll = findAll;\n      repo.search = search;\n      repo.get = getWork;\n      repo.getWork = getWork;\n      repo.getEdition = getEdition;\n      repo.getVolume = getVolume;\n      repo.create = createWork;\n      repo.createWork = createWork;\n      repo.createEdition = createEdition;\n      repo.createVolume = createVolume;\n      repo.save = save;\n      repo.saveWork = saveWork;\n      repo.saveEdition = saveEdition;\n      repo.saveVolume = saveVolume;\n      repo.delete = deleteWork;\n      repo.getTitle = getTitleByTypePreference;\n      return repo;\n\n      /**\n       * Retrieves a listing of all works\n       *\n       * @return {WorkProxy[]}\n       */\n      function findAll() {\n        return search('');\n      }\n\n      /**\n       * Search for works by query\n       *\n       * @return {SearchResultSet}\n       */\n      function search(query) {\n        return restResource.get({ q: query, max: 50 });\n      }\n\n      /**\n       * Retrieves a work object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promis is available on Work.$promise.\n       *\n       * @param {string} workId\n       * @return {Work}\n       */\n      function getWork(workId) {\n        if (angular.isUndefined(workId)) {\n          throw new TypeError('Invalid ID provided to getWork');\n        }\n\n        var work = restResource.get({ workId: workId });\n\n        work.$promise.then(adaptWork);\n\n        return work;\n      }\n\n      /**\n       * Retrieves an edition object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promis is available on Edition.$promise.\n       *\n       * @param {string} workId\n       * @param {string} editionId\n       * @return {Edition}\n       */\n      function getEdition(workId, editionId) {\n        if (angular.isUndefined(workId) || angular.isUndefined(editionId)) {\n          throw new TypeError('Invalid IDs provided to getEdition');\n        }\n\n        var edition = editionResource.get({ workId: workId, editionId: editionId });\n\n        edition.$promise.then(adaptEdition);\n\n        return edition;\n      }\n\n      /**\n       * Retrieves a volume object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promis is available on Volume.$promise.\n       *\n       * @param {string} workId\n       * @param {string} editionId\n       * @param {string} volumeId\n       * @return {Volume}\n       */\n      function getVolume(workId, editionId, volumeId) {\n        if (angular.isUndefined(workId) || angular.isUndefined(editionId) || angular.isUndefined(volumeId)) {\n          throw new TypeError('Invalid IDs provided to getVolume');\n        }\n\n        var volume = volumeResource.get({ workId: workId, editionId: editionId, volumeId: volumeId });\n\n        volume.$promise.then(adaptVolume);\n\n        return volume;\n      }\n\n      /**\n       * Creates a new work instance\n       *\n       * @return {Work}\n       */\n      function createWork() {\n        var work = new restResource();\n        adaptWork(work);\n        work.titles.push({});\n        work.authors.push({});\n        return work;\n      }\n\n      /**\n       * Creates a new edition instance\n       *\n       * @return {Edition}\n       */\n      function createEdition() {\n        var edition = new editionResource();\n        return adaptEdition(edition);\n      }\n\n      /**\n       * Creates a new volume instance\n       *\n       * @return {Volume}\n       */\n      function createVolume() {\n        var volume = new volumeResource();\n        return adaptVolume(volume);\n      }\n\n      /**\n       * Dispatch method for saving works, editions, and volumes\n       *\n       * @deprecated use saveWork, saveEdition, or saveVolume directly\n       * @return {Promise}\n       */\n      function save() {\n        switch (arguments.length) {\n          case 1: return saveWork.apply(null, arguments);\n          case 2: return saveEdition.apply(null, arguments);\n          case 3: return saveVolume.apply(null, arguments);\n        }\n        throw new TypeError('Unexpected arguments to worksRepo#save');\n      }\n\n      /**\n       * Saves a work instance back to the server\n       *\n       * @param {Work} work\n       * @return {Promise.<Work>}\n       */\n      function saveWork(work) {\n        if (!(work instanceof restResource)) {\n          throw new Error('work was not created by this repo');\n        }\n\n        // ngResource automatically updates the model to reflect any server changes (e.g. setting IDs for the work/edtions/volumes/copies).\n        return work.id\n          ? work.$update()\n          : work.$save();\n      }\n\n      /**\n       * Saves an edition instance back to the server\n       *\n       * @param  {string} workId\n       * @param  {Edition} edition\n       * @return {Promise.<Edition>}\n       */\n      function saveEdition(workId, edition) {\n        if (!workId) {\n          throw new Error('no work id provided');\n        }\n\n        if (!(edition instanceof editionResource)) {\n          throw new Error('edition was not created by this repo');\n        }\n\n        return edition.id\n          ? edition.$update({ workId: workId })\n          : edition.$save({ workId: workId });\n      }\n\n      /**\n       * Saves a volume instance back to the server\n       *\n       * @param  {string} workId\n       * @param  {string} editionId\n       * @param  {Volume} volume\n       * @return {Promise.<Volume>}\n       */\n      function saveVolume(workId, editionId, volume) {\n        if (!workId) {\n          throw new Error('no work id provided');\n        }\n\n        if (!editionId) {\n          throw new Error('no edition id provided');\n        }\n\n        if (!(volume instanceof volumeResource)) {\n          throw new Error('volume was not created by this repo');\n        }\n\n        return volume.id\n          ? volume.$update({ workId: workId, editionId: editionId })\n          : volume.$save({ workId: workId, editionId: editionId });\n      }\n\n      /**\n       * Deletes a work instance from the server\n       *\n       * @param  {string} id\n       */\n      function deleteWork(workId) {\n        var dataItem = restResource.delete({ id: workId });\n        return dataItem.$promise;\n      }\n\n      /**\n       * Ensure that aggregate fields common to all work/edition/volume entities exist and are formatted correctly\n       *\n       * @param  {Work|Edition|Volume} entity\n       * @return {Work|Edition|Volume}\n       */\n      function adaptCommon(entity) {\n        if (!entity.titles) {\n          entity.titles = [];\n        } else {\n          entity.titles.forEach(function (title) {\n            title.type = title.type.toLowerCase();\n          });\n        }\n\n        if (!entity.authors) {\n          entity.authors = [];\n        } else {\n          entity.authors.forEach(function (author) {\n            author.role = author.role.toLowerCase();\n          });\n        }\n\n        if (!entity.otherAuthors) {\n          entity.otherAuthors = [];\n        } else {\n          entity.otherAuthors.forEach(function (author) {\n            author.role = author.role.toLowerCase();\n          });\n        }\n\n        if (!entity.copies) {\n          entity.copies = [];\n        }\n\n        return entity;\n      }\n\n      /**\n       * Ensure that work aggregate fields exist and are formatted correctly\n       *\n       * @param  {Work} work\n       * @return {Work}\n       */\n      function adaptWork(work) {\n        adaptCommon(work);\n\n        if (!work.editions) {\n          work.editions = [];\n        } else {\n          work.editions.forEach(adaptEdition);\n        }\n\n        return work;\n      }\n\n      /**\n       * Ensure that edition aggregate fields exist and are formatted correctly\n       *\n       * @param  {Edition} edition\n       * @return {Edition}\n       */\n      function adaptEdition(edition) {\n        adaptCommon(edition);\n\n        if (!edition.volumes) {\n          edition.volumes = [];\n        } else {\n          edition.volumes.forEach(adaptVolume);\n        }\n\n        return edition;\n      }\n\n      /**\n       * Ensure that volume aggregate fields exist and are formatted correctly\n       *\n       * @param  {Volume} volume\n       * @return {Volume}\n       */\n      function adaptVolume(volume) {\n        adaptCommon(volume);\n\n        return volume;\n      }\n\n      /**\n       * Retrieves the first available title of the given type or falsey if no title can be found.\n       * If multiple types are given, returns the title corresponding to the first type for which a title is found.\n       *\n       * @param  {Title[]}         titles\n       * @param  {string|string[]} types\n       * @return {Title}\n       */\n      function getTitleByTypePreference(titles, types) {\n        if (!angular.isArray(types)) {\n          types = [types];\n        }\n\n        return types.reduce(function (found, type) {\n          return found || _.find(titles, { type: type });\n        }, null);\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcTasks', [\n      'ngResource'\n    ]);\n\n})();\n\n/**\n * @typedef {object} Workflow\n * @property {string} id\n * @property {string} label\n * @property {string} description\n * @property {object.<string, WorkflowStage>} stages\n * @property {string} status\n */\n\n/**\n * @typedef {object} WorkflowStage\n * @property {string} id\n * @property {string} label\n * @property {string} description\n * @property {boolean} isFinal\n * @property {WorkflowStageTransition[]} transitions\n */\n\n/**\n * @typedef {object} WorkflowStageTransition\n * @property {string} sourceStage\n * @property {string} targetStage\n * @property {string} label\n */\n\n/**\n * @typedef {object} Worklist\n * @property {string} groupId\n * @property {string} label\n * @property {integer} itemCount\n * @property {integer} start\n * @property {integer} max\n * @property {WorkItem[]} items\n */\n\n/**\n * @typedef {object} WorkItem\n * @property {string} itemId\n * @property {string} type\n * @property {string} entityId\n * @property {string} label\n * @property {object.<string,string>} properties\n * @property {string} stage\n * @property {string} task\n */\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcTasks')\n    .provider('tasksRepo', tasksRepoProvider);\n\n  /**\n   * @return {angular.provider}\n   */\n  function tasksRepoProvider() {\n    var provider = {};\n    provider.url = '/api/tasks';\n    provider.$get = tasksRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function tasksRepoFactory($resource) {\n      var workflowResource = $resource(provider.url + '/:taskId/workflow', { taskId: 'copies' });\n      var itemResource = $resource(provider.url + '/:taskId/items/:itemId', { taskId: 'copies', itemId: '@itemId' });\n\n      var repo = {};\n      repo.get = getTask;\n      repo.getItems = getItems;\n      repo.transition = transition;\n      return repo;\n\n      /**\n       * Retrieves a listing of all tasks\n       *\n       * @param  {string} [taskId=copies]\n       * @return {GroupedTaskList}\n       */\n      function getTask(taskId) {\n        taskId = taskId || 'copies';\n\n        var workflow = workflowResource.get({ taskId: taskId });\n\n        var task = {\n          $promise: workflow.$promise.then(function () {\n            return task;\n          }),\n          workflow: workflow,\n          getItems: function (stageId, options) {\n            return getItems(taskId, stageId, options);\n          }\n        };\n\n        return task;\n      }\n\n      /**\n       * Gets items from the task endpoint for a given stage\n       *\n       * @param  {string}  [taskId=copies]  Task ID\n       * @param  {string}  stageId          Workflow stage for which to get items\n       * @param  {object}  options\n       * @param  {integer} [options.start]  Starting index\n       * @param  {integer} [options.max]    Maximum number of items to fetch per page\n       * @return {Worklist}\n       */\n      function getItems(taskId, stageId, options) {\n        options = options || {};\n        return itemResource.get({\n          taskId: taskId,\n          stage: stageId,\n          start: options.start,\n          max: options.max\n        });\n      }\n\n      /**\n       * Transition an item from its current stage to a target stage\n       *\n       * @param  {WorkItem}                item   Work item instance\n       * @param  {WorkflowStageTransition} transition Target workflow stage\n       * @return {WorkItem}                       Updated work item instance\n       */\n      function transition(item, transition) {\n        if (item.stage !== transition.sourceStage) {\n          throw new Error('Transition (' + transition.sourceStage + ' -> ' + transition.targetStage + ') is not valid for item currently in stage ' + item.stage);\n        }\n\n        var result = itemResource.save({\n          itemId: item.itemId\n        }, {\n          stage: transition.targetStage,\n          // NOTE comments are not saved yet\n          comments: null\n        });\n\n        // propagate updates to the original item\n        result.$promise.then(function (resp) {\n          angular.extend(item, resp);\n        });\n\n        return result;\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcReln', [\n      'ngResource'\n    ]);\n\n})();\n\n// NOTE: this entire API model *WILL* eventually change\n\n/**\n * @typedef Relationship\n * @type {object}\n * @property {string}     id                  - A unique identifier for this relationship\n * @property {string}     typeId              - The ID of the RelationshipType of this relationship\n * @property {string}     description         - A detailed description of this relationship\n * @property {string}     descriptionMimeType - MIME type string of the description\n * @property {Provenance} provenance          - Metadata about the relationship record\n * @property {Anchor[]}   relatedEntities     - A set of \"source\" anchors\n * @property {Anchor[]}   targetEntities      - A set of \"target\" anchors\n */\n\n/**\n * @typedef RelationshipType\n * @type {object}\n * @property {string}  identifier   - A unique identifier for this type\n * @property {string}  title        - A label to display for this type\n * @property {string}  reverseTitle - If this type is directed, the label to display for reverse relationships\n * @property {string}  description  - A more detailed description of this type\n * @property {boolean} isDirected   - Whether this type is directed (true) or undirected (false)\n */\n\n/**\n * @typedef Provenance\n * @type {object}\n * @property {string[]} creatorUris  - URIs to people/authors of this relationship\n * @property {string}   dateCreated  - an ISO 8601 date representation of when the record was created\n * @property {string}   dateModified - an ISO 8601 date representation of when the record was last modified\n */\n\n/**\n * @typedef Anchor\n * @type {object}\n * @property {string[]} entryUris[] - URIs to work/edition/volume\n */\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcReln')\n    .provider('relationshipsRepo', relationshipsRepoProvider);\n\n  function relationshipsRepoProvider() {\n    var provider = {};\n    provider.url = '/api/relationships';\n    provider.$get = relationshipsRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function relationshipsRepoFactory($q, $resource) {\n      var typeResource = $resource(provider.url + '/types/:id', { id: '@identifier' });\n      var relnResource = $resource(provider.url + '/:id', { id: '@id' }, {\n        update: { method: 'PUT' }\n      });\n\n      var typesCache = null;\n\n      var repo = {};\n      repo.getTypes = getTypes;\n      repo.getType = getType;\n      repo.createRelationship = createRelationship;\n      repo.createProvenance = createProvenance;\n      repo.createAnchor = createAnchor;\n      repo.get = findById;\n      repo.search = search;\n      repo.save = saveRelationship;\n      repo.delete = deleteRelationship;\n      repo.normalizeRelationships = normalizeRelationships;\n      return repo;\n\n      /**\n       * Fetches relationship types from the server, caching them in the process.\n       * The returned array will be populated when the request resolves.\n       * The underlying promise is available on the $promise property.\n       *\n       * @param  {object} options\n       * @param  {boolean} options.force Discard cache (if set) and refetch\n       * @return {object.<string,RelationshipType>}\n       */\n      function getTypes(options) {\n        options = options || {};\n\n        if (!typesCache || options.force) {\n          var types = typeResource.query();\n\n          typesCache = {};\n\n          var tcPromise = types.$promise.then(function () {\n            types.forEach(function (type) {\n              typesCache[type.identifier] = type;\n            });\n            return typesCache;\n          });\n\n          // add $promise as a non-enumerable property\n          Object.defineProperty(typesCache, '$promise', {\n            value: tcPromise\n          });\n        }\n\n        return typesCache;\n      }\n\n      /**\n       * Fetches a type by ID\n       *\n       * @param  {string} id\n       * @return {Promise.<RelationshipType>}\n       */\n      function getType(id) {\n        var types = getTypes();\n\n        return types.$promise.then(function (types) {\n          return types[id];\n        });\n      }\n\n      /**\n       * Creates a new empty relationship instance\n       *\n       * @return {Relationship}\n       */\n      function createRelationship() {\n        var reln = new relnResource();\n        return adaptRelationship(reln);\n      }\n\n      /**\n       * Creates a new empty provenance model\n       *\n       * @return {Provenance}\n       */\n      function createProvenance() {\n        var provenance = {};\n        return adaptProvenance(provenance);\n      }\n\n      /**\n       * Creates a new empty anchor model\n       *\n       * @return {Anchor}\n       */\n      function createAnchor() {\n        var anchor = {};\n        return adaptAnchor(anchor);\n      }\n\n      /**\n       * Retrieves a relationship from the server by ID.\n       * The returned model will be populated once the request succeeds.\n       * The underlying promise can be accessed via the $promise property.\n       *\n       * @param  {string} id\n       * @return {Relationship}\n       */\n      function findById(id) {\n        return relnResource.get({ id: id });\n      }\n\n      /**\n       * Find all relationships matching the given criteria.\n       * @param  {object|string} options\n       * @property {string} options.uri (default if options is a string)\n       * @property {string} options.typeId\n       * @property {string} options.direction \"from\" (out-relationships), \"to\" (in-relationships), or \"any\"\n       * @property {integer} options.start\n       * @property {integer} options.max\n       * @return {Relationship[]}\n       */\n      function search(options) {\n        if (!options) {\n          throw new Error('no options provided')\n        }\n\n        if (angular.isString(options)) {\n          // treat single string as an entity URL\n          options = { uri: options };\n        }\n\n        var queryOpts = {};\n\n        if (options.uri) {\n          queryOpts.entity = options.uri;\n        }\n\n        if (options.typeId) {\n          queryOpts.type = options.typeId;\n        }\n\n        if (options.direction) {\n          queryOpts.direction = options.direction;\n        }\n\n        if (options.start) {\n          queryOpts.off = options.start;\n        }\n\n        if (options.max) {\n          queryOpts.max = options.max;\n        }\n\n        return relnResource.query(queryOpts);\n      }\n\n      /**\n       * Saves a relationship back to the server.\n       *\n       * @param  {Relationship} reln\n       * @return {Promise} resolves on successful save\n       */\n      function saveRelationship(reln) {\n        if (!(reln instanceof relnResource)) {\n          throw new Error('Relationship was not created by this repo');\n        }\n\n        return reln.id\n          ? reln.$update()\n          : reln.$save();\n      }\n\n      /**\n       * Deletes a relationship from the server via the REST API.\n       *\n       * @param  {string} id\n       * @return {Promise} resolves on success\n       */\n      function deleteRelationship(id) {\n        var response = relnResource.delete({ id: id });\n        return response.$promise\n      }\n\n      /**\n       * Ensures aggregate fields on a relationship are set appropriately\n       *\n       * @param  {Relationship} reln\n       * @return {Relationship}\n       */\n      function adaptRelationship(reln) {\n        if (!reln.provenance) {\n          reln.provenance = createProvenance();\n        }\n\n        if (!reln.relatedEntities) {\n          reln.relatedEntities = [];\n        }\n\n        if (!reln.targetEntities) {\n          reln.targetEntities = [];\n        }\n\n        return reln;\n      }\n\n      /**\n       * Ensures aggregate fields on a provenance model are set appropriately\n       *\n       * @param  {Provenance} provenance\n       * @return {Provenance}\n       */\n      function adaptProvenance(provenance) {\n        if (!provenance.creatorUris) {\n          provenance.creatorUris = [];\n        }\n\n        return provenance;\n      }\n\n      /**\n       * Ensures aggregate fields on an anchor model are set appropriately\n       *\n       * @param  {Anchor} anchor\n       * @return {Anchor}\n       */\n      function adaptAnchor(anchor) {\n        if (!anchor.entryUris) {\n          anchor.entryUris = [];\n        }\n\n        return anchor;\n      }\n\n      /**\n       * Normalizes relationships into type groups that are more suitable for display in the UI\n       *\n       * @param  {Relationship[]} relationships\n       * @return {TypeGroup[]}\n       */\n      function normalizeRelationships(relationships, currentUri, worksRepo) {\n        var normalizedRelationships = relationships.map(function (relationship) {\n          var typeId = relationship.typeId;\n\n          var isReverse = relationship.targetEntities.some(function (anchor) {\n            return anchor.entryUris.some(function (uri) {\n              return uri === currentUri;\n            });\n          });\n\n          var targetField = isReverse ? 'relatedEntities' : 'targetEntities';\n\n          var entities = relationship[targetField]\n          .map(function (anchor) {\n            return anchor.entryUris;\n          })\n          .reduce(function (flattened, arr) {\n            return flattened.concat(arr);\n          }, [])\n          .map(function (uri) {\n            return resolveEntityUri(uri, worksRepo);\n          });\n\n          return {\n            id: relationship.id,\n            typeId: typeId,\n            reverse: isReverse,\n            description: relationship.description,\n            entities: entities\n          };\n        });\n\n        var relnsByTypeDir = {};\n\n        normalizedRelationships.forEach(function (relationship) {\n          var typeId = relationship.typeId;\n\n          if (!relnsByTypeDir.hasOwnProperty(typeId)) {\n            relnsByTypeDir[typeId] = {\n              fwd: [],\n              rev: []\n            };\n          }\n\n          relnsByTypeDir[typeId][relationship.reverse ? 'rev' : 'fwd'].push(relationship);\n        });\n\n        var typeGroups = [];\n\n        angular.forEach(relnsByTypeDir, function (dirs, typeId) {\n          getType(typeId).then(function (type) {\n            if (type.isDirected) {\n              // add forward group\n              if (dirs.fwd.length > 0) {\n                typeGroups.push({\n                  label: type.title,\n                  relationships: dirs.fwd\n                });\n              }\n\n              // add reverse group\n              if (dirs.rev.length > 0) {\n                typeGroups.push({\n                  label: type.reverseTitle,\n                  relationships: dirs.rev\n                });\n              }\n            } else {\n              // combine forward/reverse and add as a single group\n              var group = dirs.fwd.concat(dirs.rev);\n              if (group.length > 0) {\n                typeGroups.push({\n                  label: type.title,\n                  relationships: group\n                });\n              }\n            }\n          });\n        });\n\n        return typeGroups;\n      }\n\n      function resolveEntityUri(uri, worksRepo) {\n        var ENTITY_URI = /^works\\/([^\\/]+)(?:\\/editions\\/([^\\/]+)(?:\\/volumes\\/([^\\/]+))?)?$/i;\n        var match = ENTITY_URI.exec(uri);\n\n        if (!match) {\n          return null;\n        }\n\n        if (match[1] && match[2] && match[3]) {\n          return makeVolumeEntity(match[1], match[2], match[3], worksRepo);\n        } else if (match[1] && match[2]) {\n          return makeEditionEntity(match[1], match[2], worksRepo);\n        } else if (match[1]) {\n          return makeWorkEntity(match[1], worksRepo);\n        }\n\n        return null;\n      }\n    }\n\n    function makeVolumeEntity(workId, editionId, volumeId, worksRepo) {\n      var edition = worksRepo.getEdition(workId, editionId);\n      var volume = worksRepo.getVolume(workId, editionId, volumeId);\n\n      var entity = {\n        type: 'volume',\n        refParams: {\n          workId: workId,\n          editionId: editionId,\n          volumeId: volumeId\n        },\n        entity: volume\n      };\n\n      volume.$promise.then(function () {\n        var title = worksRepo.getTitle(volume.titles, ['short', 'canonical', 'bibliographic']);\n        if (title) {\n          entity.label = title.title + (title.subtitle ? ': ' + title.subtitle : '');\n        }\n\n        edition.$promise.then(function () {\n          entity.label += ' ' + edition.editionName + ' Volume ' + volume.volumeNumber;\n        }, function () {\n          entity.label += ' [Unknown edition] ' + volume.volumeNumber;\n        });\n      });\n\n      return entity;\n    }\n\n    function makeEditionEntity(workId, editionId, worksRepo) {\n      var edition = worksRepo.getEdition(workId, editionId);\n\n      var entity = {\n        type: 'edition',\n        refParams: {\n          workId: workId,\n          editionId: editionId\n        },\n        entity: edition\n      };\n\n      edition.$promise.then(function () {\n        var title = worksRepo.getTitle(edition.titles, ['short', 'canonical', 'bibliographic']);\n        if (title) {\n          entity.label = title.title + (title.subtitle ? ': ' + title.subtitle : '') + ' ' + edition.editionName;\n        }\n      });\n\n      return entity;\n    }\n\n    function makeWorkEntity(workId, worksRepo) {\n      var work = worksRepo.getWork(workId);\n\n      var entity = {\n        type: 'work',\n        refParams: {\n          workId: workId\n        },\n        entity: work\n      };\n\n      work.$promise.then(function () {\n        var title = worksRepo.getTitle(work.titles, ['short', 'canonical', 'bibliographic']);\n        if (title) {\n          entity.label = title.title + (title.subtitle ? ': ' + title.subtitle : '');\n        }\n      });\n\n      return entity;\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio', [\n      'ngResource'\n    ]);\n\n})();\n\n/**\n * Data model representing a person returned by the TRC REST API\n * @typedef Person\n * @type {object}\n * @property {string}           id       - a unique identifier for this person; assigned upon creation\n * @property {EntryMeta}        meta     - metadata about the record and its history in the system\n * @property {PersonName}       name     - primary name used to identify this person\n * @property {PersonName[]}     altNames - other names by which this person is known\n * @property {?HistoricalEvent} birth    - the date and location this person was born; may be null if unknown\n * @property {?HistoricalEvent} death    - the date and location this person was born; may be null if unknown or still alive\n * @property {string}           summary  - an HTML summary of the person and his or her significance\n */\n\n/**\n * Simplified, lightweight representation of a person for use in search results\n * @typedef Person\n * @type {object}\n * @property {string}     id             - a unique identifier for the person\n * @property {EntryMeta}  meta           - metadata about the record and its history in the system\n * @property {PersonName} name           - structured name representation\n * @property {string}     label          - formatted name to display\n * @property {string}     summaryExcerpt - a leading excerpt from the full summary\n */\n\n/**\n * Metadata about a TRC entry\n * @typedef EntryMeta\n * @type {object}\n * @property {string}                      slug         - a short, unique identifier intended to be more human-readable than the id\n * @property {integer}                     version      - a monotonically increasing version number incremented on each change\n * @property {object.<string, SimpleLink>} links        - links to related resources; keyed by link role\n * @property {string}                      lastModified - ISO 8601 timestamp of the last modification date\n */\n\n/**\n * Container for linking to related entities\n * @typedef SimpleLink\n * @type {object}\n * @property {string} uri  - a URI representing the linked item\n * @property {string} type - MIME type of the related linked item\n */\n\n/**\n * Structured form of a person's name\n * @typedef PersonName\n * @type {object}\n * @property {string} role        - clarifies the use of this name\n * @property {string} label       - a simple representation of this name for display purposes\n * @property {?string} title      - title of address\n * @property {?string} givenName  - given or first name\n * @property {?string} middleName - middle name\n * @property {?string} familyName - family or last name\n * @property {?string} suffix     - a suffix (e.g. 'Jr' or 'III')\n */\n\n/**\n * Event with a date/time, location, and descriptive information\n * @typedef HistoricalEvent\n * @type {object}\n * @property {string}          id          - a unique identifier for this event\n * @property {string}          title       - a brief title of the event for display purposes\n * @property {string}          description - a detailed summary of the event\n * @property {string}          location    - the location in which the event took place\n * @property {DateDescription} date        - the date the event took place\n */\n\n/**\n * Container for encapsulating human-readable and machine-readable forms of a date.\n * @typedef DateDescription\n * @type {object}\n * @property {string} calendar    - machine-readable ISO 8601 timestamp\n * @property {string} description - human-readable description of this date\n */\n\n/**\n * Container for search results\n * @typedef PersonSearchResultSet\n * @type {object}\n * @property {SimplePerson[]} items  - search results\n * @property {string}         qs     - query string that gives the current set of search results\n * @property {?string}        qsNext - query string that gives next set of search results or null if this is the last set\n * @property {?string}        qsPrev - query string that gives preceding set of search results or null if this is the first set\n */\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .provider('peopleRepo', peopleRepoProvider);\n\n\n  function peopleRepoProvider() {\n    var provider = {};\n    provider.url = '/api/people';\n    provider.$get = peopleRepoFactory;\n    return provider;\n\n    /** @ngInject */\n    function peopleRepoFactory($q, $resource) {\n      var restResource = $resource(provider.url + '/:id', null, {\n        'update': { method: 'PUT' }\n      });\n\n      var repo = {};\n      repo.create = createPerson;\n      repo.createName = createName;\n      repo.createEvent = createEvent;\n      repo.get = findById;\n      repo.search = search;\n      repo.save = savePerson;\n      repo.delete = deletePerson;\n      return repo;\n\n      /**\n       * Creates a new empty person instance.\n       *\n       * @return {Person}\n       */\n      function createPerson() {\n        var person = new restResource();\n        return adaptPerson(person);\n      }\n\n      /**\n       * Creates a new empty entry metadata instance\n       *\n       * @return {EntryMeta}\n       */\n      function createMeta() {\n        var meta = {};\n        return adaptMeta(meta);\n      }\n\n      /**\n       * Creates a new empty name instance\n       *\n       * @return {PersonName}\n       */\n      function createName() {\n        var name = {};\n        return adaptName(name);\n      }\n\n      /**\n       * Creates a new historical event instance\n       *\n       * @return {HistoricalEvent}\n       */\n      function createEvent() {\n        var evt = {};\n        return adaptEvent(evt);\n      }\n\n      /**\n       * Creates a date/description instance\n       *\n       * @return {DateDescription}\n       */\n      function createDateDescription() {\n        var dateDescription = {};\n        return dateDescription;\n      }\n\n      /**\n       * Retrieves a person object by identifier.\n       *\n       * A proxy object will be returned immediately, and its properties will be populated after the\n       * request succeeds. If fine-grained asynchronous handling, etc. is required, the request's\n       * promise is available on Person.$promise.\n       *\n       * @param  {string} id\n       * @return {Person}\n       */\n      function findById(id) {\n        return restResource.get({ id: id });\n      }\n\n      /**\n       * Retrieves a serch result set of people who match the given query.\n       *\n       * @param {string} query\n       * @return {PersonSearchResultSet}\n       */\n      function search(query) {\n        return restResource.get({ q: query });\n      }\n\n      /**\n       * Saves a person model to the REST API.\n       *\n       * If no ID is provided on the person model, the API will create save the model as a new\n       * person. Otherwise, the API will attempt to update the existing person model with that ID.\n       *\n       * @param {Person} person\n       * @return {Promise.<Person>} - resolves to the saved person on success\n       */\n      function savePerson(person) {\n        var response;\n        if (person.id) {\n          response = restResource.update({ id: person.id }, person);\n        } else {\n          response = restResource.save(null, person);\n        }\n\n        return response.$promise.then(function (personId) {\n          person.id = personId.id;\n          return person;\n        });\n      }\n\n      /**\n       * Deletes a person on the server via the REST API.\n       *\n       * @param {Person|string} idOrPerson\n       * @return {Promise} - resolves on success\n       */\n      function deletePerson(id) {\n        var response = restResource.delete({ id: id });\n        return response.$promise;\n      }\n\n      /**\n       * Populates a person with aggregate fields\n       *\n       * @param  {Person} person\n       * @return {Person}\n       */\n      function adaptPerson(person) {\n        if (!person.meta) {\n          person.meta = createMeta();\n        } else {\n          adaptMeta(person.meta);\n        }\n\n        if (!person.name) {\n          person.name = createName();\n        } else {\n          adaptName(person.name);\n        }\n\n        if (!person.altNames) {\n          person.altNames = [];\n        } else {\n          person.altNames.forEach(adaptName);\n        }\n\n        if (!person.birth) {\n          person.birth = createEvent();\n        } else {\n          adaptEvent(person.birth);\n        }\n\n        if (!person.death) {\n          person.death = createEvent();\n        } else {\n          adaptEvent(person.death);\n        }\n\n        return person\n      }\n\n      /**\n       * Ensure that entry metadata aggregate fields exist and are formatted correctly.\n       *\n       * @param  {EntryMeta} meta\n       * @return {EntryMeta}\n       */\n      function adaptMeta(meta) {\n        if (!meta.links) {\n          meta.links = {};\n        }\n\n        return meta;\n      }\n\n      /**\n       * Ensure that name aggregate fields exist and are formatted correctly\n       * @param  {PersonName} name\n       * @return {PersonName}\n       */\n      function adaptName(name) {\n        // no aggregate fields yet...\n        return name;\n      }\n\n      /**\n       * Ensure that event aggregate fields exist and are formatted correctly.\n       *\n       * @param  {HistoricalEvent} evt\n       * @return {HistoricalEvent}\n       */\n      function adaptEvent(evt) {\n        if (!evt.date) {\n          evt.date = createDateDescription();\n        }\n\n        return evt;\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .directive('trcPersonEditor', trcPersonEditorDirective);\n\n  /** @ngInject */\n  function trcPersonEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/trc-bio/person-editor.html',\n      scope: {\n        person: '=ngModel'\n      },\n      controller: PersonEditorController,\n      controllerAs: 'personEditor'\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PersonEditorController($scope, peopleRepo) {\n      var vm = this;\n\n      vm.addName = addName;\n      vm.removeName = removeName;\n      vm.addEvent = addEvent;\n      vm.removeEvent = removeEvent;\n\n      /**\n       * Adds a name to the current person model.\n       */\n      function addName() {\n        var newName = peopleRepo.createName();\n        $scope.person.altNames.push(newName);\n      }\n\n      /**\n       * Removes the name at the specified index from the current person model.\n       *\n       * @param {integer} ix\n       */\n      function removeName(ix) {\n        $scope.person.altNames.splice(ix, 1);\n      }\n\n      /**\n       * Adds an event to the current person model.\n       *\n       * @param {string} key - 'birth' or 'death'\n       */\n      function addEvent(key) {\n        var newEvent = peopleRepo.createEvent();\n        $scope.person[key] = newEvent;\n      }\n\n      /**\n       * Removes the event from the current person model.\n       *\n       * @param {string} key - 'birth' or 'death'\n       */\n      function removeEvent(key) {\n        $scope.person[key] = null;\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .directive('trcNameEditor', trcNameEditorDirective);\n\n  /** @ngInject */\n  function trcNameEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/trc-bio/name-editor.html',\n      scope: {\n        name: '=ngModel'\n      },\n      controller: NameEditorController,\n      controllerAs: 'nameEditor'\n    };\n\n    return directive;\n\n    function NameEditorController() {\n      var vm = this;\n\n      vm.roles = [\n        { value: 'canonical', label: 'Canonical Name' },\n        { value: 'pseudonym', label: 'Pseudonym' },\n        { value: 'maiden', label: 'Maiden Name' },\n        { value: 'designation', label: 'Honorary Designation' },\n        { value: 'nickname', label: 'Nickname' },\n        { value: 'phonetic', label: 'Phonetic Name' }\n      ];\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('trcBio')\n    .directive('trcEventEditor', trcEventEditorDirective);\n\n  /** @ngInject */\n  function trcEventEditorDirective() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/trc-bio/event-editor.html',\n      scope: {\n        event: '=ngModel'\n      }\n    };\n\n    return directive;\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('TaskController', TaskController);\n\n  /** @ngInject */\n  function TaskController($state, $mdSidenav, tasksRepo, $q) {\n    var vm = this;\n\n    // HACK this will eventually be made available on the workflow data model itself.\n    vm.stageOrder = [\n      'pinned',\n      'review',\n      'inprogress',\n      'pending',\n      'deferred'\n    ];\n\n    vm.loading = true;\n    vm.worklists = {};\n    vm.task = null;\n\n    vm.openMenu = openMenu;\n    vm.focusItem = focusItem;\n    vm.transition = transitionItem;\n\n    activate();\n\n    function activate() {\n      vm.task = tasksRepo.get();\n\n      vm.task.$promise.then(function (task) {\n        var worklistPromises = [];\n\n        angular.forEach(task.workflow.stages, function (stage) {\n          var worklistPromise = fetchStage(task, stage.id);\n          worklistPromises.push(worklistPromise);\n        });\n\n        $q.all(worklistPromises).then(function () {\n          vm.loading = false;\n        });\n      });\n    }\n\n    function openMenu() {\n      $mdSidenav('left').toggle();\n    }\n\n    function focusItem(item, $event) {\n      $event.stopImmediatePropagation();\n\n      // TODO resolve handler based on item.type\n      $state.go('editor.work', { workId: item.entityId });\n    }\n\n    function transitionItem(item, transition, $event) {\n      $event.stopImmediatePropagation();\n\n      var updatedItem = tasksRepo.transition(item, transition);\n      updatedItem.$promise.then(function () {\n        fetchStage(vm.task, transition.sourceStage);\n        fetchStage(vm.task, transition.targetStage);\n      });\n    }\n\n    function fetchStage(task, stageId) {\n      var group = task.getItems(stageId, { max: 9999 });\n\n      group.$promise.then(function () {\n        vm.worklists[stageId] = group.items.length > 0 ? group : null;\n      });\n\n      return group.$promise;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('slideToggle', []);\n\n})();\n\n(function () {\n   'use strict';\n\n   angular\n      .module('slideToggle')\n      .directive('slideToggle', slideToggle);\n\n   /** @ngInject */\n   function slideToggle() {\n      var directive = {\n         restrict: 'A',\n         scope: {\n            active: '=slideToggle'\n         },\n         link: linkFunc\n      };\n\n      return directive;\n\n      function linkFunc(scope, el, attr) {\n         var duration = parseInt(attr.slideToggleDuration) || 200;\n         scope.$watch('active', function (active) {\n            if (active) {\n               el.stop().slideDown(duration);\n            } else {\n               el.stop().slideUp(duration);\n            }\n         })\n      }\n   }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('ShowPersonController', ShowPersonController);\n\n  /** @ngInject */\n  function ShowPersonController(peopleRepo, $stateParams, $mdDialog, $mdToast) {\n    var vm = this;\n\n    vm.loading = true;\n    vm.person = null;\n\n    vm.editBioInfo = editBioInfo;\n    vm.editEvent = editEvent;\n    vm.editSummary = editSummary;\n\n    activate();\n\n    function activate() {\n      vm.person = peopleRepo.get($stateParams.id);\n    }\n\n    function editBioInfo($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/person/person-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          person: angular.copy(vm.person)\n        },\n        controller: 'PersonEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedPerson) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        angular.extend(vm.person, updatedPerson);\n\n        peopleRepo.save(vm.person).then(showSavedToast);\n      });\n    }\n\n    function editEvent(field, $event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/person/event-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation\n          event: angular.copy(vm.person[field])\n        },\n        controller: 'EventEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedEvent) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        angular.extend(vm.person[field], updatedEvent);\n\n        peopleRepo.save(vm.person).then(showSavedToast);\n      });\n    }\n\n    function editSummary($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/components/summary-edit-dialog/summary-edit-dialog.html',\n        locals: {\n          // create a copy for manipulation (even if it is just a string)\n          summary: angular.copy(vm.person.summary)\n        },\n        controller: 'SummaryEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      dialogPromise.then(function (updatedSummary) {\n        // copy updates back to original only after dialog is positively dismissed (i.e. not canceled)\n        vm.person.summary = updatedSummary;\n\n        peopleRepo.save(vm.person).then(showSavedToast);\n      });\n    }\n\n    function showSavedToast() {\n      var toast = $mdToast.simple()\n        .textContent('Saved')\n        .position('bottom right');\n\n      return $mdToast.show(toast);\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('PersonEditDialogController', PersonEditDialogController);\n\n  /** @ngInject */\n  function PersonEditDialogController(peopleRepo, $mdDialog, person) {\n    var vm = this;\n\n    vm.person = person;\n    vm.nameRoles = [\n        // { value: 'canonical', label: 'Canonical Name' },\n        { value: 'pseudonym', label: 'Pseudonym' },\n        { value: 'maiden', label: 'Maiden Name' },\n        { value: 'designation', label: 'Honorary Designation' },\n        { value: 'nickname', label: 'Nickname' },\n        { value: 'phonetic', label: 'Phonetic Name' }\n    ]\n\n    vm.close = close;\n    vm.cancel = cancel;\n    vm.addName = addName;\n    vm.deleteName = deleteName;\n\n    function close() {\n      $mdDialog.hide(vm.person);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n\n    function addName() {\n      var name = peopleRepo.createName();\n      vm.person.altNames.push(name);\n    }\n\n    function deleteName(name) {\n      var ix = vm.person.altNames.indexOf(name);\n      if (ix >= 0) {\n        vm.person.altNames.splice(ix, 1);\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('EventEditDialogController', EventEditDialogController);\n\n  /** @ngInject */\n  function EventEditDialogController($mdDialog, event) {\n    var vm = this;\n\n    vm.event = event;\n\n    vm.close = close;\n    vm.cancel = cancel;\n\n    function close() {\n      $mdDialog.hide(vm.event);\n    }\n\n    function cancel() {\n      $mdDialog.cancel();\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController(worksRepo, peopleRepo, $state, $stateParams, $mdSidenav, _, $q, $mdDialog, $mdToast) {\n    var vm = this;\n\n    vm.loading = false;\n    vm.searchQuery = '';\n\n    vm.openMenu = openMenu;\n    vm.createPerson = createPerson;\n    vm.createWork = createWork;\n    vm.search = _.debounce(search, 300);\n\n    activate();\n\n    function activate() {\n      if ($stateParams.q) {\n        vm.searchQuery = $stateParams.q;\n        search(vm.searchQuery);\n      }\n    }\n\n    function openMenu() {\n      $mdSidenav('left').toggle();\n    }\n\n    function search(query) {\n      vm.loading = true;\n\n      vm.peopleResults = peopleRepo.search(query);\n      vm.worksResults = worksRepo.search(query);\n\n      $q.all([\n        vm.peopleResults.$promise,\n        vm.worksResults.$promise\n      ])\n        .then(function () {\n          vm.loading = false;\n        });\n    }\n\n    function createPerson($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/person/person-edit-dialog.html',\n        locals: {\n          person: peopleRepo.create()\n        },\n        controller: 'PersonEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      var savePromise = dialogPromise.then(function (person) {\n        return peopleRepo.save(person);\n      });\n\n      savePromise.then(showSavedToast);\n\n      savePromise.then(function (person) {\n        $state.go('editor.person', { id: person.id });\n      });\n    }\n\n    function createWork($event) {\n      var dialog = {\n        targetEvent: $event,\n        templateUrl: 'app/work/work-edit-dialog.html',\n        locals: {\n          work: worksRepo.createWork()\n        },\n        controller: 'WorkEditDialogController',\n        controllerAs: 'vm'\n      };\n\n      var dialogPromise = $mdDialog.show(dialog);\n\n      var savePromise = dialogPromise.then(function (work) {\n        return worksRepo.saveWork(work);\n      });\n\n      savePromise.then(showSavedToast);\n\n      savePromise.then(function (work) {\n        $state.go('editor.work', { workId: work.id });\n      });\n    }\n\n    function showSavedToast() {\n      var toast = $mdToast.simple()\n        .textContent('Saved')\n        .position('bottom right');\n\n      return $mdToast.show(toast);\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log) {\n    $log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('editor', {\n        url: '/?q',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      })\n\n      .state('editor.person', {\n        url: 'people/:id',\n        views: {\n          main: {\n            templateUrl: 'app/person/person.html',\n            controller: 'ShowPersonController',\n            controllerAs: 'vm'\n          }\n        }\n      })\n\n      .state('editor.work', {\n        url: 'works/:workId',\n        views: {\n          main: {\n            templateUrl: 'app/work/work.html',\n            controller: 'ShowWorkController',\n            controllerAs: 'vm'\n          }\n        }\n      })\n      .state('editor.edition', {\n        url: 'works/:workId/editions/:editionId',\n        views: {\n          main: {\n            templateUrl: 'app/work/edition.html',\n            controller: 'ShowEditionController',\n            controllerAs: 'vm'\n          }\n        }\n      })\n      .state('editor.volume', {\n        url: 'works/:workId/editions/:editionId/volumes/:volumeId',\n        views: {\n          main: {\n            templateUrl: 'app/work/volume.html',\n            controller: 'ShowVolumeController',\n            controllerAs: 'vm'\n          }\n        }\n      })\n\n      .state('task', {\n        url: '/task',\n        templateUrl: 'app/task/task.html',\n        controller: 'TaskController',\n        controllerAs: 'vm'\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global _:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .constant('_', _)\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('sdaAdminWeb')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, /* toastrConfig, */ $mdThemingProvider, tasksRepoProvider, worksRepoProvider, peopleRepoProvider, relationshipsRepoProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    $mdThemingProvider.definePalette('darkBrown', {\n      '50': '#595c59',\n      '100': '#4c4f4c',\n      '200': '#404240',\n      '300': '#333533',\n      '400': '#272827',\n      '500': '#1a1b1a',\n      '600': '#0d0e0d',\n      '700': '#010101',\n      '800': '#000000',\n      '900': '#000000',\n      'A100': '#e0f0e0',\n      'A200': '#565956',\n      'A400': '#7e837e',\n      'A700': '#000000',\n\n      contrastDefaultColor: 'light',\n      contrastDarkColors: ['A100']\n    });\n\n    $mdThemingProvider.definePalette('copper', {\n      '50': '#d4b190',\n      '100': '#cca47e',\n      '200': '#c5976b',\n      '300': '#be8a59',\n      '400': '#b67e47',\n      '500': '#a47140',\n      '600': '#926439',\n      '700': '#7f5832',\n      '800': '#6d4b2b',\n      '900': '#5b3e23',\n      'A100': '#dcc3ab',\n      'A200': '#a47140',\n      'A400': '#48321c',\n      'A700': '#272927',\n\n      contrastDefaultColor: 'light',\n      contrastDarkColors: ['50', '100', '200', 'A100']\n    });\n\n    $mdThemingProvider.theme('default')\n      .primaryPalette('darkBrown')\n      .accentPalette('copper');\n\n\n    tasksRepoProvider.url = '/api/catalog/v1/tasks';\n    worksRepoProvider.url = '/api/catalog/works';\n    peopleRepoProvider.url = '/api/catalog/people';\n    relationshipsRepoProvider.url = '/api/catalog/relationships';\n  }\n\n})();\n\nangular.module(\"sdaAdminWeb\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<md-content flex layout=column><md-toolbar><div class=md-toolbar-tools><md-button class=\\\"md-accent md-icon-button\\\" ng-click=vm.openMenu() title=\\\"toggle menu\\\" hide-gt-sm><md-icon>menu</md-icon></md-button><img class=logo src=assets/images/sda-logo-light.png><h2><span>Catalog Entry Editor</span></h2><span flex></span> <img class=ox-brand src=assets/images/ox-brand-rect.png alt=\\\"University of Oxford\\\" hide-xs></div></md-toolbar><md-content flex layout=row><md-sidenav md-component-id=left md-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\" ui-view=sidebar layout=column><form layout=row flex=none><md-input-container flex><label for=searchQuery>Search</label><md-icon>search</md-icon><input type=search name=searchQuery id=searchQuery ng-model=vm.searchQuery ng-change=vm.search(vm.searchQuery) required></md-input-container></form><md-content flex><div ng-if=vm.loading layout=row layout-align=center><md-progress-circular md-mode=indeterminate></md-progress-circular></div><div ng-if=\\\"!vm.loading &amp;&amp; vm.peopleResults &amp;&amp; vm.peopleResults.items.length > 0\\\"><md-subheader>People</md-subheader><md-list><md-list-item ng-repeat=\\\"person in vm.peopleResults.items\\\" ui-sref=\\\"editor.person({id: person.id})\\\"><div class=md-list-item-text><span>{{person.label}}</span></div></md-list-item></md-list></div><div ng-if=\\\"!vm.loading &amp;&amp; vm.worksResults &amp;&amp; vm.worksResults.items.length > 0\\\"><md-subheader>Works</md-subheader><md-list><md-list-item ng-repeat=\\\"work in vm.worksResults.items\\\" ui-sref=\\\"editor.work({workId: work.id})\\\"><div class=md-list-item-text><span>{{work.label}}</span></div></md-list-item></md-list></div></md-content></md-sidenav><md-fab-speed-dial md-direction=up class=\\\"md-scale md-fab-bottom-right\\\"><md-fab-trigger><md-button aria-label=New... class=md-fab><md-icon>add</md-icon></md-button></md-fab-trigger><md-fab-actions><md-button aria-label=\\\"New Person\\\" class=\\\"md-fab md-mini\\\" ng-click=vm.createPerson($event)><md-icon>person</md-icon></md-button><md-button aria-label=\\\"New Work\\\" class=\\\"md-fab md-mini\\\" ng-click=vm.createWork($event)><md-icon>book</md-icon></md-button></md-fab-actions></md-fab-speed-dial><md-content flex layout=column ui-view=main></md-content></md-content></md-content>\");\n$templateCache.put(\"app/person/event-edit-dialog.html\",\"<md-dialog flex=80><md-toolbar><div class=md-toolbar-tools><h3>Event Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><div class=md-dialog-content><event-editor ng-model=vm.event flex></event-editor></div></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/person/person-edit-dialog.html\",\"<md-dialog flex=80><md-toolbar><div class=md-toolbar-tools><h3>Biographic Information Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><div class=md-dialog-content><section class=name layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Canonical Name</h2></div></md-toolbar><div class=name><name-editor ng-model=vm.person.name flex></name-editor></div></section><section class=alt-names layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Alternate Names</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addName()><md-icon>add</md-icon></md-button></div></md-toolbar><div class=name layout=row ng-repeat=\\\"name in vm.person.altNames\\\"><md-input-container><label>role</label><md-select ng-model=name.role><md-option ng-repeat=\\\"role in vm.nameRoles\\\" value={{role.value}}>{{role.label}}</md-option></md-select></md-input-container><name-editor ng-model=name flex></name-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=vm.deleteName(name)><md-icon>delete</md-icon></md-button></md-input-container></div></section></div></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/person/person.html\",\"<div layout=row layout-padding><div flex=60><section class=\\\"content names\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h1 class=content-heading>{{vm.person.name.label}}</h1><span flex></span><md-button class=md-icon-button ng-click=vm.editBioInfo($event)><md-icon>edit</md-icon></md-button></div><div ng-if=\\\"vm.person.altNames && vm.person.altNames.length > 0\\\"><p>Other names:</p><ul><li ng-repeat=\\\"name in vm.person.altNames\\\">{{name.label}}</li></ul></div></section><section class=\\\"content summary\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Summary</h2><span flex></span><md-button class=md-icon-button ng-click=vm.editSummary($event)><md-icon>edit</md-icon></md-button></div><p ng-if=vm.person.summary ng-bind-html=vm.person.summary></p></section></div><div flex=40><section class=\\\"content birth\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Birth</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.editEvent(\\'birth\\', $event)\\\"><md-icon>edit</md-icon></md-button></div><p><span class=description ng-if=vm.person.birth.date.description>{{vm.person.birth.date.description}}</span> <span class=location ng-if=vm.person.birth.location>in {{vm.person.birth.location}}</span></p><p ng-bind-html=vm.person.birth.description ng-if=vm.person.birth.description></p></section><section class=\\\"content death\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Death</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.editEvent(\\'death\\', $event)\\\"><md-icon>edit</md-icon></md-button></div><p><span class=description ng-if=vm.person.death.date.description>{{vm.person.death.date.description}}</span> <span class=location ng-if=vm.person.death.location>in {{vm.person.death.location}}</span></p><p ng-bind-html=vm.person.death.description ng-if=vm.person.death.description></p></section></div></div>\");\n$templateCache.put(\"app/task/task.html\",\"<md-content flex layout=column><md-toolbar><div class=md-toolbar-tools><md-button class=\\\"md-accent md-icon-button\\\" ng-click=vm.openMenu() title=\\\"toggle menu\\\" hide-gt-sm><md-icon>menu</md-icon></md-button><img class=logo src=assets/images/sda-logo-light.png><h2><span>Task Management Dashboard</span></h2><span flex></span> <img class=ox-brand src=assets/images/ox-brand-rect.png alt=\\\"University of Oxford\\\" hide-xs></div></md-toolbar><md-content flex layout=row><md-sidenav md-component-id=left md-is-locked-open=\\\"$mdMedia(\\'gt-sm\\')\\\">Left Sidebar</md-sidenav><md-content flex layout=column><md-content flex layout=column><md-input-container><label>Search</label><md-icon>search</md-icon><input type=search ng-model=filter ng-change=vm.search(filter)></md-input-container><md-content flex><div layout=row layout-align=\\\"center center\\\" ng-if=vm.loading><md-progress-circular md-mode=indeterminate></md-progress-circular></div><div ng-repeat=\\\"stageId in vm.stageOrder\\\" ng-if=vm.worklists[stageId]><md-subheader>{{vm.task.workflow.stages[stageId].label}}</md-subheader><md-list><md-list-item ng-repeat=\\\"item in vm.worklists[stageId].items | filter : filter | limitTo : 20\\\" ng-mouseover=\\\"item.hover = true\\\" ng-mouseout=\\\"item.hover = false\\\" ng-click=\\\"vm.focusItem(item, $event)\\\"><span ng-bind-html=item.label></span> <span flex></span><md-button class=md-exclude ng-repeat=\\\"transition in vm.task.workflow.stages[stageId].transitions\\\" ng-click=\\\"vm.transition(item, transition, $event)\\\" ng-show=item.hover><span>{{transition.label}}</span></md-button></md-list-item></md-list></div></md-content></md-content></md-content></md-content></md-content>\");\n$templateCache.put(\"app/trc-bio/event-editor.html\",\"<div class=form-group><label class=control-label for=event-title>Title</label><input type=text id=event-title name=event-title class=\\\"form-control event-title\\\" ng-model=event.title></div><div class=form-group><label class=control-label for=event-description>Description</label><textarea id=event-description name=event-description class=\\\"form-control event-description\\\" ng-model=event.description></textarea></div><div class=form-group><label class=control-label for=event-location>Location</label><input type=text id=event-location name=event-location class=\\\"form-control event-location\\\" ng-model=event.location></div><div class=form-group><label class=control-label for=event-date>Date</label><input type=text id=event-date name=event-date class=\\\"form-control event-date\\\" ng-model=event.date.description><!-- TODO add datepicker --></div>\");\n$templateCache.put(\"app/trc-bio/name-editor.html\",\"<div class=form-group class=name-role><label class=control-label for=name-role>Role</label><select id=name-role name=name-role class=\\\"form-control name-role\\\" ng-model=name.role><option ng-repeat=\\\"role in nameEditor.roles\\\" value={{role.value}}>{{role.label}}</option></select></div><div class=form-group class=name-structure><label class=control-label>Structured Name</label><input type=text class=name-title placeholder=title ng-model=name.title> <input type=text class=name-given placeholder=given ng-model=name.givenName> <input type=text class=name-middle placeholder=middle ng-model=name.middleName> <input type=text class=name-family placeholder=family ng-model=name.familyName> <input type=text class=name-suffix placeholder=suffix ng-model=name.suffix></div><div class=form-group class=name-label><label for=label>Display Label</label><input type=text placeholder=label ng-model=name.label></div>\");\n$templateCache.put(\"app/trc-bio/person-editor.html\",\"<div class=form-group><label for=person-name>Primary Name</label><trc-name-editor id=person-name ng-model=person.name></trc-name-editor></div><div class=form-group><label for=person-altnames>Alternate Names</label><div ng-repeat=\\\"name in person.altNames\\\"><trc-name-editor id=person-altnames ng-model=name></trc-name-editor><button ng-click=personEditor.removeName($index)>&minus;</button></div><button ng-click=personEditor.addName()>+</button></div><div class=form-group><label for=person-birth>Birth</label><div ng-if=person.birth><trc-event-editor id=person-birth ng-model=person.birth></trc-event-editor><button ng-click=\\\"personEditor.removeEvent(\\'birth\\')\\\">&minus;</button></div><div ng-if=!person.birth><button ng-click=\\\"personEditor.addEvent(\\'birth\\')\\\">+</button></div></div><div class=form-group><label for=person-death>Death</label><div ng-if=person.death><trc-event-editor id=person-death ng-model=person.death></trc-event-editor><button ng-click=\\\"personEditor.removeEvent(\\'death\\')\\\">&minus;</button></div><div ng-if=!person.death><button ng-click=\\\"personEditor.addEvent(\\'death\\')\\\">+</button></div></div><div class=form-group><label class=control-label for=person-summary>Summary</label><textarea id=person-summary name=person-summary class=\\\"form-control person-summary\\\" ng-model=person.summary></textarea></div>\");\n$templateCache.put(\"app/work/copy-edit-dialog.html\",\"<md-dialog flex=50><md-toolbar><div class=md-toolbar-tools><h3>Digital Copy Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><div class=md-dialog-content><copy-editor ng-model=vm.copy></copy-editor></div></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/work/edition-edit-dialog.html\",\"<md-dialog flex=80><md-toolbar><div class=md-toolbar-tools><h3>Bibliographic Information Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><div class=md-dialog-content><div layout=row><md-input-container flex><label>edition name</label><input type=text ng-model=vm.edition.editionName required></md-input-container></div><section class=publication layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Publication Information</h2></div></md-toolbar><publication-info-editor ng-model=vm.edition.publicationInfo flex></publication-info-editor></section><section class=titles layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Titles</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addTitle($event)><md-icon>add</md-icon></md-button></div></md-toolbar><div class=title layout=row ng-repeat=\\\"title in vm.edition.titles\\\"><title-editor ng-model=title flex></title-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteTitle(title, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=authors layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Authors</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.addAuthor(\\'authors\\', $event)\\\"><md-icon>add</md-icon></md-button></div></md-toolbar><div class=author layout=row ng-repeat=\\\"author in vm.edition.authors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteAuthor(\\'authors\\', author, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=\\\"authors other-authors\\\" layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Other Authors</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.addAuthor(\\'otherAuthors\\', $event)\\\"><md-icon>add</md-icon></md-button></div></md-toolbar><div class=\\\"author other-author\\\" layout=row ng-repeat=\\\"author in vm.edition.otherAuthors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteAuthor(\\'otherAuthors\\', author, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section></div></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/work/edition.html\",\"<nav layout=row layout-padding><ol class=breadcrumbs flex><li><a ui-sref=\\\"editor.work({workId: vm.work.id})\\\">{{vm.workTitle.title}}{{vm.workTitle.title && vm.workTitle.subtitle ? \\': \\' : \\'\\'}}{{vm.workTitle.subtitle}}</a></li><li>{{vm.edition.editionName}}</li></ol></nav><div layout=row layout-padding><div layout=column flex=60><section class=\\\"content citation\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Bibliographic Information</h2><span flex></span><md-button class=md-icon-button ng-click=vm.editBibInfo($event)><md-icon>edit</md-icon></md-button></div><p><span class=authors ng-if=\\\"vm.edition.authors && vm.edition.authors.length > 0\\\"><span class=author ng-repeat=\\\"author in vm.edition.authors\\\"><span ng-if=author.authorId><a ui-sref=\\\"editor.person({id: author.authorId})\\\">{{author.lastName}}{{author.lastName && author.firstName ? \\', \\' : \\'\\'}}{{author.firstName}}</a>. </span><span ng-if=!author.authorId>{{author.lastName}}{{author.lastName && author.firstName ? \\', \\' : \\'\\'}}{{author.firstName}}. </span></span></span><span class=title ng-if=vm.title>{{vm.title.title}}{{vm.title.title && vm.title.subtitle ? \\': \\' : \\'\\'}}{{vm.title.subtitle}}. </span><span class=publication ng-if=vm.edition.publicationInfo><span ng-if=vm.edition.publicationInfo.place><span class=place>{{vm.edition.publicationInfo.place}}</span>: </span><span ng-if=vm.edition.publicationInfo.publisher><span class=publisher>{{vm.edition.publicationInfo.publisher}}</span>, </span><span ng-if=vm.edition.publicationInfo.date><time class=date datetime={{vm.edition.publicationInfo.date.calendar}}>{{vm.edition.publicationInfo.date.description}}</time>.</span></span></p></section><section class=\\\"content summary\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Summary</h2><span flex></span><md-button class=md-icon-button ng-click=vm.editSummary($event)><md-icon>edit</md-icon></md-button></div><p ng-if=vm.edition.summary ng-bind-html=vm.edition.summary></p></section><section class=\\\"content volumes\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Volumes</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addVolume($event)><md-icon>add</md-icon></md-button></div><md-list><md-list-item ng-repeat=\\\"volume in vm.edition.volumes\\\" ui-sref=\\\"editor.volume({workId: vm.work.id, editionId: vm.edition.id, volumeId: volume.id})\\\"><span>Volume {{volume.volumeNumber}}</span><md-button class=\\\"md-secondary md-icon-button md-warn\\\" ng-click=\\\"vm.deleteVolume(volume, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></section></div><div layout=column flex=40><section class=\\\"content references\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Relationships</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addRelationship($event)><md-icon>add</md-icon></md-button></div><div ng-repeat=\\\"type in vm.relationships\\\"><h3 class=content-heading>{{type.label}}</h3><md-list><md-list-item ng-repeat=\\\"relationship in type.relationships\\\" ng-click=vm.openRelationship(relationship)><span ng-repeat=\\\"entity in relationship.entities\\\">{{entity.label}}.</span><md-button class=\\\"md-secondary md-warn md-icon-button\\\" ng-click=\\\"vm.deleteRelationship(relationship, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></div></section><section class=\\\"content copies\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Digital Copies</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addCopy($event)><md-icon>add</md-icon></md-button></div><md-list><md-list-item ng-repeat=\\\"copy in vm.edition.copies\\\" ng-click=\\\"vm.editCopy(copy, $event)\\\"><span>{{copy.title}}</span><md-button class=\\\"md-secondary md-icon-button md-warn\\\" ng-click=\\\"vm.deleteCopy(copy, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></section></div></div>\");\n$templateCache.put(\"app/work/relationship-edit-dialog.html\",\"<md-dialog flex=50><md-toolbar><div class=md-toolbar-tools><h3>Relationship Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><div class=md-dialog-content layout=column><md-input-container><label>type</label><md-select ng-model=vm.selectedType ng-change=vm.setType(vm.selectedType) required><md-option ng-repeat=\\\"type in vm.types\\\" ng-value=type>{{type.label}}</md-option></md-select></md-input-container><md-autocomplete md-items=\\\"work in vm.getResults(vm.searchText)\\\" md-item-text=work.label md-search-text=vm.searchText md-selected-item-change=vm.selectWork(work) placeholder=\\\"search works\\\" required><md-item-template><span md-highlight=vm.searchText md-highlight-flags=^i>{{work.label}}</span></md-item-template></md-autocomplete><md-input-container ng-if=\\\"vm.targets && vm.targets.length > 1\\\"><label>target</label><md-select ng-model=vm.selectedTarget ng-change=vm.setTarget(vm.selectedTarget) required><md-option ng-repeat=\\\"target in vm.targets\\\" ng-value=target>{{target.label}}</md-option></md-select></md-input-container><div class=summary><h2>Summary</h2><div ckeditor ng-model=vm.relationship.description></div></div></div></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/work/volume-edit-dialog.html\",\"<md-dialog flex=80><md-toolbar><div class=md-toolbar-tools><h3>Bibliographic Information Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><div class=md-dialog-content><div layout=row><md-input-container flex><label>volume number</label><input type=text ng-model=vm.volume.volumeNumber required></md-input-container></div><section class=publication layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Publication Information</h2></div></md-toolbar><publication-info-editor ng-model=vm.volume.publicationInfo></publication-info-editor></section><section class=titles layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Titles</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addTitle($event)><md-icon>add</md-icon></md-button></div></md-toolbar><div class=title layout=row ng-repeat=\\\"title in vm.volume.titles\\\"><title-editor ng-model=title flex></title-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteTitle(title, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=authors layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Authors</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.addAuthor(\\'authors\\', $event)\\\"><md-icon>add</md-icon></md-button></div></md-toolbar><div class=author layout=row ng-repeat=\\\"author in vm.volume.authors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteAuthor(\\'authors\\', author, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=\\\"authors other-authors\\\" layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Other Authors</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.addAuthor(\\'otherAuthors\\', $event)\\\"><md-icon>add</md-icon></md-button></div></md-toolbar><div class=\\\"author other-author\\\" layout=row ng-repeat=\\\"author in vm.volume.otherAuthors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteAuthor(\\'otherAuthors\\', author, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section></div></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/work/volume.html\",\"<nav layout=row layout-padding><ol class=breadcrumbs flex><li><a ui-sref=\\\"editor.work({workId: vm.work.id})\\\">{{vm.workTitle.title}}{{vm.workTitle.title && vm.workTitle.subtitle ? \\': \\' : \\'\\'}}{{vm.workTitle.subtitle}}</a></li><li><a ui-sref=\\\"editor.edition({workId: vm.work.id, editionId: vm.edition.id})\\\">{{vm.edition.editionName}}</a></li><li>Volume {{vm.volume.volumeNumber}}</li></ol></nav><div layout=row layout-padding><div layout=column flex=60><section class=\\\"content citation\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Bibliographic Information</h2><span flex></span><md-button class=md-icon-button ng-click=vm.editBibInfo($event)><md-icon>edit</md-icon></md-button></div><p><span class=authors ng-if=\\\"vm.volume.authors && vm.volume.authors.length > 0\\\"><span class=author ng-repeat=\\\"author in vm.volume.authors\\\"><span ng-if=author.authorId><a ui-sref=\\\"editor.person({id: author.authorId})\\\">{{author.lastName}}{{author.lastName && author.firstName ? \\', \\' : \\'\\'}}{{author.firstName}}</a>. </span><span ng-if=!author.authorId>{{author.lastName}}{{author.lastName && author.firstName ? \\', \\' : \\'\\'}}{{author.firstName}}. </span></span></span><span class=title ng-if=vm.title>{{vm.title.title}}{{vm.title.title && vm.title.subtitle ? \\': \\' : \\'\\'}}{{vm.title.subtitle}}. </span><span class=publication ng-if=vm.volume.publicationInfo><span ng-if=vm.volume.publicationInfo.place><span class=place>{{vm.volume.publicationInfo.place}}</span>: </span><span ng-if=vm.volume.publicationInfo.publisher><span class=publisher>{{vm.volume.publicationInfo.publisher}}</span>, </span><span ng-if=vm.volume.publicationInfo.date><time class=date datetime={{vm.volume.publicationInfo.date.calendar}}>{{vm.volume.publicationInfo.date.description}}</time>.</span></span></p></section><section class=\\\"content summary\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Summary</h2><span flex></span><md-button class=md-icon-button ng-click=vm.editSummary($event)><md-icon>edit</md-icon></md-button></div><p ng-if=vm.volume.summary ng-bind-html=vm.volume.summary></p></section></div><div layout=column flex=40><section class=\\\"content references\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Relationships</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addRelationship($event)><md-icon>add</md-icon></md-button></div><div ng-repeat=\\\"type in vm.relationships\\\"><h3 class=content-heading>{{type.label}}</h3><md-list><md-list-item ng-repeat=\\\"relationship in type.relationships\\\" ng-click=vm.openRelationship(relationship)><span ng-repeat=\\\"entity in relationship.entities\\\">{{entity.label}}.</span><md-button class=\\\"md-secondary md-warn md-icon-button\\\" ng-click=\\\"vm.deleteRelationship(relationship, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></div></section><section class=\\\"content copies\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Digital Copies</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addCopy($event)><md-icon>add</md-icon></md-button></div><md-list><md-list-item ng-repeat=\\\"copy in vm.volume.copies\\\" ng-click=\\\"vm.editCopy(copy, $event)\\\"><span>{{copy.title}}</span><md-button class=\\\"md-secondary md-icon-button md-warn\\\" ng-click=\\\"vm.deleteCopy(copy, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></section></div></div>\");\n$templateCache.put(\"app/work/work-edit-dialog.html\",\"<md-dialog flex=80><md-toolbar><div class=md-toolbar-tools><h3>Bibliographic Information Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><div class=md-dialog-content><section class=titles layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Titles</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addTitle($event)><md-icon>add</md-icon></md-button></div></md-toolbar><div class=title layout=row ng-repeat=\\\"title in vm.work.titles\\\"><title-editor ng-model=title flex></title-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteTitle(title, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=authors layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Authors</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.addAuthor(\\'authors\\', $event)\\\"><md-icon>add</md-icon></md-button></div></md-toolbar><div class=author layout=row ng-repeat=\\\"author in vm.work.authors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteAuthor(\\'authors\\', author, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=\\\"authors other-authors\\\" layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Other Authors</h2><span flex></span><md-button class=md-icon-button ng-click=\\\"vm.addAuthor(\\'otherAuthors\\', $event)\\\"><md-icon>add</md-icon></md-button></div></md-toolbar><div class=\\\"author other-author\\\" layout=row ng-repeat=\\\"author in vm.work.otherAuthors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"vm.deleteAuthor(\\'otherAuthors\\', author, $event)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section></div></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/work/work.html\",\"<nav layout=row layout-padding><ol class=breadcrumbs flex><li>{{vm.bcTitle.title}}{{vm.bcTitle && vm.bcTitle.subtitle ? \\': \\' : \\'\\'}}{{vm.bcTitle.subtitle}}</li></ol></nav><div layout=row layout-padding><div layout=column flex=60><section class=\\\"content citation\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Bibliographic Information</h2><span flex></span><md-button class=md-icon-button ng-click=vm.editBibInfo($event)><md-icon>edit</md-icon></md-button></div><p><span class=authors ng-if=\\\"vm.work.authors && vm.work.authors.length > 0\\\"><span class=author ng-repeat=\\\"author in vm.work.authors\\\"><span ng-if=author.authorId><a ui-sref=\\\"editor.person({id: author.authorId})\\\">{{author.lastName}}{{author.lastName && author.firstName ? \\', \\' : \\'\\'}}{{author.firstName}}</a>. </span><span ng-if=!author.authorId>{{author.lastName}}{{author.lastName && author.firstName ? \\', \\' : \\'\\'}}{{author.firstName}}. </span></span></span><span class=title ng-if=vm.title>{{vm.title.title}}{{vm.title.title && vm.title.subtitle ? \\': \\' : \\'\\'}}{{vm.title.subtitle}}.</span></p></section><section class=\\\"content summary\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Summary</h2><span flex></span><md-button class=md-icon-button ng-click=vm.editSummary($event)><md-icon>edit</md-icon></md-button></div><p ng-if=vm.work.summary ng-bind-html=vm.work.summary></p></section><section class=\\\"content editions\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Editions</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addEdition($event)><md-icon>add</md-icon></md-button></div><md-list><md-list-item ng-repeat=\\\"edition in vm.work.editions\\\" ui-sref=\\\"editor.edition({workId: vm.work.id, editionId: edition.id})\\\"><span>{{edition.editionName}}</span><md-button class=\\\"md-secondary md-icon-button md-warn\\\" ng-click=\\\"vm.deleteEdition(edition, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></section></div><div layout=column flex=40><section class=\\\"content references\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Relationships</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addRelationship($event)><md-icon>add</md-icon></md-button></div><div ng-repeat=\\\"type in vm.relationships\\\"><h3 class=content-heading>{{type.label}}</h3><md-list><md-list-item ng-repeat=\\\"relationship in type.relationships\\\" ng-click=vm.openRelationship(relationship)><span ng-repeat=\\\"entity in relationship.entities\\\">{{entity.label}}.</span><md-button class=\\\"md-secondary md-warn md-icon-button\\\" ng-click=\\\"vm.deleteRelationship(relationship, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></div></section><section class=\\\"content copies\\\"><div class=toolbar layout=row layout-align=\\\"start center\\\"><h2 class=content-heading>Digital Copies</h2><span flex></span><md-button class=md-icon-button ng-click=vm.addCopy($event)><md-icon>add</md-icon></md-button></div><md-list><md-list-item ng-repeat=\\\"copy in vm.work.copies\\\" ng-click=\\\"vm.editCopy(copy, $event)\\\"><span>{{copy.title}}</span><md-button class=\\\"md-secondary md-icon-button md-warn\\\" ng-click=\\\"vm.deleteCopy(copy, $event)\\\"><md-icon>delete</md-icon></md-button></md-list-item></md-list></section></div></div>\");\n$templateCache.put(\"app/components/date-editor/date-editor.html\",\"<div layout=row><md-input-container flex><label>date</label><input type=text ng-model=date.description></md-input-container><md-input-container flex><label>ISO-8601 date</label><input type=datetime ng-model=date.calendar></md-input-container></div>\");\n$templateCache.put(\"app/components/summary-edit-dialog/summary-edit-dialog.html\",\"<md-dialog flex=50><md-toolbar><div class=md-toolbar-tools><h3>Summary Editor</h3><span flex></span><md-button class=md-icon-button ng-click=vm.cancel()><md-icon>close</md-icon></md-button></div></md-toolbar><form ng-submit=vm.close()><md-dialog-content><!-- material-compliant padding not used since WYSIWYG text editor *is* the UI --><summary-editor ng-model=vm.summary></summary-editor></md-dialog-content><md-dialog-actions><md-button ng-click=vm.cancel()>Cancel</md-button><md-button class=md-primary type=submit>Done</md-button></md-dialog-actions></form></md-dialog>\");\n$templateCache.put(\"app/components/summary-editor/summary-editor.html\",\"<div ckeditor ng-model=summary></div>\");\n$templateCache.put(\"app/person/components/event-editor/event-editor.html\",\"<div layout=column><div layout=row><md-input-container flex><label>location</label><input type=text ng-model=event.location></md-input-container><date-editor ng-model=event.date flex></date-editor></div><div layout=row layout-padding><div flex><h2>Description</h2><div flex ckeditor ng-model=event.description></div></div></div></div>\");\n$templateCache.put(\"app/person/components/name-editor/name-editor.html\",\"<div layout=column><div layout=row><md-input-container flex=10><label>title</label><input type=text ng-model=name.title></md-input-container><md-input-container flex=30><label>given</label><input type=text ng-model=name.givenName></md-input-container><md-input-container flex=20><label>middle</label><input type=text ng-model=name.middleName></md-input-container><md-input-container flex=30><label>family</label><input type=text ng-model=name.familyName></md-input-container><md-input-container flex=10><label>suffix</label><input type=text ng-model=name.suffix></md-input-container></div><md-input-container><label>display label</label><input type=text ng-model=name.label required></md-input-container></div>\");\n$templateCache.put(\"app/task/components/work-editor/work-editor-item.html\",\"<div layout=row layout-align=\\\"center center\\\" ng-if=!vm.loaded><md-progress-circular md-mode=indeterminate></md-progress-circular></div><div ng-if=vm.loaded><work-editor ng-model=vm.work></work-editor></div>\");\n$templateCache.put(\"app/work/components/author-ref-editor/author-ref-editor.html\",\"<div layout=column><div layout=row><md-autocomplete required md-items=\\\"item in vm.authorRoles\\\" md-item-text=role md-min-length=0 md-search-text=ref.role md-selected-item-change=\\\"ref.role = item\\\" md-floating-label=role><md-item-template><span md-highlight-text=ref.role>{{item}}</span></md-item-template></md-autocomplete><md-input-container flex><label>first name</label><input type=text ng-model=ref.firstName></md-input-container><md-input-container flex><label>last name</label><input type=text ng-model=ref.lastName></md-input-container></div><div layout=row><md-autocomplete flex md-items=\\\"person in vm.getResults(vm.linkAuthorSearchText)\\\" md-item-text=person.label md-search-text=vm.linkAuthorSearchText md-search-text-change=vm.searchPeople(vm.linkAuthorSearchText) md-selected-item-change=vm.setLinkedAuthor(person) md-floating-label=\\\"linked author\\\"><span md-highlight-text=vm.linkAuthorSearchText>{{person.label}}</span></md-autocomplete></div></div>\");\n$templateCache.put(\"app/work/components/copy-editor/copy-editor.html\",\"<ng-form name=copyForm layout=column flex><md-input-container><label for=title>Title</label><input type=text name=title id=title ng-model=copy.title></md-input-container><div layout=row><md-input-container><label for=type>Type</label><md-select name=type id=type ng-model=copy.type required ng-change=\\\"vm.setProperties(copy.type, copyUrl)\\\"><md-option ng-repeat=\\\"handler in vm.refHandlers\\\" value={{handler.id}}>{{handler.display}}</md-option></md-select></md-input-container><md-input-container flex><label for=url>URL</label><input type=url name=url id=url ng-model=copyUrl ng-change=\\\"vm.setProperties(copy.type, copyUrl)\\\"></md-input-container></div><ul class=\\\"properties properties-inline\\\"><li ng-repeat=\\\"(key, value) in copy.properties\\\"><span class=label>{{key}}</span> <span class=value>{{value}}</span></li></ul><md-input-container><label for=rights>Description of Rights</label><input type=text name=rights id=rights ng-model=copy.rights></md-input-container><h3>Summary</h3><summary-editor ng-model=copy.summary flex></summary-editor></ng-form>\");\n$templateCache.put(\"app/work/components/edition-editor/edition-editor.html\",\"<div layout=row><md-input-container flex><label>edition name</label><input type=text ng-model=edition.editionName required></md-input-container></div><section class=publication layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Publication Information</h2></div></md-toolbar><publication-info-editor ng-model=edition.publicationInfo flex></publication-info-editor></section><section class=titles layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Titles</h2><span flex></span><md-button class=md-icon-button ng-click=edition.titles.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=title layout=row ng-repeat=\\\"title in edition.titles\\\"><title-editor ng-model=title flex></title-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"edition.titles.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=authors layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Authors</h2><span flex></span><md-button class=md-icon-button ng-click=edition.authors.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=author layout=row ng-repeat=\\\"author in edition.authors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"edition.authors.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=\\\"authors other-authors\\\" layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Other Authors</h2><span flex></span><md-button class=md-icon-button ng-click=edition.otherAuthors.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=\\\"author other-author\\\" layout=row ng-repeat=\\\"author in edition.otherAuthors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"edition.otherAuthors.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=summary><h2>Summary</h2><summary-editor ng-model=edition.summary flex></summary-editor></section><section class=volumes><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Volumes</h2><span flex></span><md-button class=md-icon-button ng-click=vm.createVolume()><md-icon>add</md-icon></md-button></div></md-toolbar><md-whiteframe class=volume layout=column layout-margin ng-repeat=\\\"volume in vm.volumes\\\" ng-class=\\\"{\\'md-whiteframe-2dp\\': !volume.focused, \\'md-whiteframe-8dp\\': volume.focused}\\\"><h3 layout=row><div flex layout=row layout-align=\\\"start center\\\" ng-click=\\\"volume.focused = !volume.focused\\\"><md-icon>{{ edition.focused ? \\'expand_less\\' : \\'expand_more\\'}}</md-icon><span>Volume {{volume.model.volumeNumber}}</span> <span flex></span></div><md-button class=\\\"md-icon-button md-warn\\\" ng-click=vm.deleteVolume($index)><md-icon>delete</md-icon></md-button></h3><div slide-toggle=volume.focused><volume-editor ng-model=volume.model flex></volume-editor></div></md-whiteframe></section><section class=copies><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Digital Copies</h2><span flex></span><md-button class=md-icon-button ng-click=edition.copies.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=copy layout=column ng-repeat=\\\"copy in edition.copies\\\"><div layout=row><copy-editor ng-model=copy flex></copy-editor><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"edition.copies.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></div></div></section>\");\n$templateCache.put(\"app/work/components/publication-info-editor/publication-info-editor.html\",\"<div layout=row><md-input-container flex><label>publisher</label><input type=text ng-model=pubInfo.publisher></md-input-container><md-input-container flex><label>location</label><input type=text ng-model=pubInfo.place></md-input-container><date-editor ng-model=pubInfo.date flex></date-editor></div>\");\n$templateCache.put(\"app/work/components/title-editor/title-editor.html\",\"<div layout=row><md-input-container><label>type</label><md-select ng-model=title.type required><md-option value=bibliographic>bibliographic</md-option><md-option value=canonical>canonical</md-option><md-option value=short>short</md-option></md-select></md-input-container><md-input-container flex><label>title</label><input type=text ng-model=title.title required><div ng-switch=title.type><small ng-switch-when=bibliographic>the full title as published on the work</small> <small ng-switch-when=canonical>title by which the work is commonly known in the academic realm</small> <small ng-switch-when=short>shortened title coloquially used by the public</small></div></md-input-container><md-input-container flex><label>subtitle</label><input type=text ng-model=title.subtitle></md-input-container></div>\");\n$templateCache.put(\"app/work/components/volume-editor/volume-editor.html\",\"<div layout=row><md-input-container flex><label>volume number</label><input type=text ng-model=volume.volumeNumber required></md-input-container></div><section class=publication layout=column><h2>Publication Information</h2><publication-info-editor ng-model=volume.publicationInfo></publication-info-editor></section><section class=titles layout=column><h2 layout=row><span flex>Titles</span><md-button class=md-icon-button ng-click=volume.titles.push({})><md-icon>add</md-icon></md-button></h2><div class=title layout=row ng-repeat=\\\"title in volume.titles\\\"><title-editor ng-model=title flex></title-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"volume.titles.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=authors layout=column><h2 layout=row><span flex>Authors</span><md-button class=md-icon-button ng-click=volume.authors.push({})><md-icon>add</md-icon></md-button></h2><div class=author layout=row ng-repeat=\\\"author in volume.authors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"volume.authors.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=\\\"authors other-authors\\\" layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Other Authors</h2><span flex></span><md-button class=md-icon-button ng-click=volume.otherAuthors.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=\\\"author other-author\\\" layout=row ng-repeat=\\\"author in volume.otherAuthors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"volume.otherAuthors.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=summary><h2>Summary</h2><summary-editor ng-model=volume.summary flex></summary-editor></section><section class=copies><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Digital Copies</h2><span flex></span><md-button class=md-icon-button ng-click=volume.copies.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=copy layout=column ng-repeat=\\\"copy in volume.copies\\\"><div layout=row><copy-editor ng-model=copy flex></copy-editor><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"volume.copies.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></div></div></section>\");\n$templateCache.put(\"app/work/components/work-editor/work-editor.html\",\"<section class=titles layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Titles</h2><span flex></span><md-button class=md-icon-button ng-click=work.titles.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=title layout=row ng-repeat=\\\"title in work.titles\\\"><title-editor ng-model=title flex></title-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"work.titles.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=authors layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Authors</h2><span flex></span><md-button class=md-icon-button ng-click=work.authors.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=author layout=row ng-repeat=\\\"author in work.authors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"work.authors.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=\\\"authors other-authors\\\" layout=column><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Other Authors</h2><span flex></span><md-button class=md-icon-button ng-click=work.otherAuthors.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=\\\"author other-author\\\" layout=row ng-repeat=\\\"author in work.otherAuthors\\\"><author-ref-editor ng-model=author flex></author-ref-editor><md-input-container><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"work.otherAuthors.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></md-input-container></div></section><section class=summary><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Summary</h2></div></md-toolbar><summary-editor ng-model=work.summary flex></summary-editor></section><section class=editions><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Editions</h2><span flex></span><md-button class=md-icon-button ng-click=vm.createEdition()><md-icon>add</md-icon></md-button></div></md-toolbar><md-whiteframe class=edition layout=column layout-margin ng-repeat=\\\"edition in vm.editions\\\" ng-class=\\\"{ \\'md-whiteframe-2dp\\': !edition.focused, \\'md-whiteframe-8dp\\': edition.focused }\\\"><h3 layout=row><div flex layout=row layout-align=\\\"start center\\\" ng-click=\\\"edition.focused = !edition.focused\\\"><md-icon>{{ edition.focused ? \\'expand_less\\' : \\'expand_more\\'}}</md-icon><span>{{edition.model.editionName}}</span> <span flex></span></div><md-button class=\\\"md-icon-button md-warn\\\" ng-click=vm.deleteEdition($index)><md-icon>delete</md-icon></md-button></h3><div slide-toggle=edition.focused><edition-editor ng-model=edition.model flex></edition-editor></div></md-whiteframe></section><section class=copies><md-toolbar class=md-hue-3><div class=md-toolbar-tools><h2>Digital Copies</h2><span flex></span><md-button class=md-icon-button ng-click=work.copies.push({})><md-icon>add</md-icon></md-button></div></md-toolbar><div class=copy layout=column ng-repeat=\\\"copy in work.copies\\\"><div layout=row><copy-editor ng-model=copy flex></copy-editor><md-button class=\\\"md-icon-button md-warn\\\" ng-click=\\\"work.copies.splice($index, 1)\\\"><md-icon>delete</md-icon></md-button></div></div></section>\");}]);"],"sourceRoot":"/source/"}